/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package googo.pmms.project2.frames;

import googo.pmms.project2.accountsHelper.Formartter;
import googo.pmms.project2.accountsHelper.fileInputOutPutStreams;
import googo.pmms.project2.databases.DatabaseQuaries;
import googo.pmms.project2.excel.CreateExcelWorkBook;
import googo.pmms.project2.frameHelper.HeaderRenderer;
import googo.pmms.project2.frameHelper.IUpdateText;
import googo.pmms.project2.frameHelper.ObjectTableModel;
import googo.pmms.project2.frameHelper.ReportsBoolenaModelData;
import googo.pmms.project2.reportsHelper.ReportsPDFFormulars;
import java.awt.Color;
import java.awt.Component;
import static java.awt.Component.CENTER_ALIGNMENT;
import static java.awt.Component.LEFT_ALIGNMENT;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.print.PrinterException;
import java.io.File;
import java.io.IOException;
import static java.lang.Double.parseDouble;
import static java.lang.Integer.parseInt;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing. tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeSelectionModel;

/**
 *
 * @author SSRN
 */
public class LedgerReconcilliation extends javax.swing.JFrame  implements  MouseListener, IUpdateText, ActionListener, KeyListener,Runnable {
  String userId;
    DecimalFormat NumberFormat =new DecimalFormat("#,###");
      DatabaseQuaries dbq =new DatabaseQuaries();
               Formartter ffm= new Formartter();
                  fileInputOutPutStreams fios= new fileInputOutPutStreams();
                  ReportsPDFFormulars rpdf = new ReportsPDFFormulars();
                      SimpleDateFormat sdk =new SimpleDateFormat("dd.MM.yyyy");
                       CreateExcelWorkBook writeExcel= new CreateExcelWorkBook();
                           SimpleDateFormat sdf =new SimpleDateFormat("dd.MM.yyyy");
               List            amortDetails;
    /**
     * Creates new form LedgerReconcilliation
     */
    public LedgerReconcilliation(String userID) {
              Formartter ffm= new Formartter();
this.userId=userID;
        initComponents();
        
        jTable2.setAutoCreateRowSorter(true);
         jTable1.setAutoCreateRowSorter(true);
 jTree1.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
       jTree1.addMouseListener( this);
            java.awt.Image img = new ImageIcon(System.getProperty("user.dir")+"/"+"ICON_LOGO.jpg").getImage();
      this.setIconImage(img);
      this.setTitle("MAIN RECONCILLIATION MODULE-"+dbq.title(userId)); 
jTable1.addMouseListener(this);


 jTable1.setAlignmentX(LEFT_ALIGNMENT);
jTable1.setAlignmentY(CENTER_ALIGNMENT);
//jTable1.setAutoscrolls(true);
jTable1.setShowHorizontalLines(true);
jTable1.setShowGrid(true);
jTable1.setRowHeight(30);
jTable1.setGridColor(Color.gray);

   
jTable2.addMouseListener(this);

 jTable2.setAlignmentX(LEFT_ALIGNMENT);
jTable2.setAlignmentY(CENTER_ALIGNMENT);
//jTable2.setAutoscrolls(true);
jTable2.setShowHorizontalLines(true);
jTable2.setShowGrid(true);
jTable2.setRowHeight(30);
jTable2.setGridColor(Color.gray);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTable1Panel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTable2jPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton51 = new javax.swing.JButton();
        jButton50 = new javax.swing.JButton();
        jButton49 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jButton38 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jButton44 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        jButton45 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        jButton47 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(2147483647, 2147483647));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(java.awt.SystemColor.activeCaption);
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        jTree1.setBackground(java.awt.SystemColor.activeCaption);
        jTree1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTree1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Log Out");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane2.setViewportView(jTree1);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(0, 40, 120, 600);

        jPanel2.setBackground(java.awt.SystemColor.activeCaption);
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setForeground(java.awt.SystemColor.controlLtHighlight);
        jPanel2.setLayout(null);

        jComboBox1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Maintain Existing Items", "Maintain Missing Items" }));
        jComboBox1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(jComboBox1);
        jComboBox1.setBounds(280, 0, 180, 40);

        jLabel1.setBackground(java.awt.SystemColor.activeCaption);
        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(java.awt.SystemColor.controlLtHighlight);
        jLabel1.setText("To");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(jLabel1);
        jLabel1.setBounds(790, 0, 50, 40);

        jLabel3.setBackground(java.awt.SystemColor.activeCaption);
        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setForeground(java.awt.SystemColor.controlLtHighlight);
        jLabel3.setText("Select Recon Criteria");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(jLabel3);
        jLabel3.setBounds(120, 0, 160, 40);
        jPanel2.add(jTextField2);
        jTextField2.setBounds(840, 0, 110, 40);

        jLabel4.setBackground(java.awt.SystemColor.activeCaption);
        jLabel4.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        jLabel4.setForeground(java.awt.SystemColor.controlLtHighlight);
        jLabel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.add(jLabel4);
        jLabel4.setBounds(120, 0, 1100, 40);
        jLabel4.setVisible(false);

        jLabel5.setBackground(java.awt.SystemColor.activeCaption);
        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setForeground(java.awt.SystemColor.controlLtHighlight);
        jLabel5.setText("From");
        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(jLabel5);
        jLabel5.setBounds(610, 0, 50, 40);

        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/calender.png"))); // NOI18N
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton21);
        jButton21.setBounds(770, 0, 20, 40);

        jButton22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/calender.png"))); // NOI18N
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton22);
        jButton22.setBounds(950, 0, 20, 40);
        jPanel2.add(jTextField3);
        jTextField3.setBounds(660, 0, 110, 40);

        jLabel6.setBackground(java.awt.SystemColor.activeCaption);
        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setForeground(java.awt.SystemColor.controlLtHighlight);
        jLabel6.setText("Select Date Range");
        jLabel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(jLabel6);
        jLabel6.setBounds(460, 0, 150, 40);

        jButton6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton6.setText("Refresh");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6);
        jButton6.setBounds(0, 0, 120, 40);

        jLabel7.setBackground(java.awt.SystemColor.activeCaption);
        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 51));
        jLabel7.setText("Double Click On Ledger From Table");
        jLabel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.add(jLabel7);
        jLabel7.setBounds(970, 0, 250, 40);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 1220, 40);

        jButton1.setBackground(java.awt.SystemColor.activeCaption);
        jButton1.setForeground(new java.awt.Color(0, 153, 102));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/Reconcile.jpg"))); // NOI18N
        jButton1.setText("Reconcile");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(720, 640, 150, 40);
        jButton1.setEnabled(false);
        jPanel1.add(jTextField1);
        jTextField1.setBounds(1010, 640, 200, 40);

        jTable1Panel4.setBackground(java.awt.SystemColor.activeCaption);
        jTable1Panel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1Panel4.setLayout(null);

        jTable1.setBackground(java.awt.SystemColor.activeCaption);
        jTable1.setForeground(java.awt.SystemColor.controlLtHighlight);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable1Panel4.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 1100, 560);

        jButton2.setBackground(java.awt.SystemColor.activeCaption);
        jButton2.setForeground(new java.awt.Color(0, 153, 102));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/printit.png"))); // NOI18N
        jButton2.setText("Print");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jTable1Panel4.add(jButton2);
        jButton2.setBounds(0, 560, 150, 40);

        jButton3.setBackground(java.awt.SystemColor.activeCaption);
        jButton3.setForeground(new java.awt.Color(0, 153, 102));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/pdf.jpg"))); // NOI18N
        jButton3.setText("Export PDF");
        jTable1Panel4.add(jButton3);
        jButton3.setBounds(150, 560, 150, 40);

        jButton4.setBackground(java.awt.SystemColor.activeCaption);
        jButton4.setForeground(new java.awt.Color(0, 153, 102));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/excel.png"))); // NOI18N
        jButton4.setText("Export Excel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jTable1Panel4.add(jButton4);
        jButton4.setBounds(300, 560, 150, 40);

        jButton5.setBackground(java.awt.SystemColor.activeCaption);
        jButton5.setForeground(new java.awt.Color(0, 153, 102));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/email.jpg"))); // NOI18N
        jButton5.setText("Send Email");
        jTable1Panel4.add(jButton5);
        jButton5.setBounds(450, 560, 150, 40);

        jPanel1.add(jTable1Panel4);
        jTable1Panel4.setBounds(120, 40, 1100, 600);

        jLabel2.setBackground(java.awt.SystemColor.activeCaption);
        jLabel2.setForeground(java.awt.SystemColor.controlLtHighlight);
        jLabel2.setText("Search By Any Field");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(870, 640, 140, 40);

        jTable2jPanel.setBackground(java.awt.SystemColor.activeCaption);
        jTable2jPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable2jPanel.setLayout(null);

        jTable2.setBackground(java.awt.SystemColor.activeCaption);
        jTable2.setForeground(java.awt.SystemColor.controlLtHighlight);
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jTable2jPanel.add(jScrollPane3);
        jScrollPane3.setBounds(0, 0, 1100, 560);

        jButton7.setBackground(java.awt.SystemColor.activeCaption);
        jButton7.setForeground(new java.awt.Color(0, 153, 102));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/printit.png"))); // NOI18N
        jButton7.setText("Print");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jTable2jPanel.add(jButton7);
        jButton7.setBounds(0, 560, 150, 40);

        jButton8.setBackground(java.awt.SystemColor.activeCaption);
        jButton8.setForeground(new java.awt.Color(0, 153, 102));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/pdf.jpg"))); // NOI18N
        jButton8.setText("Export PDF");
        jTable2jPanel.add(jButton8);
        jButton8.setBounds(150, 560, 150, 40);

        jButton9.setBackground(java.awt.SystemColor.activeCaption);
        jButton9.setForeground(new java.awt.Color(0, 153, 102));
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/excel.png"))); // NOI18N
        jButton9.setText("Export Excel");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jTable2jPanel.add(jButton9);
        jButton9.setBounds(300, 560, 150, 40);

        jButton10.setBackground(java.awt.SystemColor.activeCaption);
        jButton10.setForeground(new java.awt.Color(0, 153, 102));
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/email.jpg"))); // NOI18N
        jButton10.setText("Send Email");
        jTable2jPanel.add(jButton10);
        jButton10.setBounds(450, 560, 150, 40);

        jPanel1.add(jTable2jPanel);
        jTable2jPanel.setBounds(120, 40, 1100, 600);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1220, 680);

        jButton51.setBackground(new java.awt.Color(0, 51, 51));
        jButton51.setText("jButton5");
        getContentPane().add(jButton51);
        jButton51.setBounds(1480, 500, 73, 23);

        jButton50.setBackground(java.awt.SystemColor.controlLtHighlight);
        jButton50.setText("jButton5");
        getContentPane().add(jButton50);
        jButton50.setBounds(1440, 400, 73, 23);

        jButton49.setBackground(new java.awt.Color(255, 204, 204));
        jButton49.setText("jButton5");
        getContentPane().add(jButton49);
        jButton49.setBounds(1450, 370, 73, 23);

        jButton30.setBackground(new java.awt.Color(0, 153, 255));
        jButton30.setText("Blue");
        getContentPane().add(jButton30);
        jButton30.setBounds(1480, 310, 53, 23);

        jButton31.setBackground(new java.awt.Color(255, 204, 153));
        jButton31.setText("Blue");
        getContentPane().add(jButton31);
        jButton31.setBounds(1520, 280, 53, 23);

        jButton33.setBackground(new java.awt.Color(152, 198, 94));
        jButton33.setText("Blue");
        getContentPane().add(jButton33);
        jButton33.setBounds(1560, 320, 53, 23);

        jButton34.setBackground(new java.awt.Color(0, 204, 255));
        jButton34.setText("Blue");
        getContentPane().add(jButton34);
        jButton34.setBounds(1620, 310, 53, 23);

        jButton35.setBackground(new java.awt.Color(255, 204, 204));
        jButton35.setText("Blue");
        getContentPane().add(jButton35);
        jButton35.setBounds(1680, 280, 53, 23);

        jButton37.setBackground(new java.awt.Color(204, 153, 255));
        jButton37.setText("Blue");
        getContentPane().add(jButton37);
        jButton37.setBounds(1730, 320, 53, 23);

        jButton38.setBackground(new java.awt.Color(204, 204, 0));
        jButton38.setText("Blue");
        getContentPane().add(jButton38);
        jButton38.setBounds(1680, 340, 53, 23);

        jButton39.setBackground(new java.awt.Color(204, 204, 255));
        jButton39.setText("Blue");
        getContentPane().add(jButton39);
        jButton39.setBounds(1640, 370, 53, 23);

        jButton29.setBackground(new java.awt.Color(0, 204, 204));
        jButton29.setText("Blue");
        getContentPane().add(jButton29);
        jButton29.setBounds(1740, 380, 53, 23);

        jButton42.setBackground(new java.awt.Color(0, 204, 102));
        jButton42.setText("Blue");
        getContentPane().add(jButton42);
        jButton42.setBounds(1770, 390, 53, 23);

        jButton44.setBackground(new java.awt.Color(204, 165, 165));
        jButton44.setText("Blue");
        getContentPane().add(jButton44);
        jButton44.setBounds(1770, 420, 53, 23);

        jButton43.setBackground(new java.awt.Color(204, 204, 204));
        jButton43.setText("Blue");
        getContentPane().add(jButton43);
        jButton43.setBounds(1710, 410, 53, 23);

        jButton45.setBackground(new java.awt.Color(255, 255, 204));
        jButton45.setText("Blue");
        getContentPane().add(jButton45);
        jButton45.setBounds(1610, 460, 53, 23);

        jButton48.setBackground(new java.awt.Color(201, 222, 223));
        jButton48.setText("Blue");
        getContentPane().add(jButton48);
        jButton48.setBounds(1720, 490, 53, 23);

        jButton47.setBackground(new java.awt.Color(204, 255, 204));
        jButton47.setText("Blue");
        getContentPane().add(jButton47);
        jButton47.setBounds(1750, 440, 53, 23);

        jButton52.setBackground(new java.awt.Color(0, 51, 51));
        jButton52.setText("jButton5");
        getContentPane().add(jButton52);
        jButton52.setBounds(1450, 460, 73, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
amortDetails=new ArrayList();
     
        jTable2jPanel.setVisible(false);
      jTable1Panel4  .setVisible(true);
      dbq.fillMeWithAllAccounts(jTable1);
        switch(Math.round(Math.random()*20)+""){

                case "1":
                 jButton49.setBackground(jButton29.getBackground());
                    break;
                case "2":
                    jButton49.setBackground(jButton30.getBackground()); 
                    
                    break;
                case "3":
                     jButton49.setBackground(jButton31.getBackground());
                    break;
                case "4":
                    jButton49.setBackground(jButton29.getBackground()); 
                    break;
                case "5":
                    jButton49.setBackground(jButton33.getBackground()); 
                    break;
                case "6":
                  jButton49.setBackground(jButton34.getBackground());   
                    break;
                case "7":
                   jButton49.setBackground(jButton35.getBackground());  
                    break;
                case "8":
                  jButton49.setBackground(jButton35.getBackground());   
                    break;
                case "9":
                   jButton49.setBackground(jButton37.getBackground());  
                    break;  
                case "10":
                    jButton49.setBackground(jButton38.getBackground()); 
                    break;
                case "11":
                     jButton49.setBackground(jButton39.getBackground());
                    break;
                case "12":
                    jButton49.setBackground(jButton39.getBackground()); 
                    break; 
                case "13":
                     jButton49.setBackground(jButton42.getBackground());
                    break;  
                case "14":
                   jButton49.setBackground(jButton42.getBackground());  
                    break; 
                case "15":
                     jButton49.setBackground(jButton43.getBackground());
                    break;
                case "16":
                  jButton49.setBackground(jButton44.getBackground());   
                    break;  
                case "17":
                     jButton49.setBackground(jButton45.getBackground());
                    break;
                case "18":
                     jButton49.setBackground(jButton45.getBackground());
                    break; 
                case "19":
                     jButton49.setBackground(jButton47.getBackground());
                    break;
                case "20":
                  jButton49.setBackground(jButton48.getBackground());   
                    break;  
             
                        
                    

}
        
        
 switch(Math.round(Math.random()*20)+""){

                case "1":
                 jButton52.setBackground(jButton29.getBackground());
                    break;
                case "2":
                    jButton52.setBackground(jButton30.getBackground()); 
                    
                    break;
                case "3":
                     jButton52.setBackground(jButton31.getBackground());
                    break;
                case "4":
                    jButton52.setBackground(jButton30.getBackground()); 
                    break;
                case "5":
                    jButton52.setBackground(jButton33.getBackground()); 
                    break;
                case "6":
                  jButton52.setBackground(jButton34.getBackground());   
                    break;
                case "7":
                   jButton52.setBackground(jButton35.getBackground());  
                    break;
                case "8":
                  jButton52.setBackground(jButton37.getBackground());   
                    break;
                case "9":
                   jButton52.setBackground(jButton37.getBackground());  
                    break;  
                case "10":
                    jButton52.setBackground(jButton38.getBackground()); 
                    break;
                case "11":
                     jButton52.setBackground(jButton39.getBackground());
                    break;
                case "12":
                    jButton52.setBackground(jButton39.getBackground()); 
                    break; 
                case "13":
                     jButton52.setBackground(jButton42.getBackground());
                    break;  
                case "14":
                   jButton52.setBackground(jButton42.getBackground());  
                    break; 
                case "15":
                     jButton52.setBackground(jButton43.getBackground());
                    break;
                case "16":
                  jButton52.setBackground(jButton44.getBackground());   
                    break;  
                case "17":
                     jButton52.setBackground(jButton45.getBackground());
                    break;
                case "18":
                     jButton52.setBackground(jButton45.getBackground());
                    break; 
                case "19":
                     jButton52.setBackground(jButton47.getBackground());
                    break;
                case "20":
                  jButton52.setBackground(jButton48.getBackground());   
                    break;  
             
                        
                    

}
             
        
        
         HeaderRenderer header = new HeaderRenderer(jTable1.getTableHeader().getDefaultRenderer());   
 sortTable(jTable1,jTextField1);   

        int h=0;

jTable1.setShowHorizontalLines(true);
jTable1.setShowGrid(true);
        jTable1.getColumnModel().getColumns().nextElement().setResizable(false);
        while(h<jTable1.getColumnModel().getColumnCount()){
        jTable1.getColumnModel().getColumn(h).setHeaderRenderer(header);

        if(h==0){
        jTable1.getColumnModel().getColumn(h).setMinWidth(4);
        jTable1.getColumnModel().getColumn(h).setMaxWidth(800);
        jTable1.getColumnModel().getColumn(h).setPreferredWidth(100);

        }
        if(h==1){
        jTable1.getColumnModel().getColumn(h).setMinWidth(4);
        jTable1.getColumnModel().getColumn(h).setMaxWidth(800);
        jTable1.getColumnModel().getColumn(h).setPreferredWidth(400);
        }
        if(h==2){
        jTable1.getColumnModel().getColumn(h).setMinWidth(4);
        jTable1.getColumnModel().getColumn(h).setMaxWidth(800);
        jTable1.getColumnModel().getColumn(h).setPreferredWidth(200);
        }if(h==3){
        jTable1.getColumnModel().getColumn(h).setMinWidth(4);
        jTable1.getColumnModel().getColumn(h).setMaxWidth(800);
        jTable1.getColumnModel().getColumn(h).setPreferredWidth(400);
        }if(h==4){
        jTable1.getColumnModel().getColumn(h).setMinWidth(4);
        jTable1.getColumnModel().getColumn(h).setMaxWidth(800);
        jTable1.getColumnModel().getColumn(h).setPreferredWidth(200);
        }
        h++;

        }
        jTable1.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {

        this.setHorizontalAlignment(JLabel.LEFT);


        if(row==table.getRowCount()-1){
        this.setFont(new Font("Arial",Font.BOLD,20));
        }else{
        this.setFont(new Font("Arial",Font.PLAIN,18));
        }
// this.setText(value.toString());
        
if(col==4){
            String text="";
       
        if(!(value.toString().equals("-")||value.toString().equals(""))){
            
            if(parseDouble(value.toString().replaceAll(",", ""))<0){
            
             text = "("+ffm.formatForStatementNumbers(value.toString().replaceAll(",", ""))+")" ;
            }else{
        text = ffm.formatForStatementNumbers(value.toString().replaceAll(",", "") );
        }
        }
        this.setHorizontalAlignment(RIGHT);
        this.setText(text);
        
        }else{
        this.setText(value.toString());
        }
        if (row%2==0) {
        setBackground(jButton49.getBackground());
        setForeground(jButton51.getBackground());
        if(isSelected){setBackground(Color.CYAN);}
        } else {
        setBackground(jButton50.getBackground());
        setForeground(jButton51.getBackground());
        if(isSelected){setBackground(Color.CYAN);}
        }  


        return this;
        }   
        });
        
     
        
        
    }//GEN-LAST:event_formWindowOpened

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
       Integer z1=510;
      fios.intFileWriterReplace(fios.createFileName("PMMS_Statements", "reports", "calSelection.txt"),z1.toString());  
      Calender frmMain = new Calender();
        frmMain.setIUpdateText(this);  // assuming 'this' is an IUpdateText interface compliant
        frmMain.pack();
        frmMain.setVisible(true);
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
         Integer z1=520;
      fios.intFileWriterReplace(fios.createFileName("PMMS_Statements", "reports", "calSelection.txt"),z1.toString());  
      Calender frmMain = new Calender();
        frmMain.setIUpdateText(this);  // assuming 'this' is an IUpdateText interface compliant
        frmMain.pack();
        frmMain.setVisible(true);
    }//GEN-LAST:event_jButton22ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
         int i=1;
     while(i<=5){
     
     JOptionPane.showMessageDialog(this, "SYSTEM LOG OUT ERROR!!!!!!!!!");
     }
    }//GEN-LAST:event_formWindowClosing

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
     Object[] optionsSF = {"Continue",  "Cancel"};
        int nSF = JOptionPane.showOptionDialog(this,  "Work may not be saved!!!\n"+"Do you want to  continue ?",
        "SAVE PLEASE", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,optionsSF, optionsSF[0]);
        if(nSF==JOptionPane.YES_OPTION){

        LedgerReconcilliation f = new LedgerReconcilliation(userId);
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
        this.dispose();
        }
        else if (nSF==JOptionPane.NO_OPTION){ this.setVisible(true);}
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//  jButton1.setEnabled(false);
        Map<Integer, List<Object>>  d=new HashMap();  List <String>  c=new ArrayList(); List<List> before=new ArrayList();
        
       
        
        ReportsBoolenaModelData original = (ReportsBoolenaModelData)jTable2.getModel();
  

for (int col = 0; col < original.getColumnCount(); col++) {
    
    c.add(original.getColumnName(col));
}



for (int targetRow = 0; targetRow < original.getRowCount(); targetRow++) {
    
    if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Maintain Existing Items")){
        
//    if((boolean)(original.getValueAt(jTable2.convertRowIndexToModel(targetRow), 8))){
//       if((original.getValueAt(jTable2.convertRowIndexToModel(targetRow), 8))!=null){  
 if((boolean)(original.getValueAt(targetRow, 8))){
      
    before.add((List)original.getRow(targetRow));
   
    } 
    
    }else if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Maintain Missing Items")){
        
//     if(!(boolean)(original.getValueAt(jTable2.convertRowIndexToModel(targetRow), 8))){
         if(!(boolean)(original.getValueAt(targetRow, 8))){
//       if((original.getValueAt(jTable2.convertRowIndexToModel(targetRow), 8))!=null){   
  
     before.add((List)original.getRow(targetRow));
       
    }
   
    }
   
    
}
int k=0;
for(List row:before){
d.put(k, row);
k++;
}



   ReportsBoolenaModelData newModel= new ReportsBoolenaModelData( d,c);
   
   jTable2.setModel(newModel);
    HeaderRenderer headerf = new HeaderRenderer(jTable2.getTableHeader().getDefaultRenderer());   
 sortTable(jTable2,jTextField1);   

        int hs=0;

jTable2.setShowHorizontalLines(true);
jTable2.setShowGrid(true);
        jTable2.getColumnModel().getColumns().nextElement().setResizable(false);
        while(hs<jTable2.getColumnModel().getColumnCount()){
        jTable2.getColumnModel().getColumn(hs).setHeaderRenderer(headerf);

        if(hs==0){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(60);

        }
        if(hs==1){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(130);
        }
        if(hs==2){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(130);
        }if(hs==3){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(300);
        }if(hs==4){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(140);
        }if(hs==5){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(140);
        }if(hs==6){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(140);
        }if(hs==7){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(200);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(200);
        }
        if(hs==8){
            
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(30);
        
        }
        hs++;

        }

      
      
    jTable2.repaint();
   

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
             jTable1.print();
         } catch (PrinterException ex) {
             Logger.getLogger(ReportView.class.getName()).log(Level.SEVERE, null, ex);
         }
      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
     
            List<List>  d=new ArrayList();  List c=new ArrayList();
            
        ObjectTableModel original = (ObjectTableModel)jTable1.getModel();
        
for (int col = 0; col < original.getColumnCount(); col++) {  c.add(original.getColumnName(col));}

d.add(c);

for (int targetRow = 0; targetRow < original.getRowCount(); targetRow++) {
    if(!original.getRow(targetRow).isEmpty()){
  if(jTable1.isCellSelected(targetRow, 0)){
        
        d.add(original.getRow(jTable1.convertRowIndexToModel(targetRow)));
  }
    }
}
   String theCounter=getCounter();    
   
writeExcel.creatExcelFromTable(d,"Recon"+sdk.format(new Date(System.currentTimeMillis()))+theCounter,"table"+sdk.format(new Date(System.currentTimeMillis()))+theCounter);
  
generateFile("table"+sdk.format(new Date(System.currentTimeMillis()))+theCounter);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
             jTable2.print();
         } catch (PrinterException ex) {
             Logger.getLogger(ReportView.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
 
            List<List>  d=new ArrayList();  List c=new ArrayList();
            
        ReportsBoolenaModelData original = (ReportsBoolenaModelData)jTable2.getModel();
        
for (int col = 0; col < original.getColumnCount(); col++) {  c.add(original.getColumnName(col));}

d.add(c);

for (int targetRow = 0; targetRow < original.getRowCount(); targetRow++) {
    if(!original.getRow(targetRow).isEmpty()){
          if(jTable2.isCellSelected(targetRow, 0)){
    d.add(original.getRow(jTable2.convertRowIndexToModel(targetRow)));
          }
    }
}

  String theCounter=getCounter();    
   
writeExcel.creatExcelFromTable(d,"Recon"+sdk.format(new Date(System.currentTimeMillis()))+theCounter,"table"+sdk.format(new Date(System.currentTimeMillis()))+theCounter);
  
generateFile("table"+sdk.format(new Date(System.currentTimeMillis()))+theCounter);

    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(LedgerReconcilliation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(LedgerReconcilliation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(LedgerReconcilliation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(LedgerReconcilliation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new LedgerReconcilliation().setVisible(true);
//            }
//        });
//    }
private void sortTable(JTable table,JTextField textField){

   
    
TableRowSorter<TableModel> rowSorter  = new TableRowSorter<>(table.getModel());
                     
                      table.setRowSorter(rowSorter);
                     textField.getDocument().addDocumentListener(new DocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = textField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = textField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
    

}

private void generateFile(String fileName){
  JOptionPane.showMessageDialog(this, fileName);  
   
     if (Desktop.isDesktopSupported()) {
      try {
          // no application registered for PDFs
          
          File myFile = new File(fios.createFileName1("Excel", "Files", fileName+".xlsx"));
        
          Desktop.getDesktop().open(myFile);
      } catch (IOException ex) {
          Logger.getLogger(Reportx.class.getName()).log(Level.SEVERE, null, ex);
      }
     }
    
  }
 public String getCounter(){
String thecounter="";
fios.forceFileExistanceHundred(fios.createFileName("loanApplication", "amortValues", "otherCounters.txt"));

thecounter =""+(parseInt(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "otherCounters.txt")))+1);

fios.stringFileWriter(fios.createFileName("loanApplication", "amortValues", "otherCounters.txt"), thecounter);
return thecounter;
} 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton49;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton50;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel jTable1Panel4;
    private javax.swing.JTable jTable2;
    private javax.swing.JPanel jTable2jPanel;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
 
    
    @Override
    public void mouseClicked(MouseEvent me) {
        if (me.getClickCount()==2){
   if(me.getSource()==jTree1){
    DefaultMutableTreeNode node = (DefaultMutableTreeNode)jTree1.getLastSelectedPathComponent();
    String window =node.toString();
    switch (window){
    
    case "Log Out":
       
    Object[] optionsSGS = {"Continue",  "Cancel"};
    int nSGS = JOptionPane.showOptionDialog(this,  "Work may not be saved!!!\n"+"Do you want to  continue ?",
    "SAVE PLEASE", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,optionsSGS, optionsSGS[0]);
    if(nSGS==JOptionPane.YES_OPTION){
         switch(dbq.title(userId)){
            case "Loans Officer":
         LoanManagmentWindow ffx = new LoanManagmentWindow (userId);
        ffx.setVisible(true);
        Dimension screensx = Toolkit.getDefaultToolkit().getScreenSize();
        ffx.setSize(screensx.getSize());
        ffx.pack();
        this.dispose();
                break;
            case "Accountant":
          PostingEntryWindow fh = new  PostingEntryWindow(userId,amortDetails);
        fh.setVisible(true);
        Dimension screenh = Toolkit.getDefaultToolkit().getScreenSize();
        fh.setSize(screenh.getSize());
        fh.pack();
        this.dispose();
                
                
                break;
            case "Supervisor":
        PostingEntryWindow f = new  PostingEntryWindow(userId,amortDetails);
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
        this.dispose();
                break;
        
        
           case "Manager":
            LoanApprovals fx = new LoanApprovals (userId);
        fx.setVisible(true);
        Dimension screenx = Toolkit.getDefaultToolkit().getScreenSize();
        fx.setSize(screenx.getSize());
        fx.pack();
        this.dispose();
                break;
         case "Cashier":
       PostingEntryWindow fg = new  PostingEntryWindow(userId,amortDetails);
        fg.setVisible(true);
        Dimension screeng = Toolkit.getDefaultToolkit().getScreenSize();
        fg.setSize(screeng.getSize());
        fg.pack();
        this.dispose();
                break;
               case "System Admin":
            CreateNewStaff fxs1 = new CreateNewStaff (userId);
        fxs1.setVisible(true);
        Dimension screenxs1 = Toolkit.getDefaultToolkit().getScreenSize();
        fxs1.setSize(screenxs1.getSize());
        fxs1.pack();
        this.dispose();
                break;
        }
    
    }
    else if (nSGS==JOptionPane.NO_OPTION){ this.setVisible(true);}
    break;
}}
  if(me.getSource()==jTable1){
  
      
      
      int selectedRow =jTable1.getSelectedRow();
                    int selectedColumn =jTable1.getSelectedColumn();
		   if (selectedRow > -1&&selectedColumn>-1)
	   {
	 
         Object cvalue = jTable1.getModel().getValueAt(jTable1.convertRowIndexToModel(selectedRow), 2);
          
          String accountNumber = cvalue.toString();
          if(jTextField3.getText().equals("")||jTextField2.getText().equals("")){
              
   JOptionPane.showMessageDialog(this, "Please first select the Date Range for reconcilliation");
   return;
          }else{
             
          jButton1.setEnabled(true);
            jLabel3.setVisible(false);
            jComboBox1.setVisible(false);
            jLabel4.setVisible(true);
            jLabel6.setVisible(false);
            jLabel5.setVisible(false);
            jTextField3.setVisible(false);
            jButton21.setVisible(false);
            jLabel1.setVisible(false);
            jTextField2.setVisible(false);
            jButton22.setVisible(false);
            jLabel7.setVisible(false);
           jTable2jPanel.setVisible(true);
           
           jTable1Panel4.setVisible(false);
           jLabel4.setText("Account Reconcilliation of: "+dbq.AccountName(accountNumber)+", "+"Account Number:"+" "+accountNumber+" for the period between "+jTextField3.getText().trim()+"  "+"And"+" "+jTextField2.getText().trim());
          rpdf.createReconStatement(jTable2, accountNumber, ffm.forDatabaseWithFullYearBeginningWithDate(jTextField3.getText().trim()),ffm.forDatabaseWithFullYearBeginningWithDate( jTextField2.getText().trim()));
             
      HeaderRenderer headerf = new HeaderRenderer(jTable2.getTableHeader().getDefaultRenderer());   
 sortTable(jTable2,jTextField1);   

        int hs=0;

jTable2.setShowHorizontalLines(true);
jTable2.setShowGrid(true);
        jTable2.getColumnModel().getColumns().nextElement().setResizable(false);
        while(hs<jTable2.getColumnModel().getColumnCount()){
        jTable2.getColumnModel().getColumn(hs).setHeaderRenderer(headerf);

        if(hs==0){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(60);

        }
        if(hs==1){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(130);
        }
        if(hs==2){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(130);
        }if(hs==3){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(300);
        }if(hs==4){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(140);
        }if(hs==5){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(140);
        }if(hs==6){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(140);
        }if(hs==7){
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(200);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(200);
        }
        if(hs==8){
            
        jTable2.getColumnModel().getColumn(hs).setMinWidth(4);
        jTable2.getColumnModel().getColumn(hs).setMaxWidth(800);
        jTable2.getColumnModel().getColumn(hs).setPreferredWidth(30);
        
        }
        hs++;

        }
        jTable2.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {

        this.setHorizontalAlignment(JLabel.LEFT);


        if(row==table.getRowCount()-1){
        this.setFont(new Font("Arial",Font.BOLD,20));
        }else{
        this.setFont(new Font("Arial",Font.PLAIN,18));
        }
// this.setText(value.toString());
        
if(col>=4&&col<=6){
            String text="";
       
        if(!(value.toString().equals("-")||value.toString().equals(""))){
            
            if(parseDouble(value.toString().replaceAll(",", ""))<0){
            
             text = "("+ffm.formatForStatementNumbers(value.toString().replaceAll(",", ""))+")" ;
            }else{
        text = ffm.formatForStatementNumbers(value.toString().replaceAll(",", "") );
        }
        }
        this.setText(text);
        this.setHorizontalAlignment(RIGHT);
        }else{
        this.setText(value.toString());
        }
        if (row%2==0) {
        setBackground(jButton52.getBackground());
        setForeground(jButton51.getBackground());
        if(isSelected){setBackground(Color.CYAN);}
        } else {
        setBackground(jButton50.getBackground());
        setForeground(jButton51.getBackground());
        if(isSelected){setBackground(Color.CYAN);}
        }  


        return this;
        }   
        });  
          
          }
              }
        
      
      
      
      
      
      
  
  
  
  
  }      
  
  if(me.getSource()==jTable2){
     int selectedRow =jTable2.getSelectedRow();
                    int selectedColumn =jTable2.getSelectedColumn();
		   if (selectedRow > -1&&selectedColumn>-1)
	   {
	 
//   JOptionPane.showMessageDialog(this, jTable2.getModel().getValueAt(jTable2.convertRowIndexToModel(selectedRow), 8));
//   JOptionPane.showMessageDialog(this, jTable2.getModel().getValueAt(jTable2.convertRowIndexToModel(selectedRow), 4));
//   JOptionPane.showMessageDialog(this, jTable2.getModel().getValueAt(jTable2.convertRowIndexToModel(selectedRow), 5));
           }
  }
        
        
        
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
        
    }

    @Override
    public void mouseReleased(MouseEvent e) {
      
    }

    @Override
    public void mouseEntered(MouseEvent e) {
       
    }

    @Override
    public void mouseExited(MouseEvent e) {
      
    }

    @Override
    public void updateText(String text) {
        switch( fios.intFileReader(fios.createFileName("PMMS_Statements", "reports", "calSelection.txt"))){ 
                case 510:jTextField3.setText(text);break;    
                case 520:jTextField2.setText(text);break; 
               
                
                    
    }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        
    }

    @Override
    public void keyTyped(KeyEvent e) {
       
    }

    @Override
    public void keyPressed(KeyEvent e) {
      
    }

    @Override
    public void keyReleased(KeyEvent e) {
      
    }

    @Override
    public void run() {
       
    }

}
