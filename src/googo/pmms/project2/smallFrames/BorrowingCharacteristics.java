/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package googo.pmms.project2.smallFrames;

import googo.pmms.project2.accountsHelper.Formartter;
import googo.pmms.project2.accountsHelper.fileInputOutPutStreams;
import googo.pmms.project2.databases.loanDatabaseQuaries;
import googo.pmms.project2.databases.DatabaseQuaries;
import googo.pmms.project2.frameHelper.IUpdateText;
import googo.pmms.project2.frameHelper.ListDataModel;
import googo.pmms.project2.frames.AmotizationCalculator;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

import googo.pmms.project2.frames.PostingEntryWindow;
import googo.pmms.project2.reportsHelper.OtherLoanReports;
import java.awt.Color;
import static java.awt.Component.CENTER_ALIGNMENT;
import static java.awt.Component.LEFT_ALIGNMENT;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author STAT SOLUTIONS
 */
public class BorrowingCharacteristics extends javax.swing.JFrame implements MouseListener, IUpdateText, ActionListener,KeyListener{
String userId;
//JFrame reflection;
//    List amortDetails;
//    DecimalFormat NumberFormat =new DecimalFormat("#,###");
//        SimpleDateFormat sdf =new SimpleDateFormat("dd/MM/yyyy");
    fileInputOutPutStreams fios= new fileInputOutPutStreams();
//    Formartter ffm = new Formartter();
//    Date Trndate,valuedate;
//   ArrayList<String> data4, column1;
//List data5;
//    String text,position;
// Integer Value,Value1;
//    GregorianCalendar cal = new GregorianCalendar(); 
//    
//         BatchPostingHelper bPost=new BatchPostingHelper(); 
//         
//     JdbcConnector csx = new JdbcConnector(fios.stringFileReader(fios.createFileName("emailDetails", "sendMail", "AccountDBDetails.txt"))); ; 
    DatabaseQuaries dbq =new DatabaseQuaries();
     List theCollection;
    loanDatabaseQuaries loan=new loanDatabaseQuaries();
//    Formartter form= new Formartter();
//    AccountNumberCreationDataBase ancdb=new AccountNumberCreationDataBase();
//   ReportsDatabase report =new ReportsDatabase();
//    BalanceSheet bsheet= new BalanceSheet();
//    PostingMain post= new PostingMain();
//    BackUpRestoreDB dbBackUp= new BackUpRestoreDB();
//    CreatingFolders filesW= new CreatingFolders();
//   private PostingEntryWindow.ProcessLoanRepayment laonPay;
//  String completeStatus="Not Complete",flag="Not Flagged"; int temper=0;
//    String batchNumber;
    OtherLoanReports otherLoans=new  OtherLoanReports();
//     LoanSavingsSharesOthers loanSaveShare=new LoanSavingsSharesOthers();
//         ListDataModel model1;
         ListDataModel result;
//         String theAccount="";
//         
////     OtherLoanReports otherLoans=new  OtherLoanReports();
//     
//    List loanPaymentOrder;
//    SimpleDateFormat sdk =new SimpleDateFormat("dd.MM.yyyy");
//  
//        CreateExcelWorkBook writeExcel= new CreateExcelWorkBook();
//    
// int n=0;
//   
//          JOptionPane p;
//    PostingModal model ;
//    JFrame fi, f,fa,fb,fc;
//    Date date;
//  SimpleDateFormat df;
     Formartter fmt= new Formartter();
// AccountNumberCreationDataBase db =new AccountNumberCreationDataBase();
PostingEntryWindow component;

String GroupId;
    public BorrowingCharacteristics(String userId,PostingEntryWindow comp) {
        
         
          
        initComponents();
        this.userId=userId;
        component=comp;
   
        Image img = new ImageIcon(System.getProperty("user.dir")+"/"+"ICON_LOGO.jpg").getImage();
        this.setIconImage(img);
        this.setTitle("OTHER LOAN DETAILS"); 
jTable3.addMouseListener(this);

 jTable3.setAlignmentX(LEFT_ALIGNMENT);
jTable3.setAlignmentY(CENTER_ALIGNMENT);
jTable3.setAutoscrolls(true);
jTable3.setShowHorizontalLines(true);
jTable3.setShowGrid(true);
jTable3.setRowHeight(40);
jTable3.setGridColor(Color.gray);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        newLoanPanel1 = new javax.swing.JPanel();
        jButton77 = new javax.swing.JButton();
        jButton78 = new javax.swing.JButton();
        jButton79 = new javax.swing.JButton();
        jLabel123 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel124 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jCheckBox15 = new javax.swing.JCheckBox();
        jComboBox19 = new javax.swing.JComboBox();
        jLabel125 = new javax.swing.JLabel();
        updateExistingBorrowersDetails1 = new javax.swing.JCheckBox();
        useDefaultBorrowerDetails1 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2GroupAssignmentPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jCheckBox16 = new javax.swing.JCheckBox();
        jButton51 = new javax.swing.JButton();
        jButton50 = new javax.swing.JButton();
        jButton49 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton38 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton47 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton45 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton44 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton46 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton55 = new javax.swing.JButton();
        jButton56 = new javax.swing.JButton();
        jButton57 = new javax.swing.JButton();
        jButton58 = new javax.swing.JButton();
        jButton59 = new javax.swing.JButton();
        jButton60 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton62 = new javax.swing.JButton();
        jButton63 = new javax.swing.JButton();
        jButton64 = new javax.swing.JButton();
        jButton65 = new javax.swing.JButton();
        jButton66 = new javax.swing.JButton();
        jButton67 = new javax.swing.JButton();
        jButton68 = new javax.swing.JButton();
        jButton69 = new javax.swing.JButton();
        jButton70 = new javax.swing.JButton();
        jButton71 = new javax.swing.JButton();
        jButton72 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAutoRequestFocus(false);
        setMaximumSize(new java.awt.Dimension(1120, 700));
        setMinimumSize(new java.awt.Dimension(1120, 700));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setPreferredSize(new java.awt.Dimension(1120, 700));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(java.awt.SystemColor.activeCaption);
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 204, 153), new java.awt.Color(0, 204, 153)));
        jPanel1.setLayout(null);

        newLoanPanel1.setBackground(java.awt.SystemColor.activeCaption);
        newLoanPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.SystemColor.activeCaption, null));
        newLoanPanel1.setForeground(new java.awt.Color(255, 255, 255));
        newLoanPanel1.setLayout(null);

        jButton77.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton77.setText("Other Loan Details");
        jButton77.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton77ActionPerformed(evt);
            }
        });
        newLoanPanel1.add(jButton77);
        jButton77.setBounds(270, 440, 180, 40);
        jButton77.setVisible(false);

        jButton78.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton78.setText("Economic Status");
        jButton78.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton78ActionPerformed(evt);
            }
        });
        newLoanPanel1.add(jButton78);
        jButton78.setBounds(450, 440, 170, 40);
        jButton78.setEnabled(false);
        jButton78.setVisible(false);

        jButton79.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton79.setText("Bio Data");
        jButton79.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton79ActionPerformed(evt);
            }
        });
        newLoanPanel1.add(jButton79);
        jButton79.setBounds(620, 440, 170, 40);
        jButton79.setEnabled(false);
        jButton79.setVisible(false);

        jLabel123.setBackground(java.awt.SystemColor.activeCaption);
        jLabel123.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel123.setForeground(java.awt.SystemColor.controlLtHighlight);
        jLabel123.setText("Group Id");
        jLabel123.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        newLoanPanel1.add(jLabel123);
        jLabel123.setBounds(170, 180, 110, 30);
        jLabel123.setVisible(false);

        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });
        newLoanPanel1.add(jTextField13);
        jTextField13.setBounds(280, 180, 150, 30);
        jTextField13.setText("");
        jTextField13.setEditable(false);
        jTextField13.setVisible(false);

        jLabel124.setBackground(java.awt.SystemColor.activeCaption);
        jLabel124.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel124.setForeground(java.awt.SystemColor.controlLtHighlight);
        jLabel124.setText("Group Name");
        jLabel124.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        newLoanPanel1.add(jLabel124);
        jLabel124.setBounds(430, 180, 100, 30);
        jLabel124.setVisible(false);
        newLoanPanel1.add(jTextField14);
        jTextField14.setBounds(530, 180, 340, 30);
        jTextField14.setText("");
        jTextField14.setEditable(false);
        jTextField14.setVisible(false);

        jCheckBox15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox15.setText("Assign New Group");
        jCheckBox15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox15ActionPerformed(evt);
            }
        });
        newLoanPanel1.add(jCheckBox15);
        jCheckBox15.setBounds(680, 150, 190, 30);
        jCheckBox15.setVisible(false);

        jComboBox19.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBox19.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Individual", "Group" }));
        jComboBox19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox19ActionPerformed(evt);
            }
        });
        newLoanPanel1.add(jComboBox19);
        jComboBox19.setBounds(490, 110, 180, 30);
        jComboBox19.setVisible(false);

        jLabel125.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel125.setText("Borrowing Category");
        jLabel125.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        newLoanPanel1.add(jLabel125);
        jLabel125.setBounds(340, 110, 150, 30);
        jLabel125.setVisible(false);

        updateExistingBorrowersDetails1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        updateExistingBorrowersDetails1.setText("Update Existing Borrower's Details");
        updateExistingBorrowersDetails1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateExistingBorrowersDetails1ActionPerformed(evt);
            }
        });
        newLoanPanel1.add(updateExistingBorrowersDetails1);
        updateExistingBorrowersDetails1.setBounds(550, 60, 330, 30);
        updateExistingBorrowersDetails1.setVisible(false);

        useDefaultBorrowerDetails1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        useDefaultBorrowerDetails1.setText("Use Default Borrower's Details");
        useDefaultBorrowerDetails1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useDefaultBorrowerDetails1ActionPerformed(evt);
            }
        });
        newLoanPanel1.add(useDefaultBorrowerDetails1);
        useDefaultBorrowerDetails1.setBounds(140, 60, 330, 30);
        useDefaultBorrowerDetails1.setSelected(true);
        useDefaultBorrowerDetails1.setVisible(false);

        jButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        newLoanPanel1.add(jButton1);
        jButton1.setBounds(510, 480, 150, 50);

        jButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        newLoanPanel1.add(jButton2);
        jButton2.setBounds(360, 480, 150, 50);

        jPanel2GroupAssignmentPanel1.setBackground(java.awt.SystemColor.activeCaption);
        jPanel2GroupAssignmentPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2GroupAssignmentPanel1.setLayout(null);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jPanel2GroupAssignmentPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(10, 10, 690, 170);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("SEARCH HERE:");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2GroupAssignmentPanel1.add(jLabel3);
        jLabel3.setBounds(220, 180, 100, 30);

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel2GroupAssignmentPanel1.add(jTextField2);
        jTextField2.setBounds(320, 180, 370, 30);

        newLoanPanel1.add(jPanel2GroupAssignmentPanel1);
        jPanel2GroupAssignmentPanel1.setBounds(160, 210, 710, 220);
        jPanel2GroupAssignmentPanel1.setVisible(false);

        jCheckBox16.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox16.setText("Assign Existing Group");
        jCheckBox16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox16ActionPerformed(evt);
            }
        });
        newLoanPanel1.add(jCheckBox16);
        jCheckBox16.setBounds(170, 150, 190, 30);
        jCheckBox16.setVisible(false);

        jPanel1.add(newLoanPanel1);
        newLoanPanel1.setBounds(30, 20, 1050, 560);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 0, 1090, 600);

        jButton51.setBackground(new java.awt.Color(0, 51, 51));
        jButton51.setText("jButton5");
        getContentPane().add(jButton51);
        jButton51.setBounds(1800, 360, 73, 23);

        jButton50.setBackground(java.awt.SystemColor.controlLtHighlight);
        jButton50.setText("jButton5");
        getContentPane().add(jButton50);
        jButton50.setBounds(1790, 330, 73, 23);

        jButton49.setBackground(new java.awt.Color(255, 204, 204));
        jButton49.setText("jButton5");
        getContentPane().add(jButton49);
        jButton49.setBounds(1870, 320, 73, 23);

        jButton31.setBackground(new java.awt.Color(255, 204, 153));
        jButton31.setText("Blue");
        getContentPane().add(jButton31);
        jButton31.setBounds(1810, 310, 53, 23);

        jButton38.setBackground(new java.awt.Color(204, 204, 0));
        jButton38.setText("Blue");
        getContentPane().add(jButton38);
        jButton38.setBounds(1810, 290, 53, 23);

        jButton32.setBackground(new java.awt.Color(0, 153, 153));
        jButton32.setText("Blue");
        getContentPane().add(jButton32);
        jButton32.setBounds(1870, 290, 53, 23);

        jButton47.setBackground(new java.awt.Color(204, 255, 204));
        jButton47.setText("Blue");
        getContentPane().add(jButton47);
        jButton47.setBounds(1930, 290, 53, 23);

        jButton29.setBackground(new java.awt.Color(0, 204, 204));
        jButton29.setText("Blue");
        getContentPane().add(jButton29);
        jButton29.setBounds(1920, 270, 53, 23);

        jButton37.setBackground(new java.awt.Color(204, 153, 255));
        jButton37.setText("Blue");
        getContentPane().add(jButton37);
        jButton37.setBounds(1870, 270, 53, 23);

        jButton33.setBackground(new java.awt.Color(152, 198, 94));
        jButton33.setText("Blue");
        getContentPane().add(jButton33);
        jButton33.setBounds(1810, 270, 53, 23);

        jButton35.setBackground(new java.awt.Color(255, 204, 204));
        jButton35.setText("Blue");
        getContentPane().add(jButton35);
        jButton35.setBounds(1810, 250, 53, 23);

        jButton45.setBackground(new java.awt.Color(255, 255, 204));
        jButton45.setText("Blue");
        getContentPane().add(jButton45);
        jButton45.setBounds(1870, 250, 53, 23);

        jButton42.setBackground(new java.awt.Color(0, 204, 102));
        jButton42.setText("Blue");
        getContentPane().add(jButton42);
        jButton42.setBounds(1920, 230, 53, 23);

        jButton43.setBackground(new java.awt.Color(204, 204, 204));
        jButton43.setText("Blue");
        getContentPane().add(jButton43);
        jButton43.setBounds(1870, 230, 53, 23);

        jButton30.setBackground(new java.awt.Color(0, 153, 255));
        jButton30.setText("Blue");
        getContentPane().add(jButton30);
        jButton30.setBounds(1810, 230, 53, 23);

        jButton36.setBackground(java.awt.SystemColor.activeCaption);
        jButton36.setText("Blue");
        getContentPane().add(jButton36);
        jButton36.setBounds(1810, 210, 53, 23);

        jButton44.setBackground(new java.awt.Color(204, 165, 165));
        jButton44.setText("Blue");
        getContentPane().add(jButton44);
        jButton44.setBounds(1870, 210, 53, 23);

        jButton39.setBackground(new java.awt.Color(204, 204, 255));
        jButton39.setText("Blue");
        getContentPane().add(jButton39);
        jButton39.setBounds(1920, 210, 53, 23);

        jButton41.setBackground(java.awt.SystemColor.activeCaption);
        jButton41.setText("Blue");
        getContentPane().add(jButton41);
        jButton41.setBounds(1920, 190, 53, 23);

        jButton46.setBackground(java.awt.SystemColor.activeCaption);
        jButton46.setText("Blue");
        getContentPane().add(jButton46);
        jButton46.setBounds(1870, 190, 53, 23);

        jButton40.setBackground(java.awt.SystemColor.activeCaption);
        jButton40.setText("Blue");
        getContentPane().add(jButton40);
        jButton40.setBounds(1810, 190, 53, 23);

        jButton48.setBackground(new java.awt.Color(201, 222, 223));
        jButton48.setText("Blue");
        getContentPane().add(jButton48);
        jButton48.setBounds(1870, 170, 53, 23);

        jButton52.setBackground(new java.awt.Color(0, 51, 51));
        jButton52.setText("jButton5");
        getContentPane().add(jButton52);
        jButton52.setBounds(1800, 360, 73, 23);

        jButton53.setBackground(java.awt.SystemColor.controlLtHighlight);
        jButton53.setText("jButton5");
        getContentPane().add(jButton53);
        jButton53.setBounds(1790, 330, 73, 23);

        jButton54.setBackground(new java.awt.Color(255, 204, 204));
        jButton54.setText("jButton5");
        getContentPane().add(jButton54);
        jButton54.setBounds(1870, 320, 73, 23);

        jButton34.setBackground(new java.awt.Color(255, 204, 153));
        jButton34.setText("Blue");
        getContentPane().add(jButton34);
        jButton34.setBounds(1810, 310, 53, 23);

        jButton55.setBackground(new java.awt.Color(204, 204, 0));
        jButton55.setText("Blue");
        getContentPane().add(jButton55);
        jButton55.setBounds(1810, 290, 53, 23);

        jButton56.setBackground(new java.awt.Color(0, 153, 153));
        jButton56.setText("Blue");
        getContentPane().add(jButton56);
        jButton56.setBounds(1870, 290, 53, 23);

        jButton57.setBackground(new java.awt.Color(204, 255, 204));
        jButton57.setText("Blue");
        getContentPane().add(jButton57);
        jButton57.setBounds(1930, 290, 53, 23);

        jButton58.setBackground(new java.awt.Color(0, 204, 204));
        jButton58.setText("Blue");
        getContentPane().add(jButton58);
        jButton58.setBounds(1920, 270, 53, 23);

        jButton59.setBackground(new java.awt.Color(204, 153, 255));
        jButton59.setText("Blue");
        getContentPane().add(jButton59);
        jButton59.setBounds(1870, 270, 53, 23);

        jButton60.setBackground(new java.awt.Color(152, 198, 94));
        jButton60.setText("Blue");
        getContentPane().add(jButton60);
        jButton60.setBounds(1810, 270, 53, 23);

        jButton61.setBackground(new java.awt.Color(255, 204, 204));
        jButton61.setText("Blue");
        getContentPane().add(jButton61);
        jButton61.setBounds(1810, 250, 53, 23);

        jButton62.setBackground(new java.awt.Color(255, 255, 204));
        jButton62.setText("Blue");
        getContentPane().add(jButton62);
        jButton62.setBounds(1870, 250, 53, 23);

        jButton63.setBackground(new java.awt.Color(0, 204, 102));
        jButton63.setText("Blue");
        getContentPane().add(jButton63);
        jButton63.setBounds(1920, 230, 53, 23);

        jButton64.setBackground(new java.awt.Color(204, 204, 204));
        jButton64.setText("Blue");
        getContentPane().add(jButton64);
        jButton64.setBounds(1870, 230, 53, 23);

        jButton65.setBackground(new java.awt.Color(0, 153, 255));
        jButton65.setText("Blue");
        getContentPane().add(jButton65);
        jButton65.setBounds(1810, 230, 53, 23);

        jButton66.setBackground(java.awt.SystemColor.activeCaption);
        jButton66.setText("Blue");
        getContentPane().add(jButton66);
        jButton66.setBounds(1810, 210, 53, 23);

        jButton67.setBackground(new java.awt.Color(204, 165, 165));
        jButton67.setText("Blue");
        getContentPane().add(jButton67);
        jButton67.setBounds(1870, 210, 53, 23);

        jButton68.setBackground(new java.awt.Color(204, 204, 255));
        jButton68.setText("Blue");
        getContentPane().add(jButton68);
        jButton68.setBounds(1920, 210, 53, 23);

        jButton69.setBackground(java.awt.SystemColor.activeCaption);
        jButton69.setText("Blue");
        getContentPane().add(jButton69);
        jButton69.setBounds(1920, 190, 53, 23);

        jButton70.setBackground(java.awt.SystemColor.activeCaption);
        jButton70.setText("Blue");
        getContentPane().add(jButton70);
        jButton70.setBounds(1870, 190, 53, 23);

        jButton71.setBackground(java.awt.SystemColor.activeCaption);
        jButton71.setText("Blue");
        getContentPane().add(jButton71);
        jButton71.setBounds(1810, 190, 53, 23);

        jButton72.setBackground(new java.awt.Color(201, 222, 223));
        jButton72.setText("Blue");
        getContentPane().add(jButton72);
        jButton72.setBounds(1870, 170, 53, 23);

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        
        theCollection=new ArrayList();
 
    if(loan.borrowerExists(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+userId+".txt")))){
         
     useDefaultBorrowerDetails1.setVisible(false); 
     updateExistingBorrowersDetails1.setVisible(true); 
     
     }else if(!loan.borrowerExists(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+userId+".txt")))){
     
     
     useDefaultBorrowerDetails1.setVisible(true); 
     updateExistingBorrowersDetails1.setVisible(false); 
     
     }
//      String accountNumber=fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+this.userId+".txt"));
//        
//        
//       loan.fillWithCycleStatus(jComboBox1,accountNumber); 
//     
//        
//   
//jLabel1.setText("\t\t\t"+"                             Updating Loan Details for "+dbq.AccountName(accountNumber));
////
////        
//        theCollection=new ArrayList();
    }//GEN-LAST:event_formWindowOpened

    private void jButton77ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton77ActionPerformed
 fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected21"+userId+".txt"),"23");
   
 
 
        if(updateExistingBorrowersDetails1.isVisible()){
        
       if(updateExistingBorrowersDetails1.isSelected()){
       addItemInList("Existing Borrower");
         if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Individual")){
      
              addItemInList("Individual");
         addItemInList("Group 1");
            addItemInList("Group 1");
        }else if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Group")){
        
        addItemInList("Group");
        
//        if(jCheckBox15.isSelected()){
        
            if(jTextField13.getText().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Id!!!!");
            return;
            }else{
             if(jTextField13.getText().equalsIgnoreCase("Select Group Id")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Id!!!!");
            return;
            }else{
             if(jTextField14.getText().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Name!!!!");
            return;
            }else{
             if(jTextField14.getText().equalsIgnoreCase("Select")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Name!!!!");
            return;
            }else{
            addItemInList(jTextField13.getText());
            addItemInList(jTextField14.getText());
            }
            
            }
            
            }
            
            }
            
//        }else if(!jCheckBox15.isSelected()){
//        
//             addItemInList("Group 1");
//            addItemInList("Group 1");
//            
//        
//        }
        
        }
        
       
       
       }else if(!updateExistingBorrowersDetails1.isSelected()){
      
          
       
       }
        
        }else if(!updateExistingBorrowersDetails1.isVisible()){
            
             String  existance="First Time Borrower";
     if(loan.borrowerExists(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+userId+".txt")))){
     existance="Existing Borrower";
     
     }else if(!loan.borrowerExists(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+userId+".txt")))){
     
     
      existance="First Time Borrower";
     
     
     }
            
            addItemInList(existance);
            
          if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Individual")){
      
              addItemInList("Individual");
         addItemInList("Group 1");
        addItemInList("Group 1");
        }else if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Group")){
        
            
            addItemInList("Group");
//        addItemInList("Group 1");
//        addItemInList("Group 1");
        if(jCheckBox15.isSelected()){
        
            if(jTextField13.getText().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Id!!!!");
            return;
            }else{
             if(jTextField13.getText().equalsIgnoreCase("Select Group Id")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Id!!!!");
            return;
            }else{
             if(jTextField14.getText().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Name!!!!");
            return;
            }else{
             if(jTextField14.getText().equalsIgnoreCase("Select")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Name!!!!");
            return;
            }else{
            addItemInList(jTextField13.getText());
            addItemInList(jTextField14.getText());
            }
            
            }
            
            }
            
            }
            
        }else if(!jCheckBox15.isSelected()){
        
             addItemInList("Group 1");
            addItemInList("Group 1");
            
        
        }
        
        }
        
        }
        
      
        
        
        addItemInList("Cycle"+loan.cycleNumber(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+userId+".txt"))));

      
    fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "OtherLoanDetails"+this.userId+".txt"),"7");
        jButton77.setEnabled(false);
            jButton78.setEnabled(false);
//    jButton22.setEnabled(true);
       OtherLoanDetails1 frm = new OtherLoanDetails1(userId,(BorrowingCharacteristics)this);
       
        frm.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        frm.setSize(screen.getSize());
//        frm.setUserID(userId);
        frm.pack();
    }//GEN-LAST:event_jButton77ActionPerformed

    private void jButton78ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton78ActionPerformed
  fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected2"+userId+".txt"),"23");
        fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "OtherLoanDetails"+this.userId+".txt"),"77");
    jButton77.setEnabled(false);
            jButton78.setEnabled(false);
//    jButton22.setEnabled(true);
       OtherLoanDetails1 frm = new OtherLoanDetails1(userId,(BorrowingCharacteristics)this);
       
        frm.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        frm.setSize(screen.getSize());
//        frm.setUserID(userId);
        frm.pack();
    }//GEN-LAST:event_jButton78ActionPerformed

    private void jButton79ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton79ActionPerformed
  
        fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected3"+userId+".txt"),"23");  
  
        fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "OtherLoanDetails"+this.userId+".txt"),"777");
     jButton77.setEnabled(false);
            jButton78.setEnabled(false);
    jButton79.setEnabled(false);
//        jButton17.setEnabled(true);
       OtherLoanDetails1 frm = new OtherLoanDetails1(userId,(BorrowingCharacteristics)this);
       
        frm.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        frm.setSize(screen.getSize());
//        frm.setUserID(userId);
        frm.pack();
    }//GEN-LAST:event_jButton79ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jCheckBox15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox15ActionPerformed
      if(jCheckBox15.isSelected()){
  jLabel123.setVisible(true);
jTextField13.setVisible(true);
        jLabel124.setVisible(true);
                jTextField14.setVisible(true);
        jTextField14.setEditable(true);
   jTextField14.setText("");
                jTextField13.setText(loan.groupNumber(this));
     jCheckBox16.setSelected(false);
     jPanel2GroupAssignmentPanel1.setVisible(false);
//        jCheckBox15.setSelected(false);
 }else if(!jCheckBox15.isSelected()){
  jLabel123.setVisible(false);
jTextField13.setVisible(false);
        jLabel124.setVisible(false);
                jTextField14.setVisible(false);
        jTextField14.setEditable(false);
//        jComboBox12GroupId1.setVisible(false);
//        jComboBox11GroupName1.setVisible(false);
//        loan.fillWithGroupIds(jComboBox12GroupId1);
//        loan.fillWithGroupNames(jComboBox11GroupName1);
    jCheckBox16.setSelected(false);
        jCheckBox15.setSelected(false);
         jPanel2GroupAssignmentPanel1.setVisible(false);
 }
    }//GEN-LAST:event_jCheckBox15ActionPerformed

    private void jComboBox19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox19ActionPerformed
           
        if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Individual")){
         
          jCheckBox16.setVisible(false);
                  jCheckBox15.setVisible(false);
                  jButton77.setVisible(true);
                          jButton78.setVisible(true);
                          jButton79.setVisible(true);
                          jCheckBox16.setVisible(false);
                                  jCheckBox15.setVisible(false);
                                  jLabel123.setVisible(false);
                                          jTextField13.setVisible(false);
                                          jLabel124.setVisible(false);
                                                  jTextField14.setVisible(false);
                                                  jPanel2GroupAssignmentPanel1.setVisible(false);
         }else if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Group")){
         
           jCheckBox16.setVisible(true);
                  jCheckBox15.setVisible(true);
           jButton77.setVisible(true);
                          jButton78.setVisible(true);
                          jButton79.setVisible(true);
         }
    }//GEN-LAST:event_jComboBox19ActionPerformed

    private void updateExistingBorrowersDetails1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateExistingBorrowersDetails1ActionPerformed
              if(updateExistingBorrowersDetails1.isSelected()){
       jLabel125.setVisible(true);
       jComboBox19.setVisible(true);
           
           
       }else if(!updateExistingBorrowersDetails1.isSelected()){
        jLabel125.setVisible(false);
       jComboBox19.setVisible(false);
       jButton77.setVisible(false);
       jButton78.setVisible(false);
        jButton79  .setVisible(false);     
        jPanel2GroupAssignmentPanel1.setVisible(false);      
         jLabel123.setVisible(false);
          jTextField13  .setVisible(false);     
          jLabel124  .setVisible(false);     
          jTextField14  .setVisible(false);     
          jCheckBox16 .setVisible(false);      
           jCheckBox15  .setVisible(false);    
       }
    }//GEN-LAST:event_updateExistingBorrowersDetails1ActionPerformed

    private void useDefaultBorrowerDetails1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useDefaultBorrowerDetails1ActionPerformed
       if(useDefaultBorrowerDetails1.isSelected()){
      jLabel125.setVisible(false);
      jComboBox19.setVisible(false);
      updateExistingBorrowersDetails1  .setVisible(false);
      jButton77.setVisible(false);
      jButton78.setVisible(false);
      jButton79.setVisible(false);
      jCheckBox15.setVisible(false);
      jLabel123.setVisible(false);
      jTextField13.setVisible(false);
      jLabel124 .setVisible(false);       
       jTextField14  .setVisible(false); 
       jCheckBox16 .setVisible(false); 
//       jComboBox12GroupId1.setVisible(false); 
//       jComboBox11GroupName1 .setVisible(false);    
        this.updateDefaults(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+userId+".txt")));
      }else if(!useDefaultBorrowerDetails1.isSelected()){
           theCollection=new ArrayList();
         
       
          if(loan.LoanCycleThere(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+userId+".txt")))){
                
                    updateExistingBorrowersDetails1.setVisible(true);
                 jLabel125.setVisible(false);
                jComboBox19.setVisible(false);
                }else{
                updateExistingBorrowersDetails1.setVisible(false);
                jLabel125.setVisible(true);
                jComboBox19.setVisible(true);
                }
      
      }
    }//GEN-LAST:event_useDefaultBorrowerDetails1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String accountNumber2=  fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+this.userId+".txt"));  
        
        if(useDefaultBorrowerDetails1.isSelected()){
  
        this.updateDefaults(accountNumber2);
         completeAmortSpace(accountNumber2);
        this.dispose();
      }else{
      
      if(updateExistingBorrowersDetails1.isVisible()){
          
  if(fios.intFileReader(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected1"+userId+".txt"))==23){

       if(fios.intFileReader(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected2"+userId+".txt"))==23){
     if(fios.intFileReader(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected3"+userId+".txt"))==23){
       
       
        fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected3"+userId+".txt"),"12");
           fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected2"+userId+".txt"),"12");   
            fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected1"+userId+".txt"),"12"); 
        completeAmortSpace(accountNumber2);
       this.dispose();
        
        
       }else{
      JOptionPane.showConfirmDialog(this, "Please first select Bio Data"); 
     return;
     }
       
   
       }else{
       
          JOptionPane.showConfirmDialog(this, "Please first select Economic Status");
            return;
       }

   }else{
  
       JOptionPane.showConfirmDialog(this, "Please first select Other Loan Details");
         return;
   
   }
   
      }else{
      if(fios.intFileReader(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected1"+userId+".txt"))==23){

       if(fios.intFileReader(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected2"+userId+".txt"))==23){
     if(fios.intFileReader(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected3"+userId+".txt"))==23){
       
       
        fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected3"+userId+".txt"),"12");
           fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected2"+userId+".txt"),"12");   
            fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "makeSureAnItemSelected1"+userId+".txt"),"12"); 
        completeAmortSpace(accountNumber2);
       this.dispose();
        
        
       }else{
      JOptionPane.showConfirmDialog(this, "Please first select Bio Data"); 
       return;
     }
       
   
       }else{
       
          JOptionPane.showConfirmDialog(this, "Please first select Economic Status");
            return;
       }

   }else{
  
       JOptionPane.showConfirmDialog(this, "Please first select Other Loan Details");
         return;
   
   }
      
      
      }
  
  }   
   
    
   
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     
        
        
        this.dispose();
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox16ActionPerformed
    if(jCheckBox16.isSelected()){
            jPanel2GroupAssignmentPanel1.setVisible(true);
            jLabel123.setVisible(true);
                    jTextField13.setVisible(true);
                    jLabel124.setVisible(true);
                            jTextField14.setVisible(true);
                            jCheckBox15.setSelected(false);
 loan.fillWithGroupIdsNames(jTable3);
    }else if(!jCheckBox16.isSelected()){
       jPanel2GroupAssignmentPanel1.setVisible(false);
            jLabel123.setVisible(false);
                    jTextField13.setVisible(false);
                    jLabel124.setVisible(false);
                            jTextField14.setVisible(false);
     jCheckBox16.setSelected(false);
        jCheckBox15.setSelected(false);
    }
    }//GEN-LAST:event_jCheckBox16ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
////        public static String u=AddBatch.this.userId;
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AddBatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AddBatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AddBatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AddBatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddBatch().setVisible(true);
//            }
//        });
//    }
   private void sortTable(JTable table,JTextField textField){

   
    
TableRowSorter<TableModel> rowSorter  = new TableRowSorter<>(table.getModel());
                     
                      table.setRowSorter(rowSorter);
                     textField.getDocument().addDocumentListener(new DocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = textField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = textField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
    

}
   
     
    
    
 public void addItemInList(String theItem){
 
 theCollection.add(theItem);
 }
 
 public void updateDefaults(String accountNumber){
 String  existance="First Time Borrower";
     if(loan.borrowerExists(accountNumber)){
     existance="Existing Borrower";
     
     }else if(!loan.borrowerExists(accountNumber)){
     
     
      existance="First Time Borrower";
     
     
     }
     
     
     
     
  theCollection=new ArrayList();
        theCollection.add(existance);
        theCollection.add("Individual");
        theCollection.add("Group 1");
        theCollection.add("Group 1");
        theCollection.add("Cycle"+loan.cycleNumber(accountNumber));
        theCollection.add("Salary Loan");
        theCollection.add("Friends");
        theCollection.add("Single Instalment Loan");
        theCollection .add("Business Financing");
        theCollection.add("No History");
        theCollection.add("Can't Tell");
        theCollection.add("No");
        theCollection.add("0"); 
        theCollection.add("Level 1"); 
        theCollection.add("Monthly Income"); 
         theCollection.add("100,000-200,000");
         theCollection.add("Very Low");
        theCollection.add("Self Employment");
        theCollection.add("Agriculture");
         theCollection.add("Male");
           theCollection.add("Single");
           theCollection.add("Minor");
           theCollection.add("No Education");  
            theCollection.add("Email");
           theCollection.add("augbazi@mail.com");
           theCollection.add("Excellent");
              theCollection.add("0782231039");
 
 
 }
 
 
 
 
 
 public void addItemFromExistingB(){
 
//     List detailsOfExistingBorrower=loan.pickThoseOtherLoanDe();
     
     
 
 }
 
 
 public void setTheField(String theItemI){
 
     switch(theItemI){
         case "Other Loan Details":
            jButton78.setEnabled(true);
             
             break;
      case "Economic Status":
          jButton79.setEnabled(true);  
          break;
      case "Bio Data":
          
//         jButton17 .setEnabled(true);  
          break;
          
//      case "Bio Data":
//          break;
     }
 
 }
    
  private void completeAmortSpace(String accountNumber2){
//      Integer xh=1;
//        fios.intFileWriterReplace(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"), xh.toString());

//        SwingWorker<Void,Void>createNewLoan=new SwingWorker(){
//
//
//        @Override
//        protected Object doInBackground() throws Exception {
//        loan.createNewLoanAmort(accountNumber2,NewLoanApplication.this);
//        return null;
//        }
//        };
//        createNewLoan.execute();
         if(!useDefaultBorrowerDetails1.isVisible()){ 
             JOptionPane.showMessageDialog(this, "Inthem");
//       if(!useDefaultBorrowerDetails1.isSelected()){
         JOptionPane.showMessageDialog(this, "Inthem1");
           if(updateExistingBorrowersDetails1.isVisible()){
             JOptionPane.showMessageDialog(this, "Inthem2");
               if(updateExistingBorrowersDetails1.isSelected()){
                JOptionPane.showMessageDialog(this, "Inthem3");
               if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Individual")){
               if(jButton77.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select other loan details");
               return;
               }else if(!jButton77.isEnabled()){
               
                     if(jButton78.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Economic status details");
               return;
               }else if(!jButton78.isEnabled()){
                    if(jButton79.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Bio Data details");
               return;
               }else if(!jButton79.isEnabled()){
 JOptionPane.showMessageDialog(this, "Inthem4");
      for(Object the:theCollection){
       
       JOptionPane.showMessageDialog(this, the);
       
       }
          component.setTheDetailsOfLaon(theCollection);
            this.dispose();  
                   
               
               }
               
               }
                   
                   
               
               }
                   
                   
               
               }else if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Group")){
               
               
                   if(jCheckBox15.isSelected()){
                   
                        if(jTextField13.getText().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Id!!!!");
            return;
            }else{
             if(jTextField13.getText().equalsIgnoreCase("Select Group Id")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Id!!!!");
            return;
            }else{
             if(jTextField14.getText().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Name!!!!");
            return;
            }else{
             if(jTextField14.getText().equalsIgnoreCase("Select")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Name!!!!");
            return;
            }else{
             if(jButton77.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select other loan details");
               return;
               }else if(!jButton77.isEnabled()){
               
                     if(jButton78.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Economic status details");
               return;
               }else if(!jButton78.isEnabled()){
                    if(jButton79.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Bio Data details");
               return;
               }else if(!jButton79.isEnabled()){

           component.setTheDetailsOfLaon(theCollection);
            this.dispose();  
                   
               
               }
               
               }
                   
                   
               
               }
                       
                       
               
            }
            
            }
            
            }
            
            }
                       
                       
                       
                       
                   
                   }else if(!jCheckBox15.isSelected()){
                   
                       if(jButton77.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select other loan details");
               return;
               }else if(!jButton77.isEnabled()){
               
                     if(jButton78.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Economic status details");
               return;
               }else if(!jButton78.isEnabled()){
                    if(jButton79.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Bio Data details");
               return;
               }else if(!jButton79.isEnabled()){

           component.setTheDetailsOfLaon(theCollection);
            this.dispose();  
                   
               
               }
               
               }
                   
                   
               
               }
                       
                       
                       
                       
                   
                   
                   }
                   
                   
                   
               
               }
               
               }else if(!updateExistingBorrowersDetails1.isSelected()){
                theCollection=new ArrayList(); 
                   addItemInList("Existing Borrower");
       
       List theExistingItems=loan.otherLoanDetailsForUpate(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+userId+".txt")));
         
       addItemInList(theExistingItems.get(0).toString());
         addItemInList(theExistingItems.get(1).toString());
          addItemInList(theExistingItems.get(2).toString());
           addItemInList(theExistingItems.get(3).toString());
      
               addItemInList(theExistingItems.get(4).toString());
         addItemInList(theExistingItems.get(5).toString());
          addItemInList(theExistingItems.get(6).toString());
           addItemInList(theExistingItems.get(7).toString());
            addItemInList(theExistingItems.get(8).toString());
         addItemInList(theExistingItems.get(9).toString());
          addItemInList(theExistingItems.get(10).toString());
           addItemInList(theExistingItems.get(11).toString());
           
            addItemInList(theExistingItems.get(12).toString());
         addItemInList(theExistingItems.get(13).toString());
          addItemInList(theExistingItems.get(14).toString());
           addItemInList(theExistingItems.get(15).toString());
            addItemInList(theExistingItems.get(16).toString());
         addItemInList(theExistingItems.get(17).toString());
          addItemInList(theExistingItems.get(18).toString());
           addItemInList(theExistingItems.get(19).toString());
           
            addItemInList(theExistingItems.get(20).toString());
           addItemInList(theExistingItems.get(21).toString());
            addItemInList(theExistingItems.get(22).toString());
         addItemInList(theExistingItems.get(23).toString());
          addItemInList(theExistingItems.get(24).toString());
           addItemInList(theExistingItems.get(25).toString());
          
           
             component.setTheDetailsOfLaon(theCollection);
            this.dispose(); 
            }
               
               
               
           
           }else if(!updateExistingBorrowersDetails1.isVisible()){
            if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Individual")){
               if(jButton77.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select other loan details");
               return;
               }else if(!jButton77.isEnabled()){
               
                     if(jButton78.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Economic status details");
               return;
               }else if(!jButton78.isEnabled()){
                    if(jButton79.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Bio Data details");
               return;
               }else if(!jButton79.isEnabled()){

           component.setTheDetailsOfLaon(theCollection);
            this.dispose();  
                   
               
               }
               
               }
                   
                   
               
               }
                   
                   
               
               }else if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Group")){
               
               
                   if(jCheckBox15.isSelected()){
                   
                        if(jTextField13.getText().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Id!!!!");
            return;
            }else{
             if(jTextField13.getText().equalsIgnoreCase("Select Group Id")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Id!!!!");
            return;
            }else{
             if(jTextField14.getText().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Name!!!!");
            return;
            }else{
             if(jTextField14.getText().equalsIgnoreCase("Select")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Name!!!!");
            return;
            }else{
             if(jButton77.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select other loan details");
               return;
               }else if(!jButton77.isEnabled()){
               
                     if(jButton78.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Economic status details");
               return;
               }else if(!jButton78.isEnabled()){
                    if(jButton79.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Bio Data details");
               return;
               }else if(!jButton79.isEnabled()){

           component.setTheDetailsOfLaon(theCollection);
            this.dispose();   
                   
               
               }
               
               }
                   
                   
               
               }
                       
                       
               
            }
            
            }
            
            }
            
            }
                       
                       
                       
                       
                   
                   }else if(!jCheckBox15.isSelected()){
                   
                       if(jButton77.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select other loan details");
               return;
               }else if(!jButton77.isEnabled()){
               
                     if(jButton78.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Economic status details");
               return;
               }else if(!jButton78.isEnabled()){
                    if(jButton79.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Bio Data details");
               return;
               }else if(!jButton79.isEnabled()){

        component.setTheDetailsOfLaon(theCollection);
            this.dispose();  
                   
               
               }   }  } }  }  }
       
       
//       }else if(useDefaultBorrowerDetails1.isSelected()){

           
           if(loan.borrowerExists(accountNumber2)){
                theCollection=new ArrayList();
            addItemInList("Existing Borrower");
//       JOptionPane.showMessageDialog(this, fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+userId+".txt")));
       List theExistingItems=loan.otherLoanDetailsForUpate(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+userId+".txt")));
//        JOptionPane.showMessageDialog(this, theExistingItems.size()); 
       addItemInList(theExistingItems.get(0).toString());
         addItemInList(theExistingItems.get(1).toString());
          addItemInList(theExistingItems.get(2).toString());
           addItemInList(theExistingItems.get(3).toString());
      
               addItemInList(theExistingItems.get(4).toString());
         addItemInList(theExistingItems.get(5).toString());
          addItemInList(theExistingItems.get(6).toString());
           addItemInList(theExistingItems.get(7).toString());
            addItemInList(theExistingItems.get(8).toString());
         addItemInList(theExistingItems.get(9).toString());
          addItemInList(theExistingItems.get(10).toString());
           addItemInList(theExistingItems.get(11).toString());
           
            addItemInList(theExistingItems.get(12).toString());
         addItemInList(theExistingItems.get(13).toString());
          addItemInList(theExistingItems.get(14).toString());
           addItemInList(theExistingItems.get(15).toString());
            addItemInList(theExistingItems.get(16).toString());
         addItemInList(theExistingItems.get(17).toString());
          addItemInList(theExistingItems.get(18).toString());
           addItemInList(theExistingItems.get(19).toString());
           
            addItemInList(theExistingItems.get(20).toString());
           addItemInList(theExistingItems.get(21).toString());
            addItemInList(theExistingItems.get(22).toString());
         addItemInList(theExistingItems.get(23).toString());
          addItemInList(theExistingItems.get(24).toString());
           addItemInList(theExistingItems.get(25).toString());
          
           
     component.setTheDetailsOfLaon(theCollection);
            this.dispose(); 
           
           
           }else {
    
       component.setTheDetailsOfLaon(theCollection);
            this.dispose(); 
           }
//       }
       
  }else if(useDefaultBorrowerDetails1.isVisible()){
//   if(!useDefaultBorrowerDetails1.isSelected()){
       
           if(updateExistingBorrowersDetails1.isVisible()){
           
               if(updateExistingBorrowersDetails1.isSelected()){
               
               if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Individual")){
               if(jButton77.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select other loan details");
               return;
               }else if(!jButton77.isEnabled()){
               
                     if(jButton78.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Economic status details");
               return;
               }else if(!jButton78.isEnabled()){
                    if(jButton79.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Bio Data details");
               return;
               }else if(!jButton79.isEnabled()){

          component.setTheDetailsOfLaon(theCollection);
            this.dispose();  
                   
               
               }
               
               }
                   
                   
               
               }
                   
                   
               
               }else if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Group")){
               
               
                   if(jCheckBox15.isSelected()){
                   
                        if(jTextField13.getText().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Id!!!!");
            return;
            }else{
             if(jTextField13.getText().equalsIgnoreCase("Select Group Id")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Id!!!!");
            return;
            }else{
             if(jTextField14.getText().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Name!!!!");
            return;
            }else{
             if(jTextField14.getText().equalsIgnoreCase("Select")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Name!!!!");
            return;
            }else{
             if(jButton77.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select other loan details");
               return;
               }else if(!jButton77.isEnabled()){
               
                     if(jButton78.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Economic status details");
               return;
               }else if(!jButton78.isEnabled()){
                    if(jButton79.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Bio Data details");
               return;
               }else if(!jButton79.isEnabled()){

           component.setTheDetailsOfLaon(theCollection);
            this.dispose();  
                   
               
               }
               
               }
                   
                   
               
               }
                       
                       
               
            }
            
            }
            
            }
            
            }
                       
                       
                       
                       
                   
                   }else if(!jCheckBox15.isSelected()){
                   
                       if(jButton77.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select other loan details");
               return;
               }else if(!jButton77.isEnabled()){
               
                     if(jButton78.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Economic status details");
               return;
               }else if(!jButton78.isEnabled()){
                    if(jButton79.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Bio Data details");
               return;
               }else if(!jButton79.isEnabled()){

           component.setTheDetailsOfLaon(theCollection);
            this.dispose();  
                   
               
               }
               
               }
                   
                   
               
               }
                       
                       
                       
                       
                   
                   
                   }
                   
                   
                   
               
               }
               
               }else if(!updateExistingBorrowersDetails1.isSelected()){
                theCollection=new ArrayList(); 
                   addItemInList("Existing Borrower");
       
       List theExistingItems=loan.otherLoanDetailsForUpate(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+userId+".txt")));
         
       addItemInList(theExistingItems.get(0).toString());
         addItemInList(theExistingItems.get(1).toString());
          addItemInList(theExistingItems.get(2).toString());
           addItemInList(theExistingItems.get(3).toString());
      
               addItemInList(theExistingItems.get(4).toString());
         addItemInList(theExistingItems.get(5).toString());
          addItemInList(theExistingItems.get(6).toString());
           addItemInList(theExistingItems.get(7).toString());
            addItemInList(theExistingItems.get(8).toString());
         addItemInList(theExistingItems.get(9).toString());
          addItemInList(theExistingItems.get(10).toString());
           addItemInList(theExistingItems.get(11).toString());
           
            addItemInList(theExistingItems.get(12).toString());
         addItemInList(theExistingItems.get(13).toString());
          addItemInList(theExistingItems.get(14).toString());
           addItemInList(theExistingItems.get(15).toString());
            addItemInList(theExistingItems.get(16).toString());
         addItemInList(theExistingItems.get(17).toString());
          addItemInList(theExistingItems.get(18).toString());
           addItemInList(theExistingItems.get(19).toString());
           
            addItemInList(theExistingItems.get(20).toString());
           addItemInList(theExistingItems.get(21).toString());
            addItemInList(theExistingItems.get(22).toString());
         addItemInList(theExistingItems.get(23).toString());
          addItemInList(theExistingItems.get(24).toString());
           addItemInList(theExistingItems.get(25).toString());
          
           
             component.setTheDetailsOfLaon(theCollection);
            this.dispose(); 
            }
               
               
               
           
           }else if(!updateExistingBorrowersDetails1.isVisible()){
            if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Individual")){
               if(jButton77.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select other loan details");
               return;
               }else if(!jButton77.isEnabled()){
               
                     if(jButton78.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Economic status details");
               return;
               }else if(!jButton78.isEnabled()){
                    if(jButton79.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Bio Data details");
               return;
               }else if(!jButton79.isEnabled()){

           component.setTheDetailsOfLaon(theCollection);
            this.dispose();  
                   
               
               }
               
               }
                   
                   
               
               }
                   
                   
               
               }else if(jComboBox19.getSelectedItem().toString().equalsIgnoreCase("Group")){
               
               
                   if(jCheckBox15.isSelected()){
                   
                        if(jTextField13.getText().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Id!!!!");
            return;
            }else{
             if(jTextField13.getText().equalsIgnoreCase("Select Group Id")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Id!!!!");
            return;
            }else{
             if(jTextField14.getText().equalsIgnoreCase("")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Name!!!!");
            return;
            }else{
             if(jTextField14.getText().equalsIgnoreCase("Select")){
            
            
            JOptionPane.showMessageDialog(this, "Please first set Group Name!!!!");
            return;
            }else{
             if(jButton77.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select other loan details");
               return;
               }else if(!jButton77.isEnabled()){
               
                     if(jButton78.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Economic status details");
               return;
               }else if(!jButton78.isEnabled()){
                    if(jButton79.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Bio Data details");
               return;
               }else if(!jButton79.isEnabled()){

           component.setTheDetailsOfLaon(theCollection);
            this.dispose();   
                   
               
               }
               
               }
                   
                   
               
               }
                       
                       
               
            }
            
            }
            
            }
            
            }
                       
                       
                       
                       
                   
                   }else if(!jCheckBox15.isSelected()){
                   
                       if(jButton77.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select other loan details");
               return;
               }else if(!jButton77.isEnabled()){
               
                     if(jButton78.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Economic status details");
               return;
               }else if(!jButton78.isEnabled()){
                    if(jButton79.isEnabled()){
               JOptionPane.showMessageDialog(this, "Please first select Bio Data details");
               return;
               }else if(!jButton79.isEnabled()){

        component.setTheDetailsOfLaon(theCollection);
            this.dispose();  
                   
               
               }   }  } }  }  }
       
       
//       }else if(useDefaultBorrowerDetails1.isSelected()){

           
           if(loan.borrowerExists(accountNumber2)){
                theCollection=new ArrayList();
            addItemInList("Existing Borrower");
//       JOptionPane.showMessageDialog(this, fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+userId+".txt")));
       List theExistingItems=loan.otherLoanDetailsForUpate(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "activeAccount"+userId+".txt")));
//        JOptionPane.showMessageDialog(this, theExistingItems.size()); 
       addItemInList(theExistingItems.get(0).toString());
         addItemInList(theExistingItems.get(1).toString());
          addItemInList(theExistingItems.get(2).toString());
           addItemInList(theExistingItems.get(3).toString());
      
               addItemInList(theExistingItems.get(4).toString());
         addItemInList(theExistingItems.get(5).toString());
          addItemInList(theExistingItems.get(6).toString());
           addItemInList(theExistingItems.get(7).toString());
            addItemInList(theExistingItems.get(8).toString());
         addItemInList(theExistingItems.get(9).toString());
          addItemInList(theExistingItems.get(10).toString());
           addItemInList(theExistingItems.get(11).toString());
           
            addItemInList(theExistingItems.get(12).toString());
         addItemInList(theExistingItems.get(13).toString());
          addItemInList(theExistingItems.get(14).toString());
           addItemInList(theExistingItems.get(15).toString());
            addItemInList(theExistingItems.get(16).toString());
         addItemInList(theExistingItems.get(17).toString());
          addItemInList(theExistingItems.get(18).toString());
           addItemInList(theExistingItems.get(19).toString());
           
            addItemInList(theExistingItems.get(20).toString());
           addItemInList(theExistingItems.get(21).toString());
            addItemInList(theExistingItems.get(22).toString());
         addItemInList(theExistingItems.get(23).toString());
          addItemInList(theExistingItems.get(24).toString());
           addItemInList(theExistingItems.get(25).toString());
          
           
     component.setTheDetailsOfLaon(theCollection);
            this.dispose(); 
           
           
           }else {
    
       component.setTheDetailsOfLaon(theCollection);
            this.dispose(); 
           }
//       }
  }
        
    }
       
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton49;
    private javax.swing.JButton jButton50;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton55;
    private javax.swing.JButton jButton56;
    private javax.swing.JButton jButton57;
    private javax.swing.JButton jButton58;
    private javax.swing.JButton jButton59;
    private javax.swing.JButton jButton60;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton62;
    private javax.swing.JButton jButton63;
    private javax.swing.JButton jButton64;
    private javax.swing.JButton jButton65;
    private javax.swing.JButton jButton66;
    private javax.swing.JButton jButton67;
    private javax.swing.JButton jButton68;
    private javax.swing.JButton jButton69;
    private javax.swing.JButton jButton70;
    private javax.swing.JButton jButton71;
    private javax.swing.JButton jButton72;
    private javax.swing.JButton jButton77;
    private javax.swing.JButton jButton78;
    private javax.swing.JButton jButton79;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JComboBox jComboBox19;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel124;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2GroupAssignmentPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel newLoanPanel1;
    private javax.swing.JCheckBox updateExistingBorrowersDetails1;
    private javax.swing.JCheckBox useDefaultBorrowerDetails1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {

    }

    @Override
    public void mousePressed(MouseEvent me) {
          if(me.getSource() == jTable3){  
                
                    int selectedRow =jTable3.getSelectedRow();
                    int selectedColumn =jTable3.getSelectedColumn();
		   if (selectedRow > -1&&selectedColumn>-1)
	   {
	 Object groupLoanId = jTable3.getModel().getValueAt(jTable3.convertRowIndexToModel(selectedRow), 0);
          Object groupLoanName= jTable3.getModel().getValueAt(jTable3.convertRowIndexToModel(selectedRow), 1);
             
                 
                   
                        jTextField13.setText(groupLoanId.toString());
        jTextField14 .setText(groupLoanName.toString());
         
         jTextField13.setEditable(false);
        jTextField14 .setEditable(false);
    
         
           }
        
  
                   
        } 
    }

    @Override
    public void mouseReleased(MouseEvent e) {
     
    }

    @Override
    public void mouseEntered(MouseEvent e) {
     
    }

    @Override
    public void mouseExited(MouseEvent e) {
     
    }

    @Override
    public void updateText(String text) {
  
    }

    @Override
    public void actionPerformed(ActionEvent e) {
 
    }

    @Override
    public void keyTyped(KeyEvent e) {
 
    }

    @Override
    public void keyPressed(KeyEvent e) {

    }

    @Override
    public void keyReleased(KeyEvent e) {
    
    }

    
}

