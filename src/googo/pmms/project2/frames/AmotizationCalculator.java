package googo.pmms.project2.frames;


import googo.pmms.project2.loanHelper.Amortization;
import googo.pmms.project2.accountsHelper.Formartter;
import googo.pmms.project2.accountsHelper.SendSms;
import googo.pmms.project2.frameHelper.IUpdateText;
import googo.pmms.project2.frameHelper.ObjectTableModel;
import googo.pmms.project2.databases.loanDatabaseQuaries;
import googo.pmms.project2.accountsHelper.fileInputOutPutStreams;
import googo.pmms.project2.databases.DatabaseQuaries;
import googo.pmms.project2.excel.CreateExcelWorkBook;
import googo.pmms.project2.loanHelper.amortizeLoan;
import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.PrinterException;
import java.io.File;
import java.io.IOException;
import static java.lang.Double.parseDouble;
import static java.lang.Integer.parseInt;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Stanchart
 */
public class AmotizationCalculator extends javax.swing.JFrame implements ActionListener,IUpdateText {
        loanDatabaseQuaries loan=new loanDatabaseQuaries();
        fileInputOutPutStreams fios= new fileInputOutPutStreams();
       
        DecimalFormat df1 = new DecimalFormat("#.##");
        DecimalFormat df2 = new DecimalFormat("#");
        DecimalFormat NumberFormat =new DecimalFormat("#,###.##");
        Calendar cal = Calendar.getInstance();
        int n,s;
        ArrayList<Object> data4;

        
    SimpleDateFormat sdk =new SimpleDateFormat("dd.MM.yyyy");
       CreateExcelWorkBook writeExcel= new CreateExcelWorkBook();
        
        ArrayList<String>  column1, data,data1 ;
  DatabaseQuaries dbq= new DatabaseQuaries();
        ArrayList<ArrayList<Object>> data5;
        double loanAmount,loanTerm,interestRate, annualInterest=0.0,interest=0.0;
        Calendar startDate;
        ButtonGroup group1,group2,group3,group4;
        ObjectTableModel  model;
        Formartter fmt = new Formartter();
           String userId;
           List amortDetailsx,amortDetails;
               SendSms sendsms= new SendSms();
        public AmotizationCalculator(String userId,List amortDetailsg) {
            this.userId=userId;
            this.amortDetails=amortDetailsg;
        initComponents();
        java.awt.Image img = new ImageIcon(System.getProperty("user.dir")+"/"+"ICON_LOGO.jpg").getImage();
        this.setIconImage(img);
        this.setTitle("AMORTIZATION MODULE-"+dbq.title(userId)); 
        s=jTable2.getRowCount();

        for(int i=1;i<=s;i++){
        if(s%i==0){jTable2.setBackground(Color.red);}


        }


        group1 =new  ButtonGroup();
        group1.add(jRadioButtonReducingBal8);
        group1.add(jRadioButtonFixedInstalments1);

        group2 =new  ButtonGroup();
        group2.add(jRadioButtonReducingBal);
        group2.add(jRadioButtonFixedInstalments);

        group3 =new  ButtonGroup();
        group3.add(jRadioButtonReducingBal1);
        group3.add(jRadioButtonReducingBal2);
        group3.add(jRadioButtonReducingBal3);
        group3.add(jRadioButtonReducingBal4);
        group3.add(jRadioButtonReducingBal5);
        group3.add(jRadioButtonReducingBal6);
        group3.add(jRadioButtonReducingBal7);
        group3.add(jRadioButtonReducingBal9);

        

    }
//public void setUserID(String userid){
//this.userId=userid;
//}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLLoanAmount = new javax.swing.JLabel();
        jBCalender = new javax.swing.JButton();
        jLLoanTerm = new javax.swing.JLabel();
        jLPercentage = new javax.swing.JLabel();
        jLCurrency = new javax.swing.JLabel();
        jLInterestRate = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTFLoanTerm = new javax.swing.JTextField();
        jLYears = new javax.swing.JLabel();
        jFTFLoanAmount = new javax.swing.JFormattedTextField();
        jRadioButtonReducingBal = new javax.swing.JRadioButton();
        jRadioButtonFixedInstalments = new javax.swing.JRadioButton();
        jRadioButtonReducingBal7 = new javax.swing.JRadioButton();
        jRadioButtonReducingBal6 = new javax.swing.JRadioButton();
        jRadioButtonReducingBal5 = new javax.swing.JRadioButton();
        jRadioButtonReducingBal4 = new javax.swing.JRadioButton();
        jRadioButtonReducingBal3 = new javax.swing.JRadioButton();
        jRadioButtonReducingBal2 = new javax.swing.JRadioButton();
        jRadioButtonReducingBal1 = new javax.swing.JRadioButton();
        jRadioButtonReducingBal8 = new javax.swing.JRadioButton();
        jRadioButtonFixedInstalments1 = new javax.swing.JRadioButton();
        jRadioButtonReducingBal9 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLYears1 = new javax.swing.JLabel();
        jTFLoanTerm1 = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLPercentage1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTFLoanTerm2 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel57 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(2147483647, 2147483647));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel2.setBackground(java.awt.SystemColor.activeCaption);
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });
        jPanel2.setLayout(null);

        jTable2.setBackground(java.awt.SystemColor.activeCaption);
        jTable2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTable2.setForeground(new java.awt.Color(51, 51, 51));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTable2);

        jPanel2.add(jScrollPane4);
        jScrollPane4.setBounds(0, 117, 1030, 490);

        jPanel1.setBackground(java.awt.SystemColor.activeCaption);
        jPanel1.setLayout(null);

        jLLoanAmount.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLLoanAmount.setForeground(new java.awt.Color(255, 255, 255));
        jLLoanAmount.setText("Amount");
        jPanel1.add(jLLoanAmount);
        jLLoanAmount.setBounds(0, 70, 70, 30);

        jBCalender.setBackground(new java.awt.Color(153, 204, 255));
        jBCalender.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jBCalender.setForeground(new java.awt.Color(0, 153, 102));
        jBCalender.setText("Amortize");
        jBCalender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCalenderActionPerformed(evt);
            }
        });
        jPanel1.add(jBCalender);
        jBCalender.setBounds(730, 70, 100, 30);

        jLLoanTerm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLLoanTerm.setForeground(new java.awt.Color(255, 255, 255));
        jLLoanTerm.setText("Tenure");
        jPanel1.add(jLLoanTerm);
        jLLoanTerm.setBounds(200, 70, 60, 30);

        jLPercentage.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLPercentage.setForeground(new java.awt.Color(0, 153, 102));
        jLPercentage.setText("% per a");
        jPanel1.add(jLPercentage);
        jLPercentage.setBounds(520, 70, 60, 30);

        jLCurrency.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLCurrency.setForeground(new java.awt.Color(0, 153, 102));
        jLCurrency.setText("UGX");
        jPanel1.add(jLCurrency);
        jLCurrency.setBounds(160, 70, 30, 30);

        jLInterestRate.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLInterestRate.setForeground(new java.awt.Color(255, 255, 255));
        jLInterestRate.setText(" Rate");
        jPanel1.add(jLInterestRate);
        jLInterestRate.setBounds(430, 70, 50, 30);

        jButton2.setText("RESET ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(830, 70, 100, 30);

        jTFLoanTerm.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTFLoanTerm.setForeground(new java.awt.Color(0, 51, 204));
        jTFLoanTerm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFLoanTermActionPerformed(evt);
            }
        });
        jPanel1.add(jTFLoanTerm);
        jTFLoanTerm.setBounds(340, 70, 50, 30);
        jTFLoanTerm .setEditable(false);

        jLYears.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLYears.setForeground(new java.awt.Color(0, 153, 102));
        jLYears.setText("Years");
        jPanel1.add(jLYears);
        jLYears.setBounds(300, 70, 50, 30);

        jFTFLoanAmount.setForeground(new java.awt.Color(0, 51, 204));
        jFTFLoanAmount.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###,###,###,###"))));
        jFTFLoanAmount.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel1.add(jFTFLoanAmount);
        jFTFLoanAmount.setBounds(70, 70, 90, 30);
        jFTFLoanAmount.setValue(null);

        jRadioButtonReducingBal.setBackground(java.awt.SystemColor.activeCaption);
        jRadioButtonReducingBal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButtonReducingBal.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonReducingBal.setText("Fixed Instalment");
        jRadioButtonReducingBal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jRadioButtonReducingBal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonReducingBalActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonReducingBal);
        jRadioButtonReducingBal.setBounds(0, 36, 168, 30);
        jRadioButtonReducingBal.setVisible(false);

        jRadioButtonFixedInstalments.setBackground(java.awt.SystemColor.activeCaption);
        jRadioButtonFixedInstalments.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButtonFixedInstalments.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonFixedInstalments.setText("Reducing Instalment");
        jRadioButtonFixedInstalments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFixedInstalmentsActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonFixedInstalments);
        jRadioButtonFixedInstalments.setBounds(168, 36, 180, 30);
        jRadioButtonFixedInstalments.setVisible(false);

        jRadioButtonReducingBal7.setBackground(java.awt.SystemColor.activeCaption);
        jRadioButtonReducingBal7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButtonReducingBal7.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonReducingBal7.setText("Biennially");
        jRadioButtonReducingBal7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonReducingBal7ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonReducingBal7);
        jRadioButtonReducingBal7.setBounds(900, 0, 120, 30);
        jRadioButtonReducingBal7.setVisible(false);

        jRadioButtonReducingBal6.setBackground(java.awt.SystemColor.activeCaption);
        jRadioButtonReducingBal6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButtonReducingBal6.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonReducingBal6.setText("Half yearly");
        jRadioButtonReducingBal6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonReducingBal6ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonReducingBal6);
        jRadioButtonReducingBal6.setBounds(710, 0, 100, 30);
        jRadioButtonReducingBal6.setVisible(false);

        jRadioButtonReducingBal5.setBackground(java.awt.SystemColor.activeCaption);
        jRadioButtonReducingBal5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButtonReducingBal5.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonReducingBal5.setText("Quaterly");
        jRadioButtonReducingBal5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonReducingBal5ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonReducingBal5);
        jRadioButtonReducingBal5.setBounds(620, 0, 90, 30);
        jRadioButtonReducingBal5.setVisible(false);

        jRadioButtonReducingBal4.setBackground(java.awt.SystemColor.activeCaption);
        jRadioButtonReducingBal4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButtonReducingBal4.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonReducingBal4.setText("Monthly");
        jRadioButtonReducingBal4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonReducingBal4ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonReducingBal4);
        jRadioButtonReducingBal4.setBounds(545, 2, 80, 30);
        jRadioButtonReducingBal4.setVisible(false);

        jRadioButtonReducingBal3.setBackground(java.awt.SystemColor.activeCaption);
        jRadioButtonReducingBal3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButtonReducingBal3.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonReducingBal3.setText("Fortnightly");
        jRadioButtonReducingBal3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonReducingBal3ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonReducingBal3);
        jRadioButtonReducingBal3.setBounds(450, 2, 100, 30);
        jRadioButtonReducingBal3.setVisible(false);

        jRadioButtonReducingBal2.setBackground(java.awt.SystemColor.activeCaption);
        jRadioButtonReducingBal2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButtonReducingBal2.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonReducingBal2.setText("Weekly");
        jRadioButtonReducingBal2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonReducingBal2ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonReducingBal2);
        jRadioButtonReducingBal2.setBounds(370, 0, 80, 30);
        jRadioButtonReducingBal2.setVisible(false);

        jRadioButtonReducingBal1.setBackground(java.awt.SystemColor.activeCaption);
        jRadioButtonReducingBal1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButtonReducingBal1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonReducingBal1.setText("Daily");
        jRadioButtonReducingBal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonReducingBal1ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonReducingBal1);
        jRadioButtonReducingBal1.setBounds(310, 2, 60, 30);
        jRadioButtonReducingBal1.setVisible(false);

        jRadioButtonReducingBal8.setBackground(java.awt.SystemColor.activeCaption);
        jRadioButtonReducingBal8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButtonReducingBal8.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonReducingBal8.setText("Reducing Interest");
        jRadioButtonReducingBal8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jRadioButtonReducingBal8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonReducingBal8ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonReducingBal8);
        jRadioButtonReducingBal8.setBounds(0, 0, 150, 30);
        jRadioButtonReducingBal8.setVisible(false);

        jRadioButtonFixedInstalments1.setBackground(java.awt.SystemColor.activeCaption);
        jRadioButtonFixedInstalments1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButtonFixedInstalments1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonFixedInstalments1.setText("Flat Interest");
        jRadioButtonFixedInstalments1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFixedInstalments1ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonFixedInstalments1);
        jRadioButtonFixedInstalments1.setBounds(190, 0, 120, 30);

        jRadioButtonReducingBal9.setBackground(java.awt.SystemColor.activeCaption);
        jRadioButtonReducingBal9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jRadioButtonReducingBal9.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButtonReducingBal9.setText("Anually");
        jRadioButtonReducingBal9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonReducingBal9ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonReducingBal9);
        jRadioButtonReducingBal9.setBounds(820, 0, 80, 30);
        jRadioButtonReducingBal9.setVisible(false);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 102));
        jLabel3.setText("Repayment Cycle");
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3);
        jLabel3.setBounds(320, 0, 130, 30);

        jLYears1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLYears1.setForeground(new java.awt.Color(0, 153, 102));
        jLYears1.setText("Years");
        jPanel1.add(jLYears1);
        jLYears1.setBounds(390, 70, 50, 30);

        jTFLoanTerm1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTFLoanTerm1.setForeground(new java.awt.Color(0, 51, 204));
        jTFLoanTerm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFLoanTerm1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTFLoanTerm1);
        jTFLoanTerm1.setBounds(250, 70, 40, 30);
        jTFLoanTerm1.setText("");

        jTextField1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(0, 102, 102));
        jPanel1.add(jTextField1);
        jTextField1.setBounds(620, 70, 90, 30);
        jTextField1.setText("");

        jLPercentage1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLPercentage1.setForeground(new java.awt.Color(0, 153, 102));
        jLPercentage1.setText("Date");
        jPanel1.add(jLPercentage1);
        jLPercentage1.setBounds(580, 70, 50, 30);

        jButton3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/calender.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(710, 70, 20, 30);

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1);
        jComboBox1.setBounds(830, 70, 200, 30);
        dbq.fillWithUserNames(jComboBox1);
        jComboBox1.setSelectedIndex(1);
        jComboBox1.setVisible(false);

        jTFLoanTerm2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTFLoanTerm2.setForeground(new java.awt.Color(0, 51, 204));
        jTFLoanTerm2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFLoanTerm2ActionPerformed(evt);
            }
        });
        jPanel1.add(jTFLoanTerm2);
        jTFLoanTerm2.setBounds(480, 70, 40, 30);
        jTFLoanTerm1.setText("");

        jButton8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(0, 102, 102));
        jButton8.setText("Interest Rate Type");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8);
        jButton8.setBounds(0, 0, 192, 36);

        jButton9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(0, 102, 102));
        jButton9.setText("Instalment Type");
        jButton9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9);
        jButton9.setBounds(0, 0, 168, 36);
        jButton9.setVisible(false);

        jTextField2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel1.add(jTextField2);
        jTextField2.setBounds(490, 30, 50, 30);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Payment Period");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel1);
        jLabel1.setBounds(350, 30, 140, 30);

        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10);
        jButton10.setBounds(540, 30, 20, 30);

        jPanel2.add(jPanel1);
        jPanel1.setBounds(0, 11, 1030, 110);

        jLabel57.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(255, 255, 255));
        jLabel57.setText("RETURN TO LOAN MANAGEMENT MODULE");
        jLabel57.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel57.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel57MousePressed(evt);
            }
        });
        jPanel2.add(jLabel57);
        jLabel57.setBounds(350, 710, 290, 40);

        jButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton1.setText("Create Loan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(370, 650, 170, 50);
        jButton1.setEnabled(false);

        jButton4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton4.setText("Cancel Loan Creation");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);
        jButton4.setBounds(730, 650, 190, 50);
        jButton4.setEnabled(false);

        jButton5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton5.setText("Edit Create Loan");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);
        jButton5.setBounds(550, 650, 170, 50);
        jButton5.setEnabled(false);

        jButton6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton6.setText("Export Excel");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6);
        jButton6.setBounds(190, 650, 170, 50);

        jButton7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton7.setText("Print");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton7);
        jButton7.setBounds(10, 650, 170, 50);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setForeground(java.awt.SystemColor.controlLtHighlight);
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(jLabel2);
        jLabel2.setBounds(230, 610, 460, 30);
        jLabel2.setVisible(false);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, -9, 1040, 850);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFLoanTermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFLoanTermActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFLoanTermActionPerformed

    private void jBCalenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCalenderActionPerformed

        if(!jTextField2.getText().equalsIgnoreCase("")){
        
        fios.stringFileWriter(fios.createFileName("postingEntry", "generalTrn", "payPeriod"+this.userId+".txt"), jTextField2.getText());
        fios.stringFileWriter(fios.createFileName("postingEntry", "generalTrn", "hasPeriodBeenSet"+this.userId+".txt"), "YES");
        }else if(!jTFLoanTerm1.getText().equalsIgnoreCase("")){
          fios.stringFileWriter(fios.createFileName("postingEntry", "generalTrn", "payPeriod"+this.userId+".txt"), jTFLoanTerm1.getText());
        fios.stringFileWriter(fios.createFileName("postingEntry", "generalTrn", "hasPeriodBeenSet"+this.userId+".txt"), "NO");
        } else{
        fios.stringFileWriter(fios.createFileName("postingEntry", "generalTrn", "payPeriod"+this.userId+".txt"), jTFLoanTerm1.getText());
        fios.stringFileWriter(fios.createFileName("postingEntry", "generalTrn", "hasPeriodBeenSet"+this.userId+".txt"), "NO"); 
        
        }
        
        amortizeLoan amorty =new amortizeLoan(userId);
        
    if(jFTFLoanAmount.getValue() == null){JOptionPane.showMessageDialog(this, "Please Input the loan principal amount");return;}
    else if(jTFLoanTerm1.getText().equals("")){JOptionPane.showMessageDialog(this, "Please in put the loan term");return;}
    else if(jComboBox1.getSelectedItem().toString().equals("Select Portfolio Owner")){JOptionPane.showMessageDialog(this, "Please First Select The Portfolio Owner");return;}

    else if(jTFLoanTerm2.getText().equals("")){JOptionPane.showMessageDialog(this, "Please input the interest rate"); return;}else if(jTextField1.getText().equals("")){
    JOptionPane.showMessageDialog(this, "Please in put the date that the loan was taken");
    }else{
       amortDetailsx = new ArrayList();
    
    amortDetailsx.add(jFTFLoanAmount.getValue().toString());//Principal amount
    amortDetailsx.add(jTFLoanTerm2.getText());//Interest Rate
    amortDetailsx.add(jTFLoanTerm1.getText());//loan Tenure
    amortDetailsx.add(jTextField1.getText());//Start date
    amortDetailsx.add(n+"");//Interest rate type
    amortDetailsx.add(jComboBox1.getSelectedItem().toString());//Portfolio owner
    if (flatInterestRate()){
  
   amortDetailsx.add(1);//TermType
}else if(reducingBalancefixedInstalment()){
   
   amortDetailsx.add(2);//TermType

}else if(reducingBalanceReducingInstalment()){


amortDetailsx.add(3);//TermType

}
   model= amorty.amortizeme(amortDetailsx,this);
   
    jTable2.setModel(model);
    jTable2.setAlignmentX(LEFT_ALIGNMENT);
jTable2.setAlignmentY(CENTER_ALIGNMENT);
jTable2.setAutoscrolls(true);
jTable2.setShowHorizontalLines(true);
jTable2.setShowGrid(true);
jTable2.setRowHeight(20);
jTable2.setDragEnabled(true);
     if (flatInterestRate()){
         
  
jTable2.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
    @Override
    public Component getTableCellRendererComponent(JTable table,
            Object value, boolean isSelected, boolean hasFocus, int row, int col) {

     this.setHorizontalAlignment(JLabel.CENTER);
      if(col!=8){
          Number c = (Number)parseDouble(value.toString());
       String text = NumberFormat.format(c );
           this.setText(text);
      
      }
      else{this.setText(value.toString());}
               if (row%2==0) {
            setBackground(jBCalender.getBackground());
            setForeground(Color.BLACK);
            if(isSelected){setBackground(Color.CYAN);}
        } else {
             setBackground(jLCurrency.getForeground());
           setForeground(Color.BLACK);
              if(isSelected){setBackground(Color.CYAN);}
        }  
         
         
        return this;
    }   
});

}else if(reducingBalancefixedInstalment()){
   
      
jTable2.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
    @Override
    public Component getTableCellRendererComponent(JTable table,
            Object value, boolean isSelected, boolean hasFocus, int row, int col) {

     this.setHorizontalAlignment(JLabel.CENTER);
      if(col!=8){
          Number c = (Number)parseDouble(value.toString());
       String text = NumberFormat.format(c );
           this.setText(text);
      
      }
      else{this.setText(value.toString());}
               if (row%2==0) {
            setBackground(jPanel1.getBackground());
            setForeground(Color.BLACK);
            if(isSelected){setBackground(Color.CYAN);}
        } else {
             setBackground(/*jLCurrency.getForeground()*/Color.WHITE);
           setForeground(Color.BLACK);
              if(isSelected){setBackground(Color.CYAN);}
        }  
         
         
        return this;
    }   
});

}else if(reducingBalanceReducingInstalment()){


  
  jTable2.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
    @Override
    public Component getTableCellRendererComponent(JTable table,
            Object value, boolean isSelected, boolean hasFocus, int row, int col) {
     table.setShowGrid(true);
        table.setGridColor(Color.LIGHT_GRAY);
         table.setAlignmentX(LEFT_ALIGNMENT);
 table.setAlignmentY(CENTER_ALIGNMENT);
 table.setAutoscrolls(true);
 table.setShowHorizontalLines(true);

 table.setRowHeight(20);
     this.setHorizontalAlignment(JLabel.CENTER);
      if(col!=8){
          Number c = (Number)parseDouble(value.toString());
       String text = NumberFormat.format(c );
           this.setText(text);
      
      }
      else{this.setText(value.toString());}
               if (row%2==0) {
            setBackground(jBCalender.getBackground());
            setForeground(Color.BLACK);
            if(isSelected){setBackground(Color.CYAN);}
        } else {
             setBackground(jLCurrency.getForeground());
           setForeground(Color.BLACK);
              if(isSelected){setBackground(Color.CYAN);}
        }  
         
         
        return this;
    }   
});


}
    fios.forceFileExistance(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
                int windowhh =fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
                switch(windowhh ){
                case 1:
                    jButton1.setEnabled(true);
            jButton4.setEnabled(true);
            jButton5.setEnabled(true);
            jButton6.setEnabled(true);
            jButton7.setEnabled(true);
            jTFLoanTerm2.setEditable(false);
            jTextField1.setEditable(false);
            jButton3.setEnabled(false);
            jBCalender.setEnabled(false);
            jComboBox1.setEnabled(false); 
                        jButton8.setVisible(true);
                        jButton8.setEnabled(false);
                jButton9.setVisible(false);
                jRadioButtonReducingBal8.setVisible(false);
                jRadioButtonFixedInstalments.setVisible(false);
                jRadioButtonReducingBal2.setVisible(false);
                jRadioButtonFixedInstalments1.setVisible(false);
                jRadioButtonReducingBal.setVisible(false);
                jLabel3.setVisible(false);
                jRadioButtonReducingBal1.setVisible(false);
                jRadioButtonReducingBal3.setVisible(false);
                jRadioButtonReducingBal4.setVisible(false);
                jRadioButtonReducingBal5.setVisible(false);
                jRadioButtonReducingBal6.setVisible(false);
                jRadioButtonReducingBal9.setVisible(false);
                jRadioButtonReducingBal7.setVisible(false);
                }
           
    }
    }//GEN-LAST:event_jBCalenderActionPerformed

    private void jRadioButtonReducingBalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonReducingBalActionPerformed
        fios.forceFileExistance(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
        int windowhh =fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
        switch(windowhh ){
        case 1:
        if(jRadioButtonReducingBal.isSelected()){


        Integer zx=3;
        fios.intFileWriterReplace(fios.createFileName("persistence", "interestPlan", "flatInterestPlan"+this.userId+".txt"), zx.toString());
        Integer zxt=0;
        fios.intFileWriterReplace(fios.createFileName("persistence", "interestPlan", "flatInterestPlan3"+this.userId+".txt"), zxt.toString());
        fios.intFileWriterReplace(fios.createFileName("persistence", "interestPlan", "flatInterestPlan2"+this.userId+".txt"), zxt.toString());
        } else{
        Integer zx=0;
        fios.intFileWriterReplace(fios.createFileName("persistence", "interestPlan", "flatInterestPlan3"+this.userId+".txt"), zx.toString());

        }


        break;



        }
    }//GEN-LAST:event_jRadioButtonReducingBalActionPerformed

    private void jRadioButtonReducingBal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonReducingBal1ActionPerformed
     Amortization amortize = new Amortization(this.userId);
        jLYears.setText("Days");
     n=1;
     jTFLoanTerm.setText(df1.format(amortize.time(parseInt(jTFLoanTerm1.getText()),n))+"");
     
     
    fios.forceFileExistance(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    int windowhh =fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    switch(windowhh ){
    case 1:
    List theNewDetails=new ArrayList();
    String amortz=   fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"));
    theNewDetails.add(amortz.split("[,]", 7)[0]);//Account Number
    theNewDetails.add(amortz.split("[,]", 7)[1]);//Account Name
    theNewDetails.add(amortz.split("[,]", 7)[2]);//Actual loan Tenure
    theNewDetails.add("DAYS");//Type of loan Tenure
    theNewDetails.add(amortz.split("[,]", 7)[4]);//Amount Applied for
    theNewDetails.add(amortz.split("[,]", 7)[5]);//Payment Source
    theNewDetails.add(amortz.split("[,]", 7)[6]);//Loan Purpose
    recombineAmortDetails(theNewDetails);
    break;
        
        }
    }//GEN-LAST:event_jRadioButtonReducingBal1ActionPerformed

    private void jRadioButtonReducingBal2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonReducingBal2ActionPerformed
      Amortization amortize = new Amortization(this.userId);
        jLYears.setText("Weeks");
     n=2;
     jTFLoanTerm.setText(df1.format(amortize.time(parseInt(jTFLoanTerm1.getText()),n))+"");
     
       fios.forceFileExistance(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    int windowhh =fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    switch(windowhh ){
    case 1:
    List theNewDetails=new ArrayList();
    String amortz=   fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"));
    theNewDetails.add(amortz.split("[,]", 7)[0]);//Account Number
    theNewDetails.add(amortz.split("[,]", 7)[1]);//Account Name
    theNewDetails.add(amortz.split("[,]", 7)[2]);//Actual loan Tenure
    theNewDetails.add("WEEKS");//Type of loan Tenure
    theNewDetails.add(amortz.split("[,]", 7)[4]);//Amount Applied for
    theNewDetails.add(amortz.split("[,]", 7)[5]);//Payment Source
    theNewDetails.add(amortz.split("[,]", 7)[6]);//Loan Purpose
    recombineAmortDetails(theNewDetails);
    break;
        
        }
    }//GEN-LAST:event_jRadioButtonReducingBal2ActionPerformed

    private void jRadioButtonReducingBal3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonReducingBal3ActionPerformed
       
         Amortization amortize = new Amortization(this.userId);
        jLYears.setText("Fortnights");
       n=3;
       jTFLoanTerm.setText(df1.format(amortize.time(parseInt(jTFLoanTerm1.getText()),n))+"");
       
         fios.forceFileExistance(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    int windowhh =fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    switch(windowhh ){
    case 1:
    List theNewDetails=new ArrayList();
    String amortz=   fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"));
    theNewDetails.add(amortz.split("[,]", 7)[0]);//Account Number
    theNewDetails.add(amortz.split("[,]", 7)[1]);//Account Name
    theNewDetails.add(amortz.split("[,]", 7)[2]);//Actual loan Tenure
    theNewDetails.add("FORTNIGHTS");//Type of loan Tenure
    theNewDetails.add(amortz.split("[,]", 7)[4]);//Amount Applied for
    theNewDetails.add(amortz.split("[,]", 7)[5]);//Payment Source
    theNewDetails.add(amortz.split("[,]", 7)[6]);//Loan Purpose
    recombineAmortDetails(theNewDetails);
    break;
        
        }
    }//GEN-LAST:event_jRadioButtonReducingBal3ActionPerformed

    private void jRadioButtonReducingBal4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonReducingBal4ActionPerformed
      Amortization amortize = new Amortization(this.userId);
        jLYears.setText("Months");
      n=4;
       jTFLoanTerm.setText(df1.format(amortize.time(parseDouble(jTFLoanTerm1.getText()),n))+"");
       
         fios.forceFileExistance(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    int windowhh =fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    switch(windowhh ){
    case 1:
    List theNewDetails=new ArrayList();
    String amortz=   fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"));
    theNewDetails.add(amortz.split("[,]", 7)[0]);//Account Number
    theNewDetails.add(amortz.split("[,]", 7)[1]);//Account Name
    theNewDetails.add(amortz.split("[,]", 7)[2]);//Actual loan Tenure
    theNewDetails.add("MONTHS");//Type of loan Tenure
    theNewDetails.add(amortz.split("[,]", 7)[4]);//Amount Applied for
    theNewDetails.add(amortz.split("[,]", 7)[5]);//Payment Source
    theNewDetails.add(amortz.split("[,]", 7)[6]);//Loan Purpose
    recombineAmortDetails(theNewDetails);
    break;
        
        }
    }//GEN-LAST:event_jRadioButtonReducingBal4ActionPerformed

    private void jRadioButtonReducingBal5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonReducingBal5ActionPerformed
         Amortization amortize = new Amortization(this.userId);
        jLYears.setText("Qauters");
        n=5;
        jTFLoanTerm.setText(df1.format(amortize.time(parseDouble(jTFLoanTerm1.getText()),n))+"");
        
          fios.forceFileExistance(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    int windowhh =fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    switch(windowhh ){
    case 1:
    List theNewDetails=new ArrayList();
    String amortz=   fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"));
    theNewDetails.add(amortz.split("[,]", 7)[0]);//Account Number
    theNewDetails.add(amortz.split("[,]", 7)[1]);//Account Name
    theNewDetails.add(amortz.split("[,]", 7)[2]);//Actual loan Tenure
    theNewDetails.add("QAUTERS");//Type of loan Tenure
    theNewDetails.add(amortz.split("[,]", 7)[4]);//Amount Applied for
    theNewDetails.add(amortz.split("[,]", 7)[5]);//Payment Source
    theNewDetails.add(amortz.split("[,]", 7)[6]);//Loan Purpose
    recombineAmortDetails(theNewDetails);
    break;
        
        }
    }//GEN-LAST:event_jRadioButtonReducingBal5ActionPerformed

    private void jRadioButtonReducingBal6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonReducingBal6ActionPerformed
    Amortization amortize = new Amortization(this.userId);
        jLYears.setText("Half years");
     n=6;
       jTFLoanTerm.setText(df1.format(amortize.time(parseDouble(jTFLoanTerm1.getText()),n))+"");
       
         fios.forceFileExistance(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    int windowhh =fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    switch(windowhh ){
    case 1:
    List theNewDetails=new ArrayList();
    String amortz=   fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"));
    theNewDetails.add(amortz.split("[,]", 7)[0]);//Account Number
    theNewDetails.add(amortz.split("[,]", 7)[1]);//Account Name
    theNewDetails.add(amortz.split("[,]", 7)[2]);//Actual loan Tenure
    theNewDetails.add("HALF YEARS");//Type of loan Tenure
    theNewDetails.add(amortz.split("[,]", 7)[4]);//Amount Applied for
    theNewDetails.add(amortz.split("[,]", 7)[5]);//Payment Source
    theNewDetails.add(amortz.split("[,]", 7)[6]);//Loan Purpose
    recombineAmortDetails(theNewDetails);
    break;
        
        }
    }//GEN-LAST:event_jRadioButtonReducingBal6ActionPerformed

    private void jRadioButtonReducingBal7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonReducingBal7ActionPerformed
     Amortization amortize = new Amortization(this.userId);
        jLYears.setText("Biennials");
      n=8;
       jTFLoanTerm.setText(df1.format(amortize.time(parseDouble(jTFLoanTerm1.getText()),n))+"");
       
         fios.forceFileExistance(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    int windowhh =fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    switch(windowhh ){
    case 1:
    List theNewDetails=new ArrayList();
    String amortz=   fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"));
    theNewDetails.add(amortz.split("[,]", 7)[0]);//Account Number
    theNewDetails.add(amortz.split("[,]", 7)[1]);//Account Name
    theNewDetails.add(amortz.split("[,]", 7)[2]);//Actual loan Tenure
    theNewDetails.add("BIENNIALS");//Type of loan Tenure
    theNewDetails.add(amortz.split("[,]", 7)[4]);//Amount Applied for
    theNewDetails.add(amortz.split("[,]", 7)[5]);//Payment Source
    theNewDetails.add(amortz.split("[,]", 7)[6]);//Loan Purpose
    recombineAmortDetails(theNewDetails);
    break;
        
        }
    }//GEN-LAST:event_jRadioButtonReducingBal7ActionPerformed

    private void jRadioButtonReducingBal8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonReducingBal8ActionPerformed
    jButton9.setVisible(true);
    jRadioButtonReducingBal8.setVisible(false);
    jRadioButtonFixedInstalments1.setVisible(false);
    }//GEN-LAST:event_jRadioButtonReducingBal8ActionPerformed

    private void jRadioButtonReducingBal9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonReducingBal9ActionPerformed
         Amortization amortize = new Amortization(this.userId);
        jLYears.setText("Years");
        
          n=7;
          
          jTFLoanTerm.setText(df1.format(amortize.time(parseDouble(jTFLoanTerm1.getText()),n))+"");
          
            fios.forceFileExistance(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    int windowhh =fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
    switch(windowhh ){
    case 1:
    List theNewDetails=new ArrayList();
    String amortz=   fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"));
    theNewDetails.add(amortz.split("[,]", 7)[0]);//Account Number
    theNewDetails.add(amortz.split("[,]", 7)[1]);//Account Name
    theNewDetails.add(amortz.split("[,]", 7)[2]);//Actual loan Tenure
    theNewDetails.add("YEARS");//Type of loan Tenure
    theNewDetails.add(amortz.split("[,]", 7)[4]);//Amount Applied for
    theNewDetails.add(amortz.split("[,]", 7)[5]);//Payment Source
    theNewDetails.add(amortz.split("[,]", 7)[6]);//Loan Purpose
    recombineAmortDetails(theNewDetails);
    break;
        
        }
    }//GEN-LAST:event_jRadioButtonReducingBal9ActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        
         jLabel3.setVisible(false);
        jRadioButtonReducingBal1.setVisible(true);
         jRadioButtonReducingBal2.setVisible(true);
         jRadioButtonReducingBal3.setVisible(true);
         jRadioButtonReducingBal4.setVisible(true);
         jRadioButtonReducingBal5.setVisible(true);
         jRadioButtonReducingBal6.setVisible(true);
         jRadioButtonReducingBal7.setVisible(true);
         jRadioButtonReducingBal9.setVisible(true);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jTFLoanTerm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFLoanTerm1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFLoanTerm1ActionPerformed

    private void jRadioButtonFixedInstalmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFixedInstalmentsActionPerformed
     fios.forceFileExistance(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
        int windowhh =fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
        switch(windowhh ){
        case 1:
         if(jRadioButtonFixedInstalments.isSelected()){

     Integer zx=2;
     fios.intFileWriterReplace(fios.createFileName("persistence", "interestPlan", "flatInterestPlan"+this.userId+".txt"), zx.toString());
     Integer zxj=0;
      fios.intFileWriterReplace(fios.createFileName("persistence", "interestPlan", "flatInterestPlan2"+this.userId+".txt"), zxj.toString());
      fios.intFileWriterReplace(fios.createFileName("persistence", "interestPlan", "flatInterestPlan3"+this.userId+".txt"), zxj.toString());
     } else{
      Integer zx=0;
     fios.intFileWriterReplace(fios.createFileName("persistence", "interestPlan", "flatInterestPlan2"+this.userId+".txt"), zx.toString());
     
     
     }


        break;



        }
    }//GEN-LAST:event_jRadioButtonFixedInstalmentsActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       AmotizationCalculator f = new  AmotizationCalculator(userId,amortDetails);
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
//        f.setUserID(userId);
        this.dispose();    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed


    }//GEN-LAST:event_jPanel2MousePressed

    private void jLabel57MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel57MousePressed
//
//        if(fios.intFileReader(fios.createFileName("amortization", "flipWindows", "destWindow.txt"))==35){
//        
//         LoanApprovals f = new  LoanApprovals(userId);
//        f.setVisible(true);
//        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
//        f.setSize(screen.getSize());
//        f.pack();
////        f.setUserID(userId);
//        this.dispose();
//        
//        } else{
//        
//        LoanManagmentWindow f = new  LoanManagmentWindow(userId);
//        f.setVisible(true);
//        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
//        f.setSize(screen.getSize());
//        f.pack();
////        f.setUserID(userId);
//        this.dispose();
//        }
         
         fios.intFileWriterReplace(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"), "1");
        
        
        switch(dbq.title(userId)){
            case "Loans Officer":
         LoanManagmentWindow ffx = new LoanManagmentWindow (userId);
        ffx.setVisible(true);
        Dimension screensx = Toolkit.getDefaultToolkit().getScreenSize();
        ffx.setSize(screensx.getSize());
        ffx.pack();
        this.dispose();
                break;
            case "Accountant":
           PostingEntryWindow ff = new PostingEntryWindow (userId,amortDetails);
        ff.setVisible(true);
        Dimension screens = Toolkit.getDefaultToolkit().getScreenSize();
        ff.setSize(screens.getSize());
        ff.pack();
        this.dispose();
                
                
                break;
            case "Supervisor":
            PostingEntryWindow f = new PostingEntryWindow (userId,amortDetails);
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
        this.dispose();
                break;
        
        
           case "Manager":
            LoanApprovals fx = new LoanApprovals (userId);
        fx.setVisible(true);
        Dimension screenx = Toolkit.getDefaultToolkit().getScreenSize();
        fx.setSize(screenx.getSize());
        fx.pack();
        this.dispose();
                break;
         case "Cashier":
            PostingEntryWindow fxs = new PostingEntryWindow (userId,amortDetails);
        fxs.setVisible(true);
        Dimension screenxs = Toolkit.getDefaultToolkit().getScreenSize();
        fxs.setSize(screenxs.getSize());
        fxs.pack();
        this.dispose();
                break;
               case "System Admin":
            CreateNewStaff fxs1 = new CreateNewStaff (userId);
        fxs1.setVisible(true);
        Dimension screenxs1 = Toolkit.getDefaultToolkit().getScreenSize();
        fxs1.setSize(screenxs1.getSize());
        fxs1.pack();
        this.dispose();
                break;
        }
  
        
        
    }//GEN-LAST:event_jLabel57MousePressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        
        
         Amortization amortize = new Amortization(this.userId);
         String ghd =fios.stringFileReader(fios.createFileName("persistence", "interestPlan", "flatInterestPlan5.txt"));
                String amorts=   fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"));
            
                fios.forceFileExistance(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
                int windowhh =fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
                switch(windowhh ){
                case 1:
                   jLabel2.setVisible(true);
                   jLabel2.setText("Loan Amortization for  "+dbq.AccountName(amorts.split("[,]", 7)[0]));
                    jComboBox1.setVisible(true);
                    dbq.fillWithUserNames(jComboBox1);
                    jComboBox1.setSelectedIndex(0);
                  
//                jLabel2.setVisible(false);
                jRadioButtonFixedInstalments1.setVisible(false);
                jRadioButtonReducingBal1.setVisible(true);
                jRadioButtonReducingBal3.setVisible(true);
                jRadioButtonReducingBal4.setVisible(true);
                jRadioButtonReducingBal5.setVisible(true);
                jRadioButtonReducingBal6.setVisible(true);
                jRadioButtonReducingBal9.setVisible(true);
                jRadioButtonReducingBal7.setVisible(true);
                jRadioButtonReducingBal.setVisible(false);
                jRadioButtonReducingBal2.setVisible(true);
                jLabel57.setVisible(false);

                jFTFLoanAmount.setEditable(false);
                jTFLoanTerm1.setEditable(false);
                jButton2.setVisible(false);
                         jButton1.setEnabled(false);
                         jButton4.setEnabled(false);
                         jButton5.setEnabled(false);
                          jButton6.setEnabled(false);
                          jButton7.setEnabled(false);
//                           jLabel2.setVisible(false);
                jButton9.setVisible(false);
                jRadioButtonReducingBal8.setVisible(false);
                jRadioButtonFixedInstalments.setVisible(false);
//                jRadioButtonReducingBal2.setVisible(false);
                jLabel3.setVisible(false);

                jButton3.setVisible(true);
                jTextField1.setVisible(true);
//                int windg =fios.intFileReader(fios.createFileName("persistence", "interestPlan", "flatInterestPlan4.txt"));
               
                jFTFLoanAmount.setValue(parseDouble(amorts.split("[,]", 7)[4]));
                jTFLoanTerm1.setText(amorts.split("[,]", 7)[2]);
                jTFLoanTerm2.setText(ghd+"");
                switch(amorts.split("[,]", 7)[3]){
                case "DAYS":jLYears.setText("Days");
                n=1;
                jTFLoanTerm.setText(df1.format(amortize.time(parseDouble(jTFLoanTerm1.getText()),n))+""); 
                jRadioButtonReducingBal1.setVisible(true);
                jRadioButtonReducingBal1.setSelected(true);
                break;
                case "WEEKS": jLYears.setText("Weeks");

                n=2;
                jTFLoanTerm.setText(df1.format(amortize.time(parseDouble(jTFLoanTerm1.getText()),n))+""); break;
                case "FORTNIGHTS": jLYears.setText("Fortnights");
                n=3;
                jTFLoanTerm.setText(df1.format(amortize.time(parseDouble(jTFLoanTerm1.getText()),n))+"");break;
                case "MONTHS": jLYears.setText("Months");
                n=4;
                jTFLoanTerm.setText(df1.format(amortize.time(parseDouble(jTFLoanTerm1.getText()),n))+""); break;
                case "QUARTERS": jLYears.setText("Qauters");
                n=5;
                jTFLoanTerm.setText(df1.format(amortize.time(parseDouble(jTFLoanTerm1.getText()),n))+""); break;
                case "HALF YEARS":jLYears.setText("Half years");
                n=6;
                jTFLoanTerm.setText(df1.format(amortize.time(parseDouble(jTFLoanTerm1.getText()),n))+"");break;
                case "YEARS": jLYears.setText("Years");
                n=7;
                jTFLoanTerm.setText(df1.format(amortize.time(parseDouble(jTFLoanTerm1.getText()),n))+""); break;
                case "BIENNIALS": jLYears.setText("Biennials");
                n=8;
                jTFLoanTerm.setText(df1.format(amortize.time(parseDouble(jTFLoanTerm1.getText()),n))+""); break;

}

break;

 
    
 }

    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    int i=1;
     while(i<=5){
     
     JOptionPane.showMessageDialog(this, "SYSTEM LOG OUT ERROR!!!!!!!!!");
     }
    }//GEN-LAST:event_formWindowClosing

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
     Calender frmMain = new Calender();
        frmMain.setIUpdateText(this);  // assuming 'this' is an IUpdateText interface compliant
        frmMain.pack();
        frmMain.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
//       jTextField2.setText(jComboBox1.getSelectedItem().toString());
//        jTextField2.setVisible(true);
//                jTextField2.setEditable(false);
//                jComboBox1.setVisible(false);
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jTFLoanTerm2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFLoanTerm2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFLoanTerm2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        amortizeLoan amorty =new amortizeLoan(userId);
        
        String amortz=   fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"));
        
       
        if(!(model==null)){
            
        amorty.createTheLoan(model,amortDetailsx,amortDetails,AmotizationCalculator.this);
        
        JOptionPane.showMessageDialog(this, dbq.AccountName(amortz.split("[,]", 7)[0])+"'s"+" "+"Loan was successfully created!");
        
        }else{
        JOptionPane.showMessageDialog(this, "Please first amortize the loan!!");
        return;
        }
        
        
      LoanManagmentWindow f = new    LoanManagmentWindow(userId);
      
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
//        f.setUserID(userId);
        this.dispose();   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

       

        
        Object[] optionsSF = {"Yes", "No"};
                        int nSF = JOptionPane.showOptionDialog(this, "Are you sure you want to cancel"+" "+dbq.AccountName(fios.createFileName("loanApplication", "amortValues", "activeAccountApproval"+this.userId+".txt"))+"'s"+"  "+"Loan Approval?",
                                "Alert!!", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, optionsSF, optionsSF[0]);
                        if (nSF == JOptionPane.YES_OPTION) {
                            
//                   loan.dropTableLoan(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt")).split("[,]")[0]);          
                  
                   NewLoanApplication fo15 = new NewLoanApplication(userId);
                    fo15.setVisible(true);
                    Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
                    fo15.setSize(screen.getSize());
                    fo15.pack();
                    this.dispose();
                        } else if (nSF == JOptionPane.NO_OPTION) {
                            this.setVisible(true);
                        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
                         jButton1.setEnabled(false);
                         jButton4.setEnabled(false);
                         jButton5.setEnabled(false);
                         jTFLoanTerm2.setEditable(true);
                         jTextField1.setEditable(true);
                         jButton3.setEnabled(true);
                          jBCalender.setEnabled(true);
                          jComboBox1.setEnabled(true);
                          jButton6.setEnabled(false);
                          jButton7.setEnabled(false);
                             jButton8.setVisible(true);
                        jButton8.setEnabled(true);
                        jButton9.setVisible(false);
                jRadioButtonReducingBal8.setVisible(false);
                jRadioButtonFixedInstalments.setVisible(false);
                jRadioButtonReducingBal2.setVisible(true);
                jRadioButtonFixedInstalments1.setVisible(false);
                 jRadioButtonReducingBal.setVisible(false);
                 jRadioButtonReducingBal1.setVisible(true);
                jRadioButtonReducingBal3.setVisible(true);
                jRadioButtonReducingBal4.setVisible(true);
                jRadioButtonReducingBal5.setVisible(true);
                jRadioButtonReducingBal6.setVisible(true);
                jRadioButtonReducingBal9.setVisible(true);
                jRadioButtonReducingBal7.setVisible(true);
                jLabel3.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
          String theCounter=getCounter();
        ObjectTableModel original = (ObjectTableModel)jTable2.getModel();
        List<List>  d=new ArrayList();  List c=new ArrayList();
       
      
        
for (int col = 0; col < original.getColumnCount(); col++) {  c.add(original.getColumnName(col));}

d.add(c);

for (int targetRow = 0; targetRow < original.getRowCount(); targetRow++) {
   
    if(!original.getRow(targetRow).isEmpty()){
        if(jTable2.isCellSelected(targetRow, 0)){
    d.add(original.getRow(jTable2.convertRowIndexToModel(targetRow)));
        }
    }
}


writeExcel.creatExcelFromTable(d,"Recon"+sdk.format(new Date(System.currentTimeMillis()))+theCounter,"table"+sdk.format(new Date(System.currentTimeMillis()))+theCounter);
  
generateFile("table"+sdk.format(new Date(System.currentTimeMillis()))+theCounter);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       try {
             jTable2.print();
         } catch (PrinterException ex) {
             Logger.getLogger(ReportView.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jRadioButtonFixedInstalments1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFixedInstalments1ActionPerformed

        fios.forceFileExistance(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
        int windowhh =fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));//Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest
        switch(windowhh ){
        case 1:
        if(jRadioButtonFixedInstalments1.isSelected()){
        Integer zx=1;
        fios.intFileWriterReplace(fios.createFileName("persistence", "interestPlan", "flatInterestPlan"+this.userId+".txt"), zx.toString());
        Integer zxs=0;
        fios.intFileWriterReplace(fios.createFileName("persistence", "interestPlan", "flatInterestPlan3"+this.userId+".txt"), zxs.toString());
        fios.intFileWriterReplace(fios.createFileName("persistence", "interestPlan", "flatInterestPlan2"+this.userId+".txt"), zxs.toString());
        } else{
        Integer zx=0;
        fios.intFileWriterReplace(fios.createFileName("persistence", "interestPlan", "flatInterestPlan1"+this.userId+".txt"), zx.toString());

        }     


        break;



        }
        
        
       
        
    }//GEN-LAST:event_jRadioButtonFixedInstalments1ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
         jButton9.setVisible(false);
     jRadioButtonFixedInstalments.setVisible(true);
     jRadioButtonReducingBal.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        jButton8.setVisible(false);
     jRadioButtonReducingBal8.setVisible(true);
     jRadioButtonFixedInstalments1.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
     
        for(Object the:amortDetails){
       
       JOptionPane.showMessageDialog(this, the);
       
       }
        
        
    }//GEN-LAST:event_jButton10ActionPerformed
   

 private boolean flatInterestRate(){ 
     boolean checkmate=false;
  int useAlt= fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt")); //Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest  
  int windowhh =fios.intFileReader(fios.createFileName("persistence", "interestPlan", "flatInterestPlan"+this.userId+".txt"));
  if(useAlt==1){
      
  if(windowhh==1){
      
  checkmate=true;
  
  
  }else{
  
  checkmate=false;
  
  }
  
  
  }else{
 checkmate= jRadioButtonFixedInstalments1.isSelected();
  }
return checkmate;
 
 }
  private boolean reducingBalanceReducingInstalment(){
      boolean checkmate=false;
  int useAlt= fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));  //Stores a value which indicates the necessary amortization type, either as reducing interest or flat interest 
  int windowhh =fios.intFileReader(fios.createFileName("persistence", "interestPlan", "flatInterestPlan"+this.userId+".txt"));
  if(useAlt==1){
      
  if(windowhh==3){
      
  checkmate=true;
  
  
  }else{
  
  checkmate=false;
  
  }
  
  
  }else{
 checkmate= jRadioButtonReducingBal.isSelected(); 
  }
return checkmate;
    
        }
 private boolean reducingBalancefixedInstalment(){
  boolean checkmate=false;
  int useAlt= fios.intFileReader(fios.createFileName("amortization", "allowUsage", "showNecessaryAmorts.txt"));   
  int windowhh =fios.intFileReader(fios.createFileName("persistence", "interestPlan", "flatInterestPlan"+this.userId+".txt"));
  if(useAlt==1){
     
  if(windowhh==2){
 
  checkmate=true;
      }else{
    checkmate=false;
    }
  }else{
 checkmate= jRadioButtonFixedInstalments.isSelected();
  }
return checkmate;

 
 }
 
//private ObjectTableModel amortizeme(){
//    
//ObjectTableModel mymodel=null;
//
//    List amortDetails = new ArrayList();
//    
//    amortDetails.add(jFTFLoanAmount.getValue().toString());//Principal amount
//    amortDetails.add(jTFLoanTerm2.getText());//Interest Rate
//    amortDetails.add(jTFLoanTerm1.getText());//loan Tenure
//    amortDetails.add(jTextField1.getText());//Start date
//    amortDetails.add(n+"");//Payment term type
////      fios.stringFileWriter(fios.createFileName("test", "testit", "trdyr.txt"),amortDetails.get(1).toString()); 
//     
//     
//     if (flatInterestRate()){
//         
// mymodel=amortize.amortizeFlatInterestRate(jTable2,amortDetails);   
// 
//jTable2.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
//    @Override
//    public Component getTableCellRendererComponent(JTable table,
//            Object value, boolean isSelected, boolean hasFocus, int row, int col) {
//
//     this.setHorizontalAlignment(JLabel.CENTER);
//      if(col!=8){
//          Number c = (Number)parseDouble(value.toString());
//       String text = NumberFormat.fmt(c );
//           this.setText(text);
//      
//      }
//      else{this.setText(value.toString());}
//               if (row%2==0) {
//            setBackground(jBCalender.getBackground());
//            setForeground(Color.BLACK);
//            if(isSelected){setBackground(Color.CYAN);}
//        } else {
//             setBackground(jLCurrency.getForeground());
//           setForeground(Color.BLACK);
//              if(isSelected){setBackground(Color.CYAN);}
//        }  
//         
//         
//        return this;
//    }   
//});
//
//}else if(reducingBalancefixedInstalment()){
//   
//            mymodel=amortize.amortizeReducingBalanceFixedInstalment(jTable2, amortDetails);
//jTable2.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
//    @Override
//    public Component getTableCellRendererComponent(JTable table,
//            Object value, boolean isSelected, boolean hasFocus, int row, int col) {
//
//     this.setHorizontalAlignment(JLabel.CENTER);
//      if(col!=8){
//          Number c = (Number)parseDouble(value.toString());
//       String text = NumberFormat.fmt(c );
//           this.setText(text);
//      
//      }
//      else{this.setText(value.toString());}
//               if (row%2==0) {
//            setBackground(jPanel1.getBackground());
//            setForeground(Color.BLACK);
//            if(isSelected){setBackground(Color.CYAN);}
//        } else {
//             setBackground(/*jLCurrency.getForeground()*/Color.WHITE);
//           setForeground(Color.BLACK);
//              if(isSelected){setBackground(Color.CYAN);}
//        }  
//         
//         
//        return this;
//    }   
//});
//
//}else if(reducingBalanceReducingInstalment()){
//
//    
//    
//  mymodel=amortize.amortizereducingBalanceReducingInstalment(jTable2, amortDetails);
//  
//  jTable2.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
//    @Override
//    public Component getTableCellRendererComponent(JTable table,
//            Object value, boolean isSelected, boolean hasFocus, int row, int col) {
//     table.setShowGrid(true);
//        table.setGridColor(Color.LIGHT_GRAY);
//         table.setAlignmentX(LEFT_ALIGNMENT);
// table.setAlignmentY(CENTER_ALIGNMENT);
// table.setAutoscrolls(true);
// table.setShowHorizontalLines(true);
//
// table.setRowHeight(20);
//     this.setHorizontalAlignment(JLabel.CENTER);
//      if(col!=8){
//          Number c = (Number)parseDouble(value.toString());
//       String text = NumberFormat.fmt(c );
//           this.setText(text);
//      
//      }
//      else{this.setText(value.toString());}
//               if (row%2==0) {
//            setBackground(jBCalender.getBackground());
//            setForeground(Color.BLACK);
//            if(isSelected){setBackground(Color.CYAN);}
//        } else {
//             setBackground(jLCurrency.getForeground());
//           setForeground(Color.BLACK);
//              if(isSelected){setBackground(Color.CYAN);}
//        }  
//         
//         
//        return this;
//    }   
//});
//
//
//}
//       
// 
//return mymodel;
//}
//public String getCounterl(){
//String thecounter="";
//fios.forceFileExistanceHundred(fios.createFileName("loanApplication", "amortValues", "loanCounter.txt"));
//
//thecounter =""+(parseInt(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "loanCounter.txt")))+1);
//fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "loanCounter.txt"), thecounter);
//return thecounter;
//}       
private void generateFile(String fileName){
  JOptionPane.showMessageDialog(this, fileName);  
   
     if (Desktop.isDesktopSupported()) {
      try {
          // no application registered for PDFs
          
          File myFile = new File(fios.createFileName1("Excel", "Files", fileName+".xlsx"));
        
          Desktop.getDesktop().open(myFile);
      } catch (IOException ex) {
          Logger.getLogger(Reportx.class.getName()).log(Level.SEVERE, null, ex);
      }
     }
    
  }

 public String getCounter(){
String thecounter="";
fios.forceFileExistanceHundred(fios.createFileName("loanApplication", "amortValues", "otherCounters.txt"));

thecounter =""+(parseInt(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "otherCounters.txt")))+1);

fios.stringFileWriter(fios.createFileName("loanApplication", "amortValues", "otherCounters.txt"), thecounter);

return thecounter;
}   
 
 private void recombineAmortDetails(List theDetails){
   
     fios.deleteFileExistance(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"));
   
            fios.forceFileExistanceAppend(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"));
            
            int n=1; String var="";
            while(n<=7){
                if(n==1){var=theDetails.get(0).toString();}//Account Number
                if(n==2){var=theDetails.get(1).toString();}//Account Name
                if(n==3){var=theDetails.get(2).toString();}//Actual loan Tenure
                 if(n==4){var=theDetails.get(3).toString();}//Type of loan Tenure
                  if(n==5){var=theDetails.get(4).toString();}//Amount Applied for
                   if(n==6){var=theDetails.get(5).toString();}//Payment Source
                   if(n==7){var=theDetails.get(6).toString();}//Loan Purpose
                   
                fios.stringFileWriterAppend(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"), var);
                fios.stringFileWriterAppend(fios.createFileName("loanApplication", "amortValues", "amortizeMe"+this.userId+".txt"), ",");
                n++;
            }
     
     
 }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCalender;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFormattedTextField jFTFLoanAmount;
    private javax.swing.JLabel jLCurrency;
    private javax.swing.JLabel jLInterestRate;
    private javax.swing.JLabel jLLoanAmount;
    private javax.swing.JLabel jLLoanTerm;
    private javax.swing.JLabel jLPercentage;
    private javax.swing.JLabel jLPercentage1;
    private javax.swing.JLabel jLYears;
    private javax.swing.JLabel jLYears1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonFixedInstalments;
    private javax.swing.JRadioButton jRadioButtonFixedInstalments1;
    private javax.swing.JRadioButton jRadioButtonReducingBal;
    private javax.swing.JRadioButton jRadioButtonReducingBal1;
    private javax.swing.JRadioButton jRadioButtonReducingBal2;
    private javax.swing.JRadioButton jRadioButtonReducingBal3;
    private javax.swing.JRadioButton jRadioButtonReducingBal4;
    private javax.swing.JRadioButton jRadioButtonReducingBal5;
    private javax.swing.JRadioButton jRadioButtonReducingBal6;
    private javax.swing.JRadioButton jRadioButtonReducingBal7;
    private javax.swing.JRadioButton jRadioButtonReducingBal8;
    private javax.swing.JRadioButton jRadioButtonReducingBal9;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTFLoanTerm;
    private javax.swing.JTextField jTFLoanTerm1;
    private javax.swing.JTextField jTFLoanTerm2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
  
           
     JOptionPane.showMessageDialog(this, "A"+" "+model.getRowCount()+" "+"instalment loan has been created");
        
        LoanManagmentWindow f = new    LoanManagmentWindow(userId);
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
//        f.setUserID(userId);
        this.dispose();   
    }

    @Override
    public void updateText(String text) {
    jTextField1.setText(text);
    }
}
