/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package googo.pmms.project2.frames;

//import googo.generalUse.project1.email.GmailService;

import googo.pmms.project2.accountsHelper.Formartter;
import googo.pmms.project2.accountsHelper.fileInputOutPutStreams;
import googo.pmms.project2.databases.AccountNumberCreationDataBase;
import googo.pmms.project2.databases.DatabaseQuaries;
import googo.pmms.project2.databases.loanDatabaseQuaries;
import googo.pmms.project2.email.SendMail;
import googo.pmms.project2.email.emailManager;
import googo.pmms.project2.excel.CreateExcelWorkBook;
import googo.pmms.project2.frameHelper.IUpdateText;
import googo.pmms.project2.frameHelper.MyComboBoxModel;
import googo.pmms.project2.frameHelper.MyTableModel;
import googo.pmms.project2.frameHelper.ObjectTableModel;
import java.awt.Color;
import static java.awt.Component.CENTER_ALIGNMENT;
import static java.awt.Component.LEFT_ALIGNMENT;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.awt.print.PrinterException;
import java.io.File;
import java.io.IOException;
import static java.lang.Integer.parseInt;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author Stanchart
 */
public class PayrollSetUp extends javax.swing.JFrame implements MouseListener , IUpdateText {
 String userId;
    Formartter fmt = new Formartter();
    fileInputOutPutStreams fios= new fileInputOutPutStreams();
DatabaseQuaries dbq =new DatabaseQuaries();
SendMail send= new SendMail();
emailManager emailMe =new emailManager();
  SimpleDateFormat sdk =new SimpleDateFormat("dd.MM.yyyy");
       CreateExcelWorkBook writeExcel= new CreateExcelWorkBook();
    JOptionPane p;
    MyTableModel model;
    JFrame fi, f, fa, fb, fc;
    Date date; String filename;
    SimpleDateFormat df;
    MyComboBoxModel modelcombo;
    ArrayList<String> data4, column1;
     int master;
     List accountDetails, customerDetails;
     AccountNumberCreationDataBase ancdb=new AccountNumberCreationDataBase();
      loanDatabaseQuaries loanDb=new loanDatabaseQuaries();
       SimpleDateFormat sdf =new SimpleDateFormat("dd/MM/yyyy");
          Graphics g;
         private BufferedImage image;
         String accountNumber="05502000110";
         List amortDetails;
   List<List> reportDetails= new ArrayList();
   
   List attachements;

   
  String PayRollUpdateMode="",PayRollUpdateModeId="",PayRollUpdateGroup="";
  
    /**
     * Creates new form email
     * @param userId
     */
    public PayrollSetUp( String userId) {
        this.userId=userId;
        initComponents();
        
        switch(dbq.title(userId)){
            case "Loans Officer":
                break;
            case "Accountant":
                break;
            case "Supervisor":
                break;
           case "Manager":
                break;
         case "Cashier":
                break;
               case "System Admin":
       
                break;
        }
//       jTree1.addMouseListener( this);
        java.awt.Image img = new ImageIcon(System.getProperty("user.dir")+"/"+"ICON_LOGO.jpg").getImage();
      this.setIconImage(img);
      this.setTitle("EMAIL MODULE-"+dbq.title(userId)); 
      jTable1.setAlignmentX(LEFT_ALIGNMENT);
jTable1.setAlignmentY(CENTER_ALIGNMENT);
jTable1.setAutoscrolls(true);
jTable1.setShowHorizontalLines(true);
jTable1.setShowGrid(true);
jTable1.setRowHeight(35);
jTable1.setGridColor(Color.gray);
jTable1.setAutoCreateRowSorter(true);
 jTable1.addMouseListener(this);
    }
//public void setUserID(String userid){
//this.userId=userid;
//}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ParentjPanel1 = new javax.swing.JPanel();
        FormularjPanel2 = new javax.swing.JPanel();
        PAYEjPanel1 = new javax.swing.JPanel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        amountCredit4 = new javax.swing.JFormattedTextField();
        amountCredit5 = new javax.swing.JFormattedTextField();
        jButton3 = new javax.swing.JButton();
        DetailsWithDataTablejPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        ParentTitlejPanel3 = new javax.swing.JPanel();
        DefinePayrollFormularsAndParameters = new javax.swing.JButton();
        definePayRollDetails = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        PayrollDetailsjPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        DeductionsjButton10 = new javax.swing.JButton();
        DeductionPanel = new javax.swing.JPanel();
        AccrualFrequencyDejComboBox2 = new javax.swing.JComboBox();
        DeductionsjComboBox3 = new javax.swing.JComboBox();
        DeductionCategoryjComboBox4 = new javax.swing.JComboBox();
        AccrualMethodDeductionjComboBox5 = new javax.swing.JComboBox();
        ExemptionalDeductionjComboBox6 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        UploadNewDeductionsOrRewards = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jComboBox2 = new javax.swing.JComboBox<>();
        EmployeeRewardjPanel4 = new javax.swing.JPanel();
        RewardjComboBox2 = new javax.swing.JComboBox();
        AccrualMethodjComboBox2 = new javax.swing.JComboBox();
        AccrualFrequencyjComboBox3 = new javax.swing.JComboBox();
        RewardCategoryjComboBox4 = new javax.swing.JComboBox();
        ExemptionaljComboBox5 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(2147483647, 2147483647));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        ParentjPanel1.setBackground(java.awt.SystemColor.activeCaption);
        ParentjPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ParentjPanel1.setLayout(null);

        FormularjPanel2.setBackground(java.awt.SystemColor.activeCaption);
        FormularjPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        FormularjPanel2.setLayout(null);

        PAYEjPanel1.setBackground(java.awt.SystemColor.activeCaption);
        PAYEjPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PAYEjPanel1.setLayout(null);

        jComboBox3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });
        PAYEjPanel1.add(jComboBox3);
        jComboBox3.setBounds(10, 20, 190, 40);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Percentage Involved");
        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PAYEjPanel1.add(jLabel4);
        jLabel4.setBounds(210, 20, 180, 40);
        jLabel4.setVisible(false);

        jTextField4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        PAYEjPanel1.add(jTextField4);
        jTextField4.setBounds(390, 20, 70, 40);
        jTextField4.setVisible(false);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Upper Limit");
        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PAYEjPanel1.add(jLabel5);
        jLabel5.setBounds(700, 20, 90, 40);
        jLabel5.setVisible(false);

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Lower Limit");
        jLabel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PAYEjPanel1.add(jLabel6);
        jLabel6.setBounds(470, 20, 90, 40);
        jLabel6.setVisible(false);

        amountCredit4.setForeground(new java.awt.Color(0, 102, 51));
        amountCredit4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###,###,###,###"))));
        amountCredit4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        amountCredit4.setValue(null);
        amountCredit4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountCredit4ActionPerformed(evt);
            }
        });
        PAYEjPanel1.add(amountCredit4);
        amountCredit4.setBounds(800, 20, 120, 40);
        amountCredit4.setVisible(false);

        amountCredit5.setForeground(new java.awt.Color(0, 102, 51));
        amountCredit5.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###,###,###,###"))));
        amountCredit5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        amountCredit5.setValue(null);
        amountCredit5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountCredit5ActionPerformed(evt);
            }
        });
        PAYEjPanel1.add(amountCredit5);
        amountCredit5.setBounds(570, 20, 120, 40);
        amountCredit5.setVisible(false);

        jButton3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton3.setText("Submit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        PAYEjPanel1.add(jButton3);
        jButton3.setBounds(930, 20, 130, 40);

        FormularjPanel2.add(PAYEjPanel1);
        PAYEjPanel1.setBounds(10, 10, 1200, 80);

        DetailsWithDataTablejPanel3.setBackground(java.awt.SystemColor.activeCaption);
        DetailsWithDataTablejPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        DetailsWithDataTablejPanel3.setLayout(null);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable3);

        DetailsWithDataTablejPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(160, 30, 1180, 560);

        FormularjPanel2.add(DetailsWithDataTablejPanel3);
        DetailsWithDataTablejPanel3.setBounds(10, 90, 1200, 610);

        ParentjPanel1.add(FormularjPanel2);
        FormularjPanel2.setBounds(10, 60, 1210, 770);
        FormularjPanel2.setVisible(false);

        ParentTitlejPanel3.setBackground(java.awt.SystemColor.activeCaption);
        ParentTitlejPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ParentTitlejPanel3.setLayout(null);

        DefinePayrollFormularsAndParameters.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        DefinePayrollFormularsAndParameters.setText("DEFINE PAYROLL FORMULARS AND PARAMETERS");
        DefinePayrollFormularsAndParameters.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        DefinePayrollFormularsAndParameters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DefinePayrollFormularsAndParametersActionPerformed(evt);
            }
        });
        ParentTitlejPanel3.add(DefinePayrollFormularsAndParameters);
        DefinePayrollFormularsAndParameters.setBounds(350, 5, 380, 40);

        definePayRollDetails.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        definePayRollDetails.setText("DEFINE PAYROLL DETAILS");
        definePayRollDetails.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        definePayRollDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                definePayRollDetailsActionPerformed(evt);
            }
        });
        ParentTitlejPanel3.add(definePayRollDetails);
        definePayRollDetails.setBounds(5, 5, 340, 40);

        jButton4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton4.setText("Log Out");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        ParentTitlejPanel3.add(jButton4);
        jButton4.setBounds(990, 10, 150, 40);

        jButton7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/refresh.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        ParentTitlejPanel3.add(jButton7);
        jButton7.setBounds(1150, 10, 50, 40);

        ParentjPanel1.add(ParentTitlejPanel3);
        ParentTitlejPanel3.setBounds(10, 10, 1210, 50);

        PayrollDetailsjPanel2.setBackground(java.awt.SystemColor.activeCaption);
        PayrollDetailsjPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PayrollDetailsjPanel2.setLayout(null);

        jPanel7.setBackground(java.awt.SystemColor.activeCaption);
        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.setLayout(null);

        jTable1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 102, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTable1);

        jPanel7.add(jScrollPane6);
        jScrollPane6.setBounds(10, 10, 1180, 470);

        jButton10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton10.setText("Print");
        jButton10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton10);
        jButton10.setBounds(13, 490, 110, 50);

        jButton11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton11.setText("Export Excel");
        jButton11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton11);
        jButton11.setBounds(120, 490, 140, 50);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("SEARCH HERE");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel7.add(jLabel2);
        jLabel2.setBounds(510, 490, 200, 50);

        jTextField2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel7.add(jTextField2);
        jTextField2.setBounds(710, 490, 380, 50);

        PayrollDetailsjPanel2.add(jPanel7);
        jPanel7.setBounds(10, 190, 1200, 570);

        jPanel6.setBackground(java.awt.SystemColor.activeCaption);
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setLayout(null);

        jButton5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton5.setText("Upload Deduction/Employee Reward");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton5);
        jButton5.setBounds(10, 0, 260, 40);

        jButton8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton8.setText("Create Employee Reward");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton8);
        jButton8.setBounds(270, 0, 200, 40);

        DeductionsjButton10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        DeductionsjButton10.setText("Create Deductions");
        DeductionsjButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeductionsjButton10ActionPerformed(evt);
            }
        });
        jPanel6.add(DeductionsjButton10);
        DeductionsjButton10.setBounds(470, 0, 170, 40);

        PayrollDetailsjPanel2.add(jPanel6);
        jPanel6.setBounds(0, 0, 1210, 40);

        DeductionPanel.setBackground(new java.awt.Color(0, 153, 153));
        DeductionPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        DeductionPanel.setLayout(null);

        AccrualFrequencyDejComboBox2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        AccrualFrequencyDejComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Accrual Frequency", "Static", "Variable" }));
        DeductionPanel.add(AccrualFrequencyDejComboBox2);
        AccrualFrequencyDejComboBox2.setBounds(990, 10, 220, 40);

        DeductionsjComboBox3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        DeductionPanel.add(DeductionsjComboBox3);
        DeductionsjComboBox3.setBounds(10, 10, 240, 40);

        DeductionCategoryjComboBox4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        DeductionCategoryjComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Deduction Category", "Statutory", "Non Statutory" }));
        DeductionPanel.add(DeductionCategoryjComboBox4);
        DeductionCategoryjComboBox4.setBounds(260, 10, 240, 40);

        AccrualMethodDeductionjComboBox5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        AccrualMethodDeductionjComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Accrual Method", "Rate", "Fixed Amount", "BothRateAndFixedAmount", "Formular" }));
        DeductionPanel.add(AccrualMethodDeductionjComboBox5);
        AccrualMethodDeductionjComboBox5.setBounds(510, 10, 230, 40);

        ExemptionalDeductionjComboBox6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ExemptionalDeductionjComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select If Exemptional", "Yes", "No", "Partly" }));
        DeductionPanel.add(ExemptionalDeductionjComboBox6);
        ExemptionalDeductionjComboBox6.setBounds(750, 10, 230, 40);

        jButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        DeductionPanel.add(jButton2);
        jButton2.setBounds(470, 100, 180, 40);
        jButton2.setText("Create The Deduction");

        jButton9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(0, 153, 0));
        jButton9.setText("Edit PayRoll Item");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        DeductionPanel.add(jButton9);
        jButton9.setBounds(650, 100, 140, 40);
        jButton9.setEnabled(false);

        PayrollDetailsjPanel2.add(DeductionPanel);
        DeductionPanel.setBounds(0, 40, 1210, 150);
        DeductionPanel.setVisible(false);

        UploadNewDeductionsOrRewards.setBackground(java.awt.SystemColor.activeCaption);
        UploadNewDeductionsOrRewards.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        UploadNewDeductionsOrRewards.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        UploadNewDeductionsOrRewards.setLayout(null);

        jComboBox1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select PayRoll Category", "Deduction", "Employee Reward" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        UploadNewDeductionsOrRewards.add(jComboBox1);
        jComboBox1.setBounds(10, 20, 200, 50);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(java.awt.SystemColor.controlLtHighlight);
        jLabel1.setText("Deduction/Reward Name");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        UploadNewDeductionsOrRewards.add(jLabel1);
        jLabel1.setBounds(460, 20, 180, 50);
        jLabel1.setVisible(false);

        jTextField1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(0, 204, 153));
        UploadNewDeductionsOrRewards.add(jTextField1);
        jTextField1.setBounds(640, 20, 230, 50);
        jTextField1.setVisible(false);

        jButton6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton6.setText("Create");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        UploadNewDeductionsOrRewards.add(jButton6);
        jButton6.setBounds(870, 20, 170, 50);
        jButton6.setVisible(false);

        jCheckBox1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox1.setText("Edit");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        UploadNewDeductionsOrRewards.add(jCheckBox1);
        jCheckBox1.setBounds(210, 20, 70, 50);
        jCheckBox1.setVisible(false);

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jComboBox2AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        UploadNewDeductionsOrRewards.add(jComboBox2);
        jComboBox2.setBounds(280, 20, 180, 50);
        jComboBox2.setVisible(false);

        PayrollDetailsjPanel2.add(UploadNewDeductionsOrRewards);
        UploadNewDeductionsOrRewards.setBounds(0, 40, 1210, 150);
        UploadNewDeductionsOrRewards.setVisible(false);

        EmployeeRewardjPanel4.setBackground(java.awt.SystemColor.activeCaption);
        EmployeeRewardjPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        EmployeeRewardjPanel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        EmployeeRewardjPanel4.setLayout(null);

        RewardjComboBox2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        EmployeeRewardjPanel4.add(RewardjComboBox2);
        RewardjComboBox2.setBounds(10, 10, 240, 40);

        AccrualMethodjComboBox2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        AccrualMethodjComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Accrual Method", "Rate", "Fixed Amount", "BothRateAndFixedAmount", "Formular" }));
        EmployeeRewardjPanel4.add(AccrualMethodjComboBox2);
        AccrualMethodjComboBox2.setBounds(510, 10, 240, 40);

        AccrualFrequencyjComboBox3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        AccrualFrequencyjComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Accrual Frequency", "Static", "Variable" }));
        EmployeeRewardjPanel4.add(AccrualFrequencyjComboBox3);
        AccrualFrequencyjComboBox3.setBounds(1000, 10, 200, 40);

        RewardCategoryjComboBox4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        RewardCategoryjComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Reward Category", "Basic Salary", "Allowance" }));
        EmployeeRewardjPanel4.add(RewardCategoryjComboBox4);
        RewardCategoryjComboBox4.setBounds(260, 10, 240, 40);

        ExemptionaljComboBox5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ExemptionaljComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select If Exemptional", "Yes", "No", "Partly" }));
        EmployeeRewardjPanel4.add(ExemptionaljComboBox5);
        ExemptionaljComboBox5.setBounds(760, 10, 230, 40);

        jButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        EmployeeRewardjPanel4.add(jButton1);
        jButton1.setBounds(380, 100, 180, 40);
        jButton1.setText("Create The Reward");

        jButton12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton12.setForeground(new java.awt.Color(0, 153, 0));
        jButton12.setText("Edit PayRoll Item");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        EmployeeRewardjPanel4.add(jButton12);
        jButton12.setBounds(570, 100, 140, 40);
        jButton12.setEnabled(false);

        PayrollDetailsjPanel2.add(EmployeeRewardjPanel4);
        EmployeeRewardjPanel4.setBounds(0, 40, 1210, 150);
        EmployeeRewardjPanel4.setVisible(false);

        ParentjPanel1.add(PayrollDetailsjPanel2);
        PayrollDetailsjPanel2.setBounds(10, 60, 1210, 770);
        PayrollDetailsjPanel2.setVisible(false);

        getContentPane().add(ParentjPanel1);
        ParentjPanel1.setBounds(0, 0, 1260, 850);

        pack();
    }// </editor-fold>//GEN-END:initComponents
//private void updateRoleCombo(JComboBox box){
//        int v=0; ArrayList <String> userRoles=new ArrayList();
//       
//        String [] roles=fios.stringFileReader(fios.createFileName("resources", "roles", "role1.txt")).split("[;]");     
//        
//        while(v<=roles.length-1){if(v==roles.length-1){userRoles.add(roles[v].replace(";", ""));}else{ userRoles.add(roles[v]);} v++; }
//       
//        modelcombo = new MyComboBoxModel(userRoles);
//       
//        box.setModel(modelcombo); 
//}
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      attachements=new ArrayList();
      dbq.fillWithEmployeeRewards(RewardjComboBox2);
      dbq.fillWithDeductions(DeductionsjComboBox3);
      dbq.fillMeWithPayRollItems(jTable1);
      dbq.fillMeWithPayRollFormularItems(jTable3);
       sortTable(jTable1,jTextField2); 
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int i=1;
     while(i<=5){
     
     JOptionPane.showMessageDialog(this, "SYSTEM LOG OUT ERROR!!!!!!!!!");
     }
    }//GEN-LAST:event_formWindowClosing

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
UploadNewDeductionsOrRewards.setVisible(true);    
EmployeeRewardjPanel4.setVisible(false);
DeductionPanel.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

                 Object[] optionsSGS = {"Continue",  "Cancel"};
    int nSGS = JOptionPane.showOptionDialog(this,  "Work may not be saved!!!\n"+"Do you want to  continue ?",
    "SAVE PLEASE", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,optionsSGS, optionsSGS[0]);
    if(nSGS==JOptionPane.YES_OPTION){
     switch(dbq.title(userId)){
            case "Loans Officer":
         LoanManagmentWindow ffx = new LoanManagmentWindow (userId);
        ffx.setVisible(true);
        Dimension screensx = Toolkit.getDefaultToolkit().getScreenSize();
        ffx.setSize(screensx.getSize());
        ffx.pack();
        this.dispose();
                break;
            case "Accountant":
          PostingEntryWindow fh = new  PostingEntryWindow(userId,amortDetails);
        fh.setVisible(true);
        Dimension screenh = Toolkit.getDefaultToolkit().getScreenSize();
        fh.setSize(screenh.getSize());
        fh.pack();
        this.dispose();
                
                
                break;
            case "Supervisor":
        PostingEntryWindow f = new  PostingEntryWindow(userId,amortDetails);
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
        this.dispose();
                break;
        
        
           case "Manager":
            LoanApprovals fx = new LoanApprovals (userId);
        fx.setVisible(true);
        Dimension screenx = Toolkit.getDefaultToolkit().getScreenSize();
        fx.setSize(screenx.getSize());
        fx.pack();
        this.dispose();
                break;
         case "Cashier":
       PostingEntryWindow fg = new  PostingEntryWindow(userId,amortDetails);
        fg.setVisible(true);
        Dimension screeng = Toolkit.getDefaultToolkit().getScreenSize();
        fg.setSize(screeng.getSize());
        fg.pack();
        this.dispose();
                break;
               case "System Admin":
            CreateNewStaff fxs1 = new CreateNewStaff (userId);
        fxs1.setVisible(true);
        Dimension screenxs1 = Toolkit.getDefaultToolkit().getScreenSize();
        fxs1.setSize(screenxs1.getSize());
        fxs1.pack();
        this.dispose();
                break;
        }
    }
    else if (nSGS==JOptionPane.NO_OPTION){ this.setVisible(true);}
               


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        if(jCheckBox1.isSelected()){
        
        
        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Select PayRoll Category")){
      JOptionPane.showMessageDialog(this, "Please first select the category of payroll");
        return;
        }else{
           if(jTextField1.getText().equalsIgnoreCase("")){
      JOptionPane.showMessageDialog(this, "Please first put the payrollCat");
        return;
        }else{
        
           if(!dbq.theRewardDeductionExists(jTextField1.getText())){
      JOptionPane.showMessageDialog(this, "A payroll item you are trying to update does not exist!!!!");
        return;
        }else{
        
        dbq.updatePayRollItem(jComboBox1.getSelectedItem().toString(),jTextField1.getText());   
        
        JOptionPane.showMessageDialog(this, "PayRoll category was successfully updated!!!!!");
        
        }
        
        }
        
        
        }
        
        
        
        }else{
        
        
        
        if(jComboBox1.getSelectedItem().toString().equalsIgnoreCase("Select PayRoll Category")){
      JOptionPane.showMessageDialog(this, "Please first select the category of payroll");
        return;
        }else{
           if(jTextField1.getText().equalsIgnoreCase("")){
      JOptionPane.showMessageDialog(this, "Please first put the payrollCat");
        return;
        }else{
        
           if(dbq.theRewardDeductionExists(jTextField1.getText())){
      JOptionPane.showMessageDialog(this, "A payroll item with a similar name already exists!!!!");
        return;
        }else{
        
        dbq.createNewPayRollItem(jComboBox1.getSelectedItem().toString(),jTextField1.getText());   
        
        JOptionPane.showMessageDialog(this, "PayRoll Item was successfully created!!!!!");
        
        }
        
        }
        
        
        }
        }
           PayrollSetUp fxs1 = new PayrollSetUp (userId);
        fxs1.setVisible(true);
        Dimension screenxs1 = Toolkit.getDefaultToolkit().getScreenSize();
        fxs1.setSize(screenxs1.getSize());
        fxs1.pack();
        this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

                PayrollSetUp fxs1 = new PayrollSetUp (userId);
        fxs1.setVisible(true);
        Dimension screenxs1 = Toolkit.getDefaultToolkit().getScreenSize();
        fxs1.setSize(screenxs1.getSize());
        fxs1.pack();
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
   UploadNewDeductionsOrRewards.setVisible(false);    
EmployeeRewardjPanel4.setVisible(true);
DeductionPanel.setVisible(false);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void DeductionsjButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeductionsjButton10ActionPerformed
        UploadNewDeductionsOrRewards.setVisible(false);    
EmployeeRewardjPanel4.setVisible(false);
DeductionPanel.setVisible(true);
    }//GEN-LAST:event_DeductionsjButton10ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
   
        switch(jComboBox1.getSelectedItem().toString()){
    
        case "Deduction":
            setVisble();
            jLabel1.setText("Deduction");
            break;
        case "Employee Reward":
            setVisble();
            
             jLabel1.setText("Employee Reward");
            
            break;
    }
        
        jCheckBox1.setVisible(true);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    
            if(RewardjComboBox2.getSelectedItem().toString().equalsIgnoreCase("Select The Reward")){
            
            JOptionPane.showMessageDialog(this, "Please first select the reward Name!!!");
            return;
            
            }else{
            if(RewardCategoryjComboBox4.getSelectedItem().toString().equalsIgnoreCase("Select Reward Category")){
            
            JOptionPane.showMessageDialog(this, "Please first select the reward category!!!");
            return;
            
            }else{
              if(AccrualMethodjComboBox2.getSelectedItem().toString().equalsIgnoreCase("Select Accrual Method")){
            
            JOptionPane.showMessageDialog(this, "Please first select the Accrual Method!!!");
            return;
            
            }else{
               if(ExemptionaljComboBox5.getSelectedItem().toString().equalsIgnoreCase("Select If Exemptional")){
            
            JOptionPane.showMessageDialog(this, "Please first select whether the reward is exceptional from statutory payments!!!");
            return;
            
            }else{
                 if(AccrualFrequencyjComboBox3.getSelectedItem().toString().equalsIgnoreCase("Select Accrual Frequency")){
            
            JOptionPane.showMessageDialog(this, "Please first select the Accrual Frequency!!!");
            return;
            
            }else{
            
              if(RewardjComboBox2.getSelectedItem().toString().equalsIgnoreCase("Empty")){
            
            JOptionPane.showMessageDialog(this, "There is no reward created in the system, please first create one!!!");
            return;
            
            }else{
          List rewardDetails=new ArrayList();  
           rewardDetails.add(RewardjComboBox2.getSelectedItem().toString());
             rewardDetails.add(RewardCategoryjComboBox4.getSelectedItem().toString());      
               rewardDetails.add(AccrualMethodjComboBox2.getSelectedItem().toString());    
                 rewardDetails.add(ExemptionaljComboBox5.getSelectedItem().toString());     
                 rewardDetails.add(AccrualFrequencyjComboBox3.getSelectedItem().toString());   
                 
             dbq.updateDetailsOfPayRollReward(rewardDetails); 
             
            
             
             
                 if(jButton1.getText().equalsIgnoreCase("Update The Reward")){
               
              JOptionPane.showMessageDialog(this, "The Employee reward was successfully updated!!!");
//                 jButton1.setText(); 
         
                  }else{
                       
               JOptionPane.showMessageDialog(this, "The Employee reward was successfully created!!!"); 
                 
                 }
             
                 
            }
                     
                     
            }
            
            }
            
            }
            
            }
            
            }
         pRefresh();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
            if(DeductionsjComboBox3.getSelectedItem().toString().equalsIgnoreCase("Select The Deduction")){
            
            JOptionPane.showMessageDialog(this, "Please first select the deduction Name!!!");
            return;
            
            }else{
            if(DeductionCategoryjComboBox4.getSelectedItem().toString().equalsIgnoreCase("Select Deduction Category")){
            
            JOptionPane.showMessageDialog(this, "Please first select the deduction category!!!");
            return;
            
            }else{
              if(AccrualMethodDeductionjComboBox5.getSelectedItem().toString().equalsIgnoreCase("Select Accrual Method")){
            
            JOptionPane.showMessageDialog(this, "Please first select the Accrual Method!!!");
            return;
            
            }else{
               if(ExemptionalDeductionjComboBox6.getSelectedItem().toString().equalsIgnoreCase("Select If Exemptional")){
            
            JOptionPane.showMessageDialog(this, "Please first select whether the deduction is exceptional from statutory payments!!!");
            return;
            
            }else{
                 if(AccrualFrequencyDejComboBox2.getSelectedItem().toString().equalsIgnoreCase("Select Accrual Frequency")){
            
            JOptionPane.showMessageDialog(this, "Please first select the Accrual Frequency!!!");
            return;
            
            }else{
            
              if(DeductionsjComboBox3.getSelectedItem().toString().equalsIgnoreCase("Empty")){
            
            JOptionPane.showMessageDialog(this, "There is no deduction created in the system, please first create one!!!");
            return;
            
            }else{
                  
            
         
          List rewardDetails=new ArrayList();  
           rewardDetails.add(DeductionsjComboBox3.getSelectedItem().toString());
             rewardDetails.add(DeductionCategoryjComboBox4.getSelectedItem().toString());      
               rewardDetails.add(AccrualMethodDeductionjComboBox5.getSelectedItem().toString());    
                 rewardDetails.add(ExemptionalDeductionjComboBox6.getSelectedItem().toString());     
                 rewardDetails.add(AccrualFrequencyDejComboBox2.getSelectedItem().toString());   
                 
             dbq.updateDetailsOfPayRollReward(rewardDetails); 
             
            
              
                  if(jButton2.getText().equalsIgnoreCase("Update The Deduction")){
               
                JOptionPane.showMessageDialog(this, "The Employee deduction was successfully Updated!!!");
//                 jButton1.setText("Update The Reward"); 
               
               }else{
                 JOptionPane.showMessageDialog(this, "The Employee deduction was successfully created!!!");  
                  }
             
             
             
             
            }
                     
                     
            }
            
            }
            
            }
            
            }
            
            }
            PayrollSetUp fxs1 = new PayrollSetUp (userId);
        fxs1.setVisible(true);
        Dimension screenxs1 = Toolkit.getDefaultToolkit().getScreenSize();
        fxs1.setSize(screenxs1.getSize());
        fxs1.pack();
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
 String headerMessage= "LOAN LISTING AS AT  "+fmt.dateConverterForNormalDate(System.currentTimeMillis());
 this.printTable(jTable1, headerMessage);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
       
        List<List>  d=new ArrayList();  List c=new ArrayList();      
       
        ObjectTableModel original = (ObjectTableModel)jTable1.getModel();
        
for (int col = 0; col < original.getColumnCount(); col++) {  c.add(original.getColumnName(col));}

d.add(c);

for (int targetRow = 0; targetRow < original.getRowCount(); targetRow++) {
    if(!original.getRow(targetRow).isEmpty()){
            if(jTable1.isCellSelected(targetRow, 0)){
    d.add(original.getRow(jTable1.convertRowIndexToModel(targetRow)));
            }
//            else{
//     JOptionPane.showMessageDialog(this, "Please first select the rows to export to excel");
//           
//           }
    }}


  String theCounter=getCounter();     
        
writeExcel.creatExcelFromTable(d,"Recon"+sdk.format(new Date(System.currentTimeMillis()))+theCounter,"table"+sdk.format(new Date(System.currentTimeMillis()))+theCounter);
  
generateFile("table"+sdk.format(new Date(System.currentTimeMillis()))+theCounter);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void definePayRollDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_definePayRollDetailsActionPerformed
DefinePayrollFormularsAndParameters.setVisible(false);
        PayrollDetailsjPanel2.setVisible(true);
             FormularjPanel2.setVisible(false);
             
    }//GEN-LAST:event_definePayRollDetailsActionPerformed

    private void DefinePayrollFormularsAndParametersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DefinePayrollFormularsAndParametersActionPerformed

        
        dbq.createPayRollFormularItems(jComboBox3);
        
        definePayRollDetails  .setVisible(false);     
        PayrollDetailsjPanel2.setVisible(false);
             FormularjPanel2.setVisible(true);
             
    }//GEN-LAST:event_DefinePayrollFormularsAndParametersActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
          jButton1.setText("Update The Reward");
          
          
          if(PayRollUpdateMode.equalsIgnoreCase("Not Used")){

    List fetchedPayRollDetails=dbq.fetchUpdatedPayRollD(PayRollUpdateModeId);
//    JOptionPane.showMessageDialog(this, fetchedPayRollDetails.get(0)+";"+fetchedPayRollDetails.get(1)+";"+fetchedPayRollDetails.get(2)+";"+fetchedPayRollDetails.get(3)+";"+fetchedPayRollDetails.get(4));
    RewardjComboBox2.getModel().setSelectedItem(fetchedPayRollDetails.get(0).toString());
    RewardCategoryjComboBox4.getModel().setSelectedItem(fetchedPayRollDetails.get(2).toString());
            AccrualMethodjComboBox2.getModel().setSelectedItem(fetchedPayRollDetails.get(4).toString());
                    ExemptionaljComboBox5.getModel().setSelectedItem(fetchedPayRollDetails.get(5).toString());
                    AccrualFrequencyjComboBox3.getModel().setSelectedItem(fetchedPayRollDetails.get(3).toString());
jButton12.setEnabled(false);
}else{
JOptionPane.showMessageDialog(this, "The payroll item is being used and cannot be updated");

}
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

jButton2.setText("Update The Deduction");

if(PayRollUpdateMode.equalsIgnoreCase("Not Used")){

    List fetchedPayRollDetails=dbq.fetchUpdatedPayRollD(PayRollUpdateModeId);
//    JOptionPane.showMessageDialog(this, fetchedPayRollDetails.get(0)+";"+fetchedPayRollDetails.get(1)+";"+fetchedPayRollDetails.get(2)+";"+fetchedPayRollDetails.get(3)+";"+fetchedPayRollDetails.get(4));
    DeductionsjComboBox3.getModel().setSelectedItem(fetchedPayRollDetails.get(0).toString());
    DeductionCategoryjComboBox4.getModel().setSelectedItem(fetchedPayRollDetails.get(2).toString());
            AccrualMethodDeductionjComboBox5.getModel().setSelectedItem(fetchedPayRollDetails.get(4).toString());
                    ExemptionalDeductionjComboBox6.getModel().setSelectedItem(fetchedPayRollDetails.get(5).toString());
                    AccrualFrequencyDejComboBox2.getModel().setSelectedItem(fetchedPayRollDetails.get(3).toString());
jButton9.setEnabled(false);
}else{
JOptionPane.showMessageDialog(this, "The payroll item is being used and cannot be updated");

}
    }//GEN-LAST:event_jButton9ActionPerformed

    private void amountCredit4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountCredit4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountCredit4ActionPerformed

    private void amountCredit5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountCredit5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountCredit5ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed

        
        jLabel4.setVisible(true);
jTextField4.setVisible(true);
jLabel6.setVisible(true);
amountCredit5.setVisible(true);
 jLabel5.setVisible(true);       
  amountCredit4.setVisible(true);
         jButton3.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
if(jTextField4.getText().equalsIgnoreCase("")){
JOptionPane.showMessageDialog(this, "Please first set the percentage involved!!!");
}else{
if(amountCredit5.getValue()==null){
JOptionPane.showMessageDialog(this, "Please first set the Lower Limite!!!");
}else{

if(amountCredit4.getValue()==null){
JOptionPane.showMessageDialog(this, "Please first set the upper Limite!!!");
}else{
    
List thePayRollFormualarDetails= new ArrayList();
thePayRollFormualarDetails.add(jComboBox3.getSelectedItem().toString());
thePayRollFormualarDetails.add(jTextField4.getText());
thePayRollFormualarDetails.add(amountCredit5.getValue());
thePayRollFormualarDetails.add(amountCredit4.getValue());
dbq.createTheFormularDetails(thePayRollFormualarDetails);

JOptionPane.showMessageDialog(this, "The Range for  "+jComboBox3.getSelectedItem().toString()+" was successfully created!!!");
pRefresh();
}
}

}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected()){
        jComboBox2.setVisible(true);
        dbq.fillThePayRollItem(jComboBox2);
        
        }else if(!jCheckBox1.isSelected()){
        
        
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
     jTextField1.setText(jComboBox2.getSelectedItem().toString());
     
     jButton6.setText("Update");
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox2AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jComboBox2AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2AncestorAdded
private void setVisble(){
jLabel1.setVisible(true);
jTextField1.setVisible(true);
jButton6.setVisible(true);
}
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(email.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(email.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(email.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(email.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new email().setVisible(true);
//            }
//        });
//    }
    
private void generateFile(String fileName){
  JOptionPane.showMessageDialog(this, fileName);  
   
     if (Desktop.isDesktopSupported()) {
      try {
          // no application registered for PDFs
          
          File myFile = new File(fios.createFileName1("Excel", "Files", fileName+".xlsx"));
        
          Desktop.getDesktop().open(myFile);
      } catch (IOException ex) {
          Logger.getLogger(Reportx.class.getName()).log(Level.SEVERE, null, ex);
      }
     }
    
  }
 public String getCounter(){
String thecounter="";
fios.forceFileExistanceHundred(fios.createFileName("loanApplication", "amortValues", "otherCounters.txt"));

thecounter =""+(parseInt(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "otherCounters.txt")))+1);

fios.stringFileWriter(fios.createFileName("loanApplication", "amortValues", "otherCounters.txt"), thecounter);

return thecounter;
} 

public void setTheEmailDetails(List theDetails){

reportDetails.add(theDetails);

}
     private void sortTable(JTable table,JTextField textField){

   
    
TableRowSorter<TableModel> rowSorter  = new TableRowSorter<>(table.getModel());
                     
                      table.setRowSorter(rowSorter);
                     textField.getDocument().addDocumentListener(new DocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = textField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = textField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
    

}
   private void printTable(JTable table,String message) {
        /* Fetch printing properties from the GUI components */

        MessageFormat header = null;
        
        /* if we should print a header */
       
            /* create a MessageFormat around the header text */
//            header = new MessageFormat("LOAN LISTING AS AT  "+fmt.dateConverterForNormalDate(System.currentTimeMillis()));
        header = new MessageFormat(message);
//
        MessageFormat footer = null;
//        
//        /* if we should print a footer */
//     
//            /* create a MessageFormat around the footer text */
            footer = new MessageFormat("Page {0}");
      

        /* determine the print mode */
      

        try {
            /* print the table */
            boolean complete = table.print(JTable.PrintMode.FIT_WIDTH, header, footer);

            /* if printing completes */
            if (complete) {
                /* show a success message */
                JOptionPane.showMessageDialog(this,  "Printing Complete", "Printing Result",JOptionPane.INFORMATION_MESSAGE);
            } else {
                /* show a message indicating that printing was cancelled */
                JOptionPane.showMessageDialog(this,
                                              "Printing Cancelled",
                                              "Printing Result",
                                              JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (PrinterException pe) {
            /* Printing failed, report to the user */
            JOptionPane.showMessageDialog(this,
                                          "Printing Failed: " + pe.getMessage(),
                                          "Printing Result",
                                          JOptionPane.ERROR_MESSAGE);
        }
    } 
    
   private void pRefresh(){
   
      PayrollSetUp fxs1 = new PayrollSetUp (userId);
        fxs1.setVisible(true);
        Dimension screenxs1 = Toolkit.getDefaultToolkit().getScreenSize();
        fxs1.setSize(screenxs1.getSize());
        fxs1.pack();
        this.dispose();
   
   }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox AccrualFrequencyDejComboBox2;
    private javax.swing.JComboBox AccrualFrequencyjComboBox3;
    private javax.swing.JComboBox AccrualMethodDeductionjComboBox5;
    private javax.swing.JComboBox AccrualMethodjComboBox2;
    private javax.swing.JComboBox DeductionCategoryjComboBox4;
    private javax.swing.JPanel DeductionPanel;
    private javax.swing.JButton DeductionsjButton10;
    private javax.swing.JComboBox DeductionsjComboBox3;
    private javax.swing.JButton DefinePayrollFormularsAndParameters;
    private javax.swing.JPanel DetailsWithDataTablejPanel3;
    private javax.swing.JPanel EmployeeRewardjPanel4;
    private javax.swing.JComboBox ExemptionalDeductionjComboBox6;
    private javax.swing.JComboBox ExemptionaljComboBox5;
    private javax.swing.JPanel FormularjPanel2;
    private javax.swing.JPanel PAYEjPanel1;
    private javax.swing.JPanel ParentTitlejPanel3;
    private javax.swing.JPanel ParentjPanel1;
    private javax.swing.JPanel PayrollDetailsjPanel2;
    private javax.swing.JComboBox RewardCategoryjComboBox4;
    private javax.swing.JComboBox RewardjComboBox2;
    private javax.swing.JPanel UploadNewDeductionsOrRewards;
    private javax.swing.JFormattedTextField amountCredit4;
    private javax.swing.JFormattedTextField amountCredit5;
    private javax.swing.JButton definePayRollDetails;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables



    @Override
    public void mouseClicked(MouseEvent me) {
 if (me.getClickCount()==2){
           if(me.getSource() == jTable3){
 
                    int selectedRow =jTable3.getSelectedRow();
                    int selectedColumn =jTable3.getSelectedColumn();
		   if (selectedRow > -1&&selectedColumn>-1)
	   {
	 
         Object cvalue = jTable3.getModel().getValueAt( jTable3.convertRowIndexToModel(selectedRow), 2);
         
   
          
           
           
           
           }
       
       
       
       
       
       
       
           
           
           
           }
 
 
 
 }
    
    }

    @Override
    public void mousePressed(MouseEvent me) {
            
        if(me.getSource() == jTable1){
 
                    int selectedRow =jTable1.getSelectedRow();
                    int selectedColumn =jTable1.getSelectedColumn();
		   if (selectedRow > -1&&selectedColumn>-1)
	   {
	 
         PayRollUpdateModeId = jTable1.getModel().getValueAt( jTable1.convertRowIndexToModel(selectedRow), 0).toString();
         
          PayRollUpdateMode = jTable1.getModel().getValueAt( jTable1.convertRowIndexToModel(selectedRow), 7).toString();
            
           
           
           
           } }
      if(me.getSource() == jTable1){
 
                    int selectedRow =jTable1.getSelectedRow();
                    int selectedColumn =jTable1.getSelectedColumn();
		   if (selectedRow > -1&&selectedColumn>-1)
	   {
	 
       if(jTable1.getModel().getValueAt( jTable1.convertRowIndexToModel(selectedRow), 2).toString().equalsIgnoreCase("Deduction")){
       
       DeductionPanel.setVisible(true);
       jButton9.setEnabled(true);
////        jButton2.setText("Update The Deduction");
        EmployeeRewardjPanel4.setVisible(false);
         UploadNewDeductionsOrRewards.setVisible(false);
       }
         
   
      if(jTable1.getModel().getValueAt( jTable1.convertRowIndexToModel(selectedRow), 2).toString().equalsIgnoreCase("Employee Reward")){
        DeductionPanel.setVisible(false);
       jButton12.setEnabled(true);
//        jButton1.setText("Update The Reward");
        EmployeeRewardjPanel4.setVisible(true);
       UploadNewDeductionsOrRewards.setVisible(false);
       
         
       }       
           
           
           
           } }   
        
    
    
    
    
    
    }

    @Override
    public void mouseReleased(MouseEvent me) {
        
       
       
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        
    }

    @Override
    public void mouseExited(MouseEvent e) {
        
    }

    @Override
    public void updateText(String text) {
     switch( fios.intFileReader(fios.createFileName("PMMS_Statements", "reports", "calSelection.txt"))){ 
//        case 101:jTextField4.setText(text);break;    
      
     }
    }


    


}