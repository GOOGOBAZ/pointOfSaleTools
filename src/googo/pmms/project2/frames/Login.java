
package googo.pmms.project2.frames;


import googo.pmms.project2.accountsHelper.Formartter;
import googo.pmms.project2.loanHelper.MaxmumAmountBorrowedFormulas;
import googo.pmms.project2.accountsHelper.PostingModal;
import googo.pmms.project2.accountsHelper.SendSms;
import googo.pmms.project2.databases.DatabaseQuaries;
import googo.pmms.project2.databases.loanDatabaseQuaries;
import googo.pmms.project2.accountsHelper.fileInputOutPutStreams;
import googo.pmms.project2.databases.AccountNumberCreationDataBase;
import googo.pmms.project2.databases.BackUpRestoreDB;
import googo.pmms.project2.email.SmsUtility;
import googo.pmms.project2.email.TestConnectivity;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import static java.lang.Integer.parseInt;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Stanchart
 */
public class Login extends JFrame implements KeyListener, ActionListener {
    BackUpRestoreDB dbBackup=new BackUpRestoreDB();

    SimpleDateFormat sdf =new SimpleDateFormat("dd/MM/yyyy");
SmsUtility sms= new SmsUtility();
    fileInputOutPutStreams fios= new fileInputOutPutStreams();
    DecimalFormat NumberFormat =new DecimalFormat("#,###.##");
    ArrayList<String> data4, column1;
 ArrayList<ArrayList<String>> data5;
          JOptionPane p;
    PostingModal model ;
    JFrame fi, f,fa,fb,fc;
    Date date;
  SimpleDateFormat df;
TestConnectivity conn=new TestConnectivity();
 AccountNumberCreationDataBase ancdb=new AccountNumberCreationDataBase();
 DatabaseQuaries dbq= new DatabaseQuaries();
 MaxmumAmountBorrowedFormulas maxValue= new MaxmumAmountBorrowedFormulas();
 loanDatabaseQuaries loan=new loanDatabaseQuaries();
 SendSms sendS=new SendSms();
  private java.util.Timer timer = null,timer1 = null;
  private java.util.TimerTask  myNewTask = null,myNewTask1 = null;
  Formartter fmt=new Formartter();
  List amortDetails;
    public Login() {
      
         
    
     initComponents();
     this.setLocationRelativeTo(null);
     Image img = new ImageIcon(System.getProperty("user.dir")+"/"+"ICON_LOGO.jpg").getImage();
      this.setIconImage(img);
       this.setTitle("LOGIN"); 
    Integer xl=1;
   fios.intFileWriterReplace(fios.createFileName("loanAuthorisation", "displayWindow", "authorisationTable.txt"),xl.toString());      
        
    }
              
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPFpassWord = new javax.swing.JPasswordField();
        jTFuserName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 51));
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
            public void windowDeiconified(java.awt.event.WindowEvent evt) {
                formWindowDeiconified(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel2.setBackground(new java.awt.Color(255, 0, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setVerifyInputWhenFocusTarget(false);
        jPanel2.setLayout(null);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/button-login (1).jpg"))); // NOI18N
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);
        jButton1.setBounds(410, 140, 70, 30);
        jButton1.addKeyListener(this);

        jPFpassWord.setBackground(java.awt.SystemColor.control);
        jPFpassWord.setForeground(new java.awt.Color(204, 0, 0));
        jPFpassWord.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPFpassWord.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
        jPFpassWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPFpassWordActionPerformed(evt);
            }
        });
        jPanel2.add(jPFpassWord);
        jPFpassWord.setBounds(380, 100, 137, 30);
        jPFpassWord.addKeyListener(this);

        jTFuserName.setBackground(java.awt.SystemColor.control);
        jTFuserName.setForeground(new java.awt.Color(0, 0, 153));
        jTFuserName.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTFuserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFuserNameActionPerformed(evt);
            }
        });
        jPanel2.add(jTFuserName);
        jTFuserName.setBounds(380, 60, 137, 30);
        jTFuserName.addKeyListener(this);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial Narrow", 0, 11)); // NOI18N
        jLabel3.setText("User Id");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(jLabel3);
        jLabel3.setBounds(260, 60, 100, 30);

        jLabel2.setFont(new java.awt.Font("Arial Narrow", 0, 11)); // NOI18N
        jLabel2.setText("Password");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(jLabel2);
        jLabel2.setBounds(260, 100, 100, 30);

        jTextArea1.setBackground(new java.awt.Color(204, 51, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextArea1.setForeground(java.awt.SystemColor.controlLtHighlight);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane1.setViewportView(jTextArea1);
        jTextArea1.setEditable(false);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 50, 230, 100);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/button-login (1).jpg"))); // NOI18N
        jButton2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);
        jButton2.setBounds(410, 140, 70, 30);
        jButton1.addKeyListener(this);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(2, 320, 900, 260);

        jPanel1.setBackground(new java.awt.Color(255, 0, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        jLabel1.setBackground(new java.awt.Color(114, 44, 44));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/googo/pmms/project2/images/Karen_Logo.jpg"))); // NOI18N
        jLabel1.setToolTipText("*SMS");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), new java.awt.Color(153, 153, 153)));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(320, 60, 140, 160);

        jCheckBox1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox1.setText("Connect to Network");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jCheckBox1);
        jCheckBox1.setBounds(600, 10, 290, 60);
        jCheckBox1.setVisible(false);

        jTextField1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel1.add(jTextField1);
        jTextField1.setBounds(10, 60, 290, 40);
        jTextField1.setVisible(false);

        jButton3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton3.setText("VALIDATE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(120, 100, 100, 40);
        //jButton3.setVisible(false);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 60, 900, 260);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setForeground(new java.awt.Color(0, 0, 102));
        jPanel3.setLayout(null);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 153));
        jLabel4.setText("MONEY LENDER");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(0, 0, 900, 60);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(0, 0, 900, 60);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPFpassWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPFpassWordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPFpassWordActionPerformed

    private void jTFuserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFuserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFuserNameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//JOptionPane.showMessageDialog(this, "wwwwww");
        if(!dbq.statTableNotEmpety()){
////        JOptionPane.showMessageDialog(this, "wwwwwwff");
        dbq.initializeSummuryTable();
        }
        
        
        
        
      fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "valueDate.txt"),sdf.format(new Date(System.currentTimeMillis())));  
      
        char [] jpa2= jPFpassWord.getPassword();
        String jpassword2=String.valueOf(jpa2);
        
        if( jpassword2.equals("googobazimariaterisabazirake2015")){
            JFrame f = new CreateNewStaff("googobazimariaterisabazirake2015");
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
        this.dispose();
}


//
//        if(!new TestInternetConnection().getStatus()){
//        
//        JOptionPane.showMessageDialog(this, "Please check your internet connection");
//        
//        } 
           String juserid1 = jTFuserName.getText();
        char [] jpa1= jPFpassWord.getPassword();
        String jpassword1=String.valueOf(jpa1);
        if(juserid1.equals("")||jpassword1.equals("")){
        JOptionPane.showMessageDialog(this, "Please Enter your user id and password");
        return;
       
        }else{
        
        
        if(dbq.id_Exists(juserid1)){
            
        
        
        if(jpassword1.equals(dbq.password(juserid1))){
            
        fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeUserId.txt"), juserid1);  
        
        if(dbq.title(juserid1).equals("System Admin")||dbq.title(juserid1).equals("DateStarter")){
            
//           fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeUserIdOfficer.txt"), juserid1);   
           
         if(parseInt(fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "passWordChange"+juserid1+".txt")))==46){
         ChangePassword f = new ChangePassword(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//         f.setUserID(jTFuserName.getText());
        f.pack();
        return;
         }  
            
             dbq.updateLogging_in(juserid1, jpassword1, dbq.getDBCurrentDate(), dbq.getDBCurrentTime()+"");
        JOptionPane.showMessageDialog(this, "Logged in successfully");
       
        CreateNewStaff f = new CreateNewStaff (jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
        this.dispose();
        }else{
            
         String todayStored= fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "open_day.txt"));   
             
        String today=sdf.format(new Date(System.currentTimeMillis()));
        
        if(!todayStored.equalsIgnoreCase(today)){ 
            
//           if(fios.intFileReader(fios.createFileName("logOut", "completeShutDown", "secondOpenDay.txt"))!=90){
           
           JOptionPane.showMessageDialog(this, "Start of Day Not Done");
           
//           } 
            return;
            
            
        } else{
            
            logInNow();
            
//            fios.intFileWriterReplace(fios.createFileName("logOut", "completeShutDown", "secondOpenDay.txt"), "0");
        
        }
    
        
        }   
         }else{JOptionPane.showMessageDialog(this, "WRONG PASSWORD");
        return;
        }
        }
        else{
        JOptionPane.showMessageDialog(this, "USER ID NOT FOUND");
        return;
        }}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
      
        int clientType=fios.intFileReader(fios.createFileName1("Client", "Type", "theType.txt"));
        
           int theNetworkConnSet=fios.intFileReader(fios.createFileName("logOut", "completeShutDown", "networkId.txt"));
        
        if(clientType==2){
        jCheckBox1.setVisible(true);
        }
        
            if(theNetworkConnSet==1){
       
            jCheckBox1.setSelected(false);
            
       }else if(theNetworkConnSet==2){
       
          jCheckBox1.setSelected(true);   
          
       }
        
        jTextArea1.setText("Current Sys Date:"+fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "open_day.txt"))+"\n\nComputer Date:"+sdf.format(new Date(System.currentTimeMillis())));
     
       Timer t =new Timer(500000,this);
 
  t.setRepeats(false);
  t.start();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

    }//GEN-LAST:event_formWindowClosing

    private void formWindowDeiconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeiconified
     
    }//GEN-LAST:event_formWindowDeiconified

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated
//         MysystemTray theTray=new MysystemTray();
//   theTray.mainTheActual(Login.this);
//   this.dispose();
    }//GEN-LAST:event_formWindowDeactivated

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed

        String localhost = null;
        
        try {
            
            localhost = InetAddress.getLocalHost().getHostAddress();
            
        } catch (UnknownHostException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        
//        JOptionPane.showMessageDialog(this, localhost);
        
        if(jCheckBox1.isSelected()){
       
            
            
            jCheckBox1.setSelected(true);
      
                fios.stringFileWriter(fios.createFileName("emailDetails", "sendMail", "hostAddress.txt"),localhost);
                
//                dbq.updateTheNetworkStatus(2);
            fios.intFileWriterReplace(fios.createFileName("logOut", "completeShutDown", "networkId.txt"),"2");
       }else if(!jCheckBox1.isSelected()){
       
          jCheckBox1.setSelected(false);   
          
                fios.stringFileWriter(fios.createFileName("emailDetails", "sendMail", "hostAddress.txt"),"localhost");  
                
             fios.intFileWriterReplace(fios.createFileName("logOut", "completeShutDown", "networkId.txt"),"1");
                  
       }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
//      dbBackup.backUpTheDataBase("pmms");

JOptionPane.showMessageDialog(this, loan.testTable("newloan05502000510"));
//      zipFiles.createtheZip();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JFrame f = new Login();
                f.setVisible(true);


                f.setTitle("PMMS-LOGIN WINDOW");
            }
        });
    }
    
    private void logInNow(){
//                JOptionPane.showMessageDialog(this, "wwwwwwff");
          if(!dbq.statTableNotEmpety()){

        dbq.initializeSummuryTable();
        }
        
        
         fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "valueDate.txt"),sdf.format(new Date(System.currentTimeMillis())));
        
//        fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "open_day.txt"), sdf.format(new Date(System.currentTimeMillis())));
    String juserid = jTFuserName.getText();
        char [] jpa= jPFpassWord.getPassword();
        String jpassword=String.valueOf(jpa);
        if(juserid.equals("")||jpassword.equals("")){
        JOptionPane.showMessageDialog(this, "Please Enter your user id and password");
        return;
       
        }else{
        
        
        if(dbq.id_Exists(juserid)){
            
        
        
        if(jpassword.equals(dbq.password(juserid))){
            
        fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeUserId.txt"), juserid);  
        
        if(dbq.title(juserid).equals("Cashier")){
            
           fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeUserIdOfficer.txt"), juserid);   
           
         if(parseInt(fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "passWordChange"+juserid+".txt")))==46){
         ChangePassword f = new ChangePassword(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//         f.setUserID(jTFuserName.getText());
        f.pack();
        return;
         }  
            
             dbq.updateLogging_in(juserid, jpassword, dbq.getDBCurrentDate(), dbq.getDBCurrentTime()+"");
        JOptionPane.showMessageDialog(this, "Logged in successfully");
       
        PostingEntryWindow f = new PostingEntryWindow (jTFuserName.getText(),amortDetails);
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
        this.dispose();
        }else if(dbq.title(juserid).equals("Manager")){
            
             fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeUserIdSupervisor.txt"), juserid);
          
         if(parseInt(fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "passWordChange"+juserid+".txt")))==46){
         ChangePassword f = new ChangePassword(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
//        f.setUserID(jTFuserName.getText());
        return;
         }   
             
             
             dbq.updateLogging_in(juserid, jpassword, dbq.getDBCurrentDate(), dbq.getDBCurrentTime()+"");
              fios.intFileWriterReplace(fios.createFileName("loanApplication", "amortValues", "ManagerLoggedIn.txt"), "7");
        JOptionPane.showMessageDialog(this, "Logged in successfully");
        LoanApprovals f = new LoanApprovals(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//         f.setUserID(jTFuserName.getText());
        f.pack();
        this.dispose();
        }else if(dbq.title(juserid).equals("Director")){
            
             fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeUserIdSupervisor.txt"), juserid);
          
         if(parseInt(fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "passWordChange"+juserid+".txt")))==46){
         ChangePassword f = new ChangePassword(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
//        f.setUserID(jTFuserName.getText());
        return;
         }   
             
             
             dbq.updateLogging_in(juserid, jpassword, dbq.getDBCurrentDate(), dbq.getDBCurrentTime()+"");
        JOptionPane.showMessageDialog(this, "Logged in successfully");
        Reportx f = new Reportx(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//         f.setUserID(jTFuserName.getText());
        f.pack();
        this.dispose();
        }
        
        else if(dbq.title(juserid).equals("Loans Officer")){
            
         fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeUserIdManager.txt"), juserid);    
         
         if(parseInt(fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "passWordChange"+juserid+".txt")))==46){
         ChangePassword f = new ChangePassword(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//        f.setUserID(jTFuserName.getText());
        f.pack();
          return;
         }
        
          dbq.updateLogging_in(juserid, jpassword, dbq.getDBCurrentDate(), dbq.getDBCurrentTime()+"");
        JOptionPane.showMessageDialog(this, "Logged in successfully");
        LoanManagmentWindow f = new LoanManagmentWindow(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//         f.setUserID(jTFuserName.getText());
        f.pack();
        this.dispose();
        }else if(dbq.title(juserid).equals("System Admin")){
         fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeUserIdManager.txt"), juserid);    
         
         if(parseInt(fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "passWordChange"+juserid+".txt")))==46){
         ChangePassword f = new ChangePassword(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//        f.setUserID(jTFuserName.getText());
        f.pack();
          return;
         }
        
          dbq.updateLogging_in(juserid, jpassword, dbq.getDBCurrentDate(), dbq.getDBCurrentTime()+"");
        JOptionPane.showMessageDialog(this, "Logged in successfully");
        CreateNewStaff f = new CreateNewStaff(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//         f.setUserID(jTFuserName.getText());
        f.pack();
        this.dispose();
       }else if(dbq.title(juserid).equals("DateStarter")){
        fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeUserIdManager.txt"), juserid);    
         
         if(parseInt(fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "passWordChange"+juserid+".txt")))==46){
         ChangePassword f = new ChangePassword(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//        f.setUserID(jTFuserName.getText());
        f.pack();
          return;
         }
        
          dbq.updateLogging_in(juserid, jpassword, dbq.getDBCurrentDate(), dbq.getDBCurrentTime()+"");
        JOptionPane.showMessageDialog(this, "Logged in successfully");
        CreateNewStaff f = new CreateNewStaff(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//         f.setUserID(jTFuserName.getText());
        f.pack();
        this.dispose();
        
        
        
        }else if(dbq.title(juserid).equals("Supervisor")){
         fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeUserIdManager.txt"), juserid);    
         
         if(parseInt(fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "passWordChange"+juserid+".txt")))==46){
         ChangePassword f = new ChangePassword(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//        f.setUserID(jTFuserName.getText());
        f.pack();
          return;
         }
        
          dbq.updateLogging_in(juserid, jpassword, dbq.getDBCurrentDate(), dbq.getDBCurrentTime()+"");
        JOptionPane.showMessageDialog(this, "Logged in successfully");
        PostingEntryWindow f = new PostingEntryWindow(jTFuserName.getText(),amortDetails);
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//         f.setUserID(jTFuserName.getText());
        f.pack();
        this.dispose();
        }else if(dbq.title(juserid).equals("Accountant")){
         fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeUserIdManager.txt"), juserid);    
         
         if(parseInt(fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "passWordChange"+juserid+".txt")))==46){
         ChangePassword f = new ChangePassword(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//        f.setUserID(jTFuserName.getText());
        f.pack();
          return;
         }
        
          dbq.updateLogging_in(juserid, jpassword, dbq.getDBCurrentDate(), dbq.getDBCurrentTime()+"");
          
        JOptionPane.showMessageDialog(this, "Logged in successfully");
        
        PostingEntryWindow f = new PostingEntryWindow(jTFuserName.getText(),amortDetails);
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//         f.setUserID(jTFuserName.getText());
        f.pack();
        this.dispose();
        }
        
        }else{JOptionPane.showMessageDialog(this, "WRONG PASSWORD");
        return;
        }
        }
        else{
        JOptionPane.showMessageDialog(this, "USER ID NOT FOUND");
        return;
        }
 
        
        }
        
    }

//public void StartSms(){
//        myNewTask = new java.util.TimerTask() {
//            @Override
//            public void run() {
//                if(!conn.testInet()){
//                    myNewTask.cancel();
//                    timer.purge();
//                }else{
//                    sms.processTheSMS(Login.this);
//                   
//                }
//            }
//        };
//    timer.scheduleAtFixedRate(myNewTask, 10*100, 10*100);
//    
//
//    }
//public void StartSmsTimer(){
//    timer1 = new java.util.Timer();
//        myNewTask1 = new java.util.TimerTask() {
//            @Override
//            public void run() {
//           if(timer==null){
//                    timer=new java.util.Timer();
//                     StartSms();
//           }
//            }
//        };
//    timer1.scheduleAtFixedRate(myNewTask1, 10*1000, 10*1000);
//    
//
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPFpassWord;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFuserName;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
     
    }

    @Override
    public void keyPressed(KeyEvent e) {
 
       int code = e.getKeyCode();  
   if (code == KeyEvent.VK_ENTER) {
      
//          JOptionPane.showMessageDialog(this, "wwwwwwff");
          if(!dbq.statTableNotEmpety()){

        dbq.initializeSummuryTable();
        }
      String juserid1 = jTFuserName.getText();
        char [] jpa1= jPFpassWord.getPassword();
        String jpassword1=String.valueOf(jpa1);
        if(juserid1.equals("")||jpassword1.equals("")){
        JOptionPane.showMessageDialog(this, "Please Enter your user id and password");
        return;
       
        }else{
        
        
        if(dbq.id_Exists(juserid1)){
            
        
        
        if(jpassword1.equals(dbq.password(juserid1))){
            
        fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeUserId.txt"), juserid1);  
        
        if(dbq.title(juserid1).equals("System Admin")||dbq.title(juserid1).equals("DateStarter")){
            
           fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeUserIdOfficer.txt"), juserid1);   
           
         if(parseInt(fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "passWordChange"+juserid1+".txt")))==46){
         ChangePassword f = new ChangePassword(jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
//         f.setUserID(jTFuserName.getText());
        f.pack();
        return;
         }  
            
             dbq.updateLogging_in(juserid1, jpassword1, dbq.getDBCurrentDate(), dbq.getDBCurrentTime()+"");
        JOptionPane.showMessageDialog(this, "Logged in successfully");
       
        CreateNewStaff f = new CreateNewStaff (jTFuserName.getText());
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
        this.dispose();
        }else{
            
         String todayStored= fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "open_day.txt"));   
             
        String today=sdf.format(new Date(System.currentTimeMillis()));
        
        if(!todayStored.equalsIgnoreCase(today)){ 
            
//           if(fios.intFileReader(fios.createFileName("logOut", "completeShutDown", "secondOpenDay.txt"))!=90){
           
           JOptionPane.showMessageDialog(this, "Start of Day Not Done");
           
//           } 
            return;
            
            
        } else{
            
            logInNow();
            
//            fios.intFileWriterReplace(fios.createFileName("logOut", "completeShutDown", "secondOpenDay.txt"), "0");
        
        }
    
        
        }   
         }else{JOptionPane.showMessageDialog(this, "WRONG PASSWORD");
        return;
        }
        }
        else{
        JOptionPane.showMessageDialog(this, "USER ID NOT FOUND");
        return;
        }}  
        
//         
//      
//        fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "valueDate.txt"),sdf.format(new Date(System.currentTimeMillis())));  
//      Integer s=1;
//      
//      fios.intFileWriterReplace(fios.createFileName("logOut","completeShutDown","logmeOut.txt"),s.toString() );
//      
//        if(e.getSource().toString().equals(jPFpassWord.toString())){ 
////       String juserid2 = jTFuserName.getText();
////        if(dbq.title(juserid2).equals("Officer")){
//             String todayStored= fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", "activeDate.txt"));  
//             
//        String today=sdf.format(new Date(System.currentTimeMillis()));
//        if(todayStored.equalsIgnoreCase(today)){
//        
//         logInNow(); 
//         
//        } else{
//  
//      
//  fios.stringFileWriter(fios.createFileName("logOut", "completeShutDown", "activeDate.txt"),today);  
//        
//       logInNow();  
//        }
////        }else{ logInNow();  }
//        }else if(e.getSource().toString().equals(jTFuserName.toString())){            
//             
//        
//        
//        }else{
//            
//            logInNow(); 
//        }
    }
    
    }
    

    @Override
    public void keyReleased(KeyEvent e) {
       
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        
      
       this.dispose();
   
  
    }
}
