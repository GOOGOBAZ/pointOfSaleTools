/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package googo.pmms.project2.frames;

import googo.pmms.project2.accountsHelper.Formartter;
import googo.pmms.project2.accountsHelper.PostingMain;
import googo.pmms.project2.accountsHelper.PostingModal;
import googo.pmms.project2.accountsHelper.fileInputOutPutStreams;
import googo.pmms.project2.databases.DatabaseQuaries;
import googo.pmms.project2.databases.loanDatabaseQuaries;
import googo.pmms.project2.excel.CreateExcelWorkBook;
import googo.pmms.project2.frameHelper.HeaderRenderer;
import googo.pmms.project2.frameHelper.IUpdateText;
import googo.pmms.project2.frameHelper.ListDataModel;
import googo.pmms.project2.frameHelper.ListDataModel_1;
import googo.pmms.project2.loanHelper.MaxBorrowed;
import googo.pmms.project2.loanHelper.MaxmumAmountBorrowedFormulas;
import googo.pmms.project2.reportsHelper.OtherLoanReports;
import java.awt.Color;
import java.awt.Component;
import static java.awt.Component.CENTER_ALIGNMENT;
import static java.awt.Component.LEFT_ALIGNMENT;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import static java.lang.Double.parseDouble;
import static java.lang.Integer.parseInt;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author STAT SOLUTIONS
 */
public class WaiveInterest extends javax.swing.JFrame implements MouseListener, IUpdateText, ActionListener{
String userId;

fileInputOutPutStreams fios= new fileInputOutPutStreams();

DatabaseQuaries dbq =new DatabaseQuaries();

OtherLoanReports otherLoans=new  OtherLoanReports();

ListDataModel result;

ListDataModel_1 result1;

int InterestWaive=0,AccumulatedInterestWaive=0,LoanPenaltyWaive=0,SelectAdjustTableWaive=0,In5=0;

Formartter fmt= new Formartter();

 double oldAmount = 0, newAmount,newQaulified=0.0,finalQualified=0;
    List<Object> topups;
   MaxBorrowed mxb=new MaxBorrowed();
//    fileInputOutPutStreams fios= new fileInputOutPutStreams();
    DecimalFormat NumberFormat =new DecimalFormat("#,###.##");
    ArrayList<String> data4, column1;
 ArrayList<ArrayList<String>> data5;
          JOptionPane p;
    PostingModal model ;
    JFrame fi, f,fa,fb,fc;
    Date date;
  SimpleDateFormat sdf =new SimpleDateFormat("dd/MM/yyyy");
  SimpleDateFormat sdk =new SimpleDateFormat("dd.MM.yyyy");
       CreateExcelWorkBook writeExcel= new CreateExcelWorkBook();
// DatabaseQuaries dbq= new DatabaseQuaries();
 MaxmumAmountBorrowedFormulas maxValue= new MaxmumAmountBorrowedFormulas();
 loanDatabaseQuaries loan=new loanDatabaseQuaries();
  DecimalFormat df1 = new DecimalFormat("#,###");
   PostingMain post= new PostingMain(WaiveInterest.this);
//    Formartter fmt = new Formartter();


public WaiveInterest(String userId) {
        initComponents();
 this.userId=userId;
  
 jTable1.setAlignmentX(LEFT_ALIGNMENT);
jTable1.setAlignmentY(CENTER_ALIGNMENT);
jTable1.setAutoscrolls(true);
jTable1.setShowHorizontalLines(true);
jTable1.setShowGrid(true);
jTable1.setRowHeight(30);
jTable1.setGridColor(Color.gray);

 
    jTable1.setSelectionMode (ListSelectionModel.SINGLE_SELECTION);
   jTable1.setRowSelectionAllowed(true);
   jTable1.setColumnSelectionAllowed(true);
  
     jTable1.addMouseListener( this);
        Image img = new ImageIcon(System.getProperty("user.dir")+"/"+"ICON_LOGO.jpg").getImage();
      this.setIconImage(img);
       this.setTitle("WAIVE INCOME"); 
//        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        SelectAdjustTable = new javax.swing.JCheckBox();
        WaiveAccumulatedInterest = new javax.swing.JCheckBox();
        WaiveInterest = new javax.swing.JCheckBox();
        WaiveLoanPenalty = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton51 = new javax.swing.JButton();
        jButton50 = new javax.swing.JButton();
        jButton49 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton38 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton47 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton45 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jButton43 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton44 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jButton46 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jButton48 = new javax.swing.JButton();
        jButton52 = new javax.swing.JButton();
        jButton53 = new javax.swing.JButton();
        jButton54 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton55 = new javax.swing.JButton();
        jButton56 = new javax.swing.JButton();
        jButton57 = new javax.swing.JButton();
        jButton58 = new javax.swing.JButton();
        jButton59 = new javax.swing.JButton();
        jButton60 = new javax.swing.JButton();
        jButton61 = new javax.swing.JButton();
        jButton62 = new javax.swing.JButton();
        jButton63 = new javax.swing.JButton();
        jButton64 = new javax.swing.JButton();
        jButton65 = new javax.swing.JButton();
        jButton66 = new javax.swing.JButton();
        jButton67 = new javax.swing.JButton();
        jButton68 = new javax.swing.JButton();
        jButton69 = new javax.swing.JButton();
        jButton70 = new javax.swing.JButton();
        jButton71 = new javax.swing.JButton();
        jButton72 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1013, 600));
        setPreferredSize(new java.awt.Dimension(2147483647, 2147483647));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(java.awt.SystemColor.activeCaption);
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 204, 153), new java.awt.Color(0, 204, 153)));
        jPanel1.setLayout(null);

        jPanel2.setBackground(java.awt.SystemColor.activeCaption);
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(null);

        SelectAdjustTable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        SelectAdjustTable.setForeground(new java.awt.Color(0, 102, 255));
        SelectAdjustTable.setText("SELECT AND ADJUST FROM TABLE BELOW");
        SelectAdjustTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAdjustTableActionPerformed(evt);
            }
        });
        jPanel2.add(SelectAdjustTable);
        SelectAdjustTable.setBounds(650, 10, 320, 30);

        WaiveAccumulatedInterest.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        WaiveAccumulatedInterest.setText("WAIVE ACCUMULATED INTEREST");
        WaiveAccumulatedInterest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WaiveAccumulatedInterestActionPerformed(evt);
            }
        });
        jPanel2.add(WaiveAccumulatedInterest);
        WaiveAccumulatedInterest.setBounds(180, 10, 260, 30);

        WaiveInterest.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        WaiveInterest.setText("WAIVE INTEREST");
        WaiveInterest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WaiveInterestActionPerformed(evt);
            }
        });
        jPanel2.add(WaiveInterest);
        WaiveInterest.setBounds(10, 10, 160, 30);

        WaiveLoanPenalty.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        WaiveLoanPenalty.setText("WAIVE LOAN PENALTY");
        WaiveLoanPenalty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WaiveLoanPenaltyActionPerformed(evt);
            }
        });
        jPanel2.add(WaiveLoanPenalty);
        WaiveLoanPenalty.setBounds(450, 10, 200, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(20, 10, 980, 50);

        jButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton1.setText("CANCEL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(260, 503, 160, 40);

        jButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton2.setText("WAIVE INCOME");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(90, 503, 160, 40);

        jPanel3.setBackground(java.awt.SystemColor.activeCaption);
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(null);

        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setAutoscrolls(false);
        jTable1.setDropMode(javax.swing.DropMode.ON);
        jTable1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jTable1MouseMoved(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTable1MouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(10, 10, 960, 410);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(20, 60, 980, 440);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1010, 560);

        jButton51.setBackground(new java.awt.Color(0, 51, 51));
        jButton51.setText("jButton5");
        getContentPane().add(jButton51);
        jButton51.setBounds(1800, 360, 73, 23);

        jButton50.setBackground(java.awt.SystemColor.controlLtHighlight);
        jButton50.setText("jButton5");
        getContentPane().add(jButton50);
        jButton50.setBounds(1790, 330, 73, 23);

        jButton49.setBackground(new java.awt.Color(255, 204, 204));
        jButton49.setText("jButton5");
        getContentPane().add(jButton49);
        jButton49.setBounds(1870, 320, 73, 23);

        jButton31.setBackground(new java.awt.Color(255, 204, 153));
        jButton31.setText("Blue");
        getContentPane().add(jButton31);
        jButton31.setBounds(1810, 310, 53, 23);

        jButton38.setBackground(new java.awt.Color(204, 204, 0));
        jButton38.setText("Blue");
        getContentPane().add(jButton38);
        jButton38.setBounds(1810, 290, 53, 23);

        jButton32.setBackground(new java.awt.Color(0, 153, 153));
        jButton32.setText("Blue");
        getContentPane().add(jButton32);
        jButton32.setBounds(1870, 290, 53, 23);

        jButton47.setBackground(new java.awt.Color(204, 255, 204));
        jButton47.setText("Blue");
        getContentPane().add(jButton47);
        jButton47.setBounds(1930, 290, 53, 23);

        jButton29.setBackground(new java.awt.Color(0, 204, 204));
        jButton29.setText("Blue");
        getContentPane().add(jButton29);
        jButton29.setBounds(1920, 270, 53, 23);

        jButton37.setBackground(new java.awt.Color(204, 153, 255));
        jButton37.setText("Blue");
        getContentPane().add(jButton37);
        jButton37.setBounds(1870, 270, 53, 23);

        jButton33.setBackground(new java.awt.Color(152, 198, 94));
        jButton33.setText("Blue");
        getContentPane().add(jButton33);
        jButton33.setBounds(1810, 270, 53, 23);

        jButton35.setBackground(new java.awt.Color(255, 204, 204));
        jButton35.setText("Blue");
        getContentPane().add(jButton35);
        jButton35.setBounds(1810, 250, 53, 23);

        jButton45.setBackground(new java.awt.Color(255, 255, 204));
        jButton45.setText("Blue");
        getContentPane().add(jButton45);
        jButton45.setBounds(1870, 250, 53, 23);

        jButton42.setBackground(new java.awt.Color(0, 204, 102));
        jButton42.setText("Blue");
        getContentPane().add(jButton42);
        jButton42.setBounds(1920, 230, 53, 23);

        jButton43.setBackground(new java.awt.Color(204, 204, 204));
        jButton43.setText("Blue");
        getContentPane().add(jButton43);
        jButton43.setBounds(1870, 230, 53, 23);

        jButton30.setBackground(new java.awt.Color(0, 153, 255));
        jButton30.setText("Blue");
        getContentPane().add(jButton30);
        jButton30.setBounds(1810, 230, 53, 23);

        jButton36.setBackground(java.awt.SystemColor.activeCaption);
        jButton36.setText("Blue");
        getContentPane().add(jButton36);
        jButton36.setBounds(1810, 210, 53, 23);

        jButton44.setBackground(new java.awt.Color(204, 165, 165));
        jButton44.setText("Blue");
        getContentPane().add(jButton44);
        jButton44.setBounds(1870, 210, 53, 23);

        jButton39.setBackground(new java.awt.Color(204, 204, 255));
        jButton39.setText("Blue");
        getContentPane().add(jButton39);
        jButton39.setBounds(1920, 210, 53, 23);

        jButton41.setBackground(java.awt.SystemColor.activeCaption);
        jButton41.setText("Blue");
        getContentPane().add(jButton41);
        jButton41.setBounds(1920, 190, 53, 23);

        jButton46.setBackground(java.awt.SystemColor.activeCaption);
        jButton46.setText("Blue");
        getContentPane().add(jButton46);
        jButton46.setBounds(1870, 190, 53, 23);

        jButton40.setBackground(java.awt.SystemColor.activeCaption);
        jButton40.setText("Blue");
        getContentPane().add(jButton40);
        jButton40.setBounds(1810, 190, 53, 23);

        jButton48.setBackground(new java.awt.Color(201, 222, 223));
        jButton48.setText("Blue");
        getContentPane().add(jButton48);
        jButton48.setBounds(1870, 170, 53, 23);

        jButton52.setBackground(new java.awt.Color(0, 51, 51));
        jButton52.setText("jButton5");
        getContentPane().add(jButton52);
        jButton52.setBounds(1800, 360, 73, 23);

        jButton53.setBackground(java.awt.SystemColor.controlLtHighlight);
        jButton53.setText("jButton5");
        getContentPane().add(jButton53);
        jButton53.setBounds(1790, 330, 73, 23);

        jButton54.setBackground(new java.awt.Color(255, 204, 204));
        jButton54.setText("jButton5");
        getContentPane().add(jButton54);
        jButton54.setBounds(1870, 320, 73, 23);

        jButton34.setBackground(new java.awt.Color(255, 204, 153));
        jButton34.setText("Blue");
        getContentPane().add(jButton34);
        jButton34.setBounds(1810, 310, 53, 23);

        jButton55.setBackground(new java.awt.Color(204, 204, 0));
        jButton55.setText("Blue");
        getContentPane().add(jButton55);
        jButton55.setBounds(1810, 290, 53, 23);

        jButton56.setBackground(new java.awt.Color(0, 153, 153));
        jButton56.setText("Blue");
        getContentPane().add(jButton56);
        jButton56.setBounds(1870, 290, 53, 23);

        jButton57.setBackground(new java.awt.Color(204, 255, 204));
        jButton57.setText("Blue");
        getContentPane().add(jButton57);
        jButton57.setBounds(1930, 290, 53, 23);

        jButton58.setBackground(new java.awt.Color(0, 204, 204));
        jButton58.setText("Blue");
        getContentPane().add(jButton58);
        jButton58.setBounds(1920, 270, 53, 23);

        jButton59.setBackground(new java.awt.Color(204, 153, 255));
        jButton59.setText("Blue");
        getContentPane().add(jButton59);
        jButton59.setBounds(1870, 270, 53, 23);

        jButton60.setBackground(new java.awt.Color(152, 198, 94));
        jButton60.setText("Blue");
        getContentPane().add(jButton60);
        jButton60.setBounds(1810, 270, 53, 23);

        jButton61.setBackground(new java.awt.Color(255, 204, 204));
        jButton61.setText("Blue");
        getContentPane().add(jButton61);
        jButton61.setBounds(1810, 250, 53, 23);

        jButton62.setBackground(new java.awt.Color(255, 255, 204));
        jButton62.setText("Blue");
        getContentPane().add(jButton62);
        jButton62.setBounds(1870, 250, 53, 23);

        jButton63.setBackground(new java.awt.Color(0, 204, 102));
        jButton63.setText("Blue");
        getContentPane().add(jButton63);
        jButton63.setBounds(1920, 230, 53, 23);

        jButton64.setBackground(new java.awt.Color(204, 204, 204));
        jButton64.setText("Blue");
        getContentPane().add(jButton64);
        jButton64.setBounds(1870, 230, 53, 23);

        jButton65.setBackground(new java.awt.Color(0, 153, 255));
        jButton65.setText("Blue");
        getContentPane().add(jButton65);
        jButton65.setBounds(1810, 230, 53, 23);

        jButton66.setBackground(java.awt.SystemColor.activeCaption);
        jButton66.setText("Blue");
        getContentPane().add(jButton66);
        jButton66.setBounds(1810, 210, 53, 23);

        jButton67.setBackground(new java.awt.Color(204, 165, 165));
        jButton67.setText("Blue");
        getContentPane().add(jButton67);
        jButton67.setBounds(1870, 210, 53, 23);

        jButton68.setBackground(new java.awt.Color(204, 204, 255));
        jButton68.setText("Blue");
        getContentPane().add(jButton68);
        jButton68.setBounds(1920, 210, 53, 23);

        jButton69.setBackground(java.awt.SystemColor.activeCaption);
        jButton69.setText("Blue");
        getContentPane().add(jButton69);
        jButton69.setBounds(1920, 190, 53, 23);

        jButton70.setBackground(java.awt.SystemColor.activeCaption);
        jButton70.setText("Blue");
        getContentPane().add(jButton70);
        jButton70.setBounds(1870, 190, 53, 23);

        jButton71.setBackground(java.awt.SystemColor.activeCaption);
        jButton71.setText("Blue");
        getContentPane().add(jButton71);
        jButton71.setBounds(1810, 190, 53, 23);

        jButton72.setBackground(new java.awt.Color(201, 222, 223));
        jButton72.setText("Blue");
        getContentPane().add(jButton72);
        jButton72.setBounds(1870, 170, 53, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

     
    result1=  otherLoans.amortScheduleWaive(fios.stringFileReader(fios.createFileName("PMMS_Statements", "reports", "portfolioOwnerAccount.txt")));
//            createBatchPostingLoansSpecial(fios.stringFileReader(fios.createFileName("logOut", "completeShutDown", userId+"batchPosintNo.txt")));
 
    jTable1.setModel(result1);
    
    TableRowSorter<ListDataModel_1> sorter = new TableRowSorter<>(result1);

        jTable1.setRowSorter(sorter); 
   

   HeaderRenderer header = new HeaderRenderer(jTable1.getTableHeader().getDefaultRenderer());
        int h=0;

        jTable1.getColumnModel().getColumns().nextElement().setResizable(false);
        while(h<jTable1.getColumnModel().getColumnCount()){
        jTable1.getColumnModel().getColumn(h).setHeaderRenderer(header);

        if(h==0){
        jTable1.getColumnModel().getColumn(h).setMinWidth(0);
        jTable1.getColumnModel().getColumn(h).setMaxWidth(1000);
        jTable1.getColumnModel().getColumn(h).setPreferredWidth(110);

        }
        if(h==1){
        jTable1.getColumnModel().getColumn(h).setMinWidth(0);
        jTable1.getColumnModel().getColumn(h).setMaxWidth(1000);
        jTable1.getColumnModel().getColumn(h).setPreferredWidth(110);
        }
        if(h==2){
        jTable1.getColumnModel().getColumn(h).setMinWidth(0);
        jTable1.getColumnModel().getColumn(h).setMaxWidth(1000);
        jTable1.getColumnModel().getColumn(h).setPreferredWidth(150);
        }if(h==3){
        jTable1.getColumnModel().getColumn(h).setMinWidth(4);
        jTable1.getColumnModel().getColumn(h).setMaxWidth(1000);
        jTable1.getColumnModel().getColumn(h).setPreferredWidth(150);
           }if(h==4){
        jTable1.getColumnModel().getColumn(h).setMinWidth(4);
        jTable1.getColumnModel().getColumn(h).setMaxWidth(1000);
        jTable1.getColumnModel().getColumn(h).setPreferredWidth(150);
        }if(h==5){
        jTable1.getColumnModel().getColumn(h).setMinWidth(4);
        jTable1.getColumnModel().getColumn(h).setMaxWidth(1000);
        jTable1.getColumnModel().getColumn(h).setPreferredWidth(150);
        }if(h==6){
        jTable1.getColumnModel().getColumn(h).setMinWidth(4);
        jTable1.getColumnModel().getColumn(h).setMaxWidth(1000);
        jTable1.getColumnModel().getColumn(h).setPreferredWidth(50);
        }
        h++;

        }
     
        jTable1.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {

        this.setHorizontalAlignment(JLabel.LEFT);


        if(row==table.getRowCount()-1){
        this.setFont(new Font("Arial",Font.BOLD,20));
        }else{
        this.setFont(new Font("Arial",Font.PLAIN,18));
        }
        
if(col==6){
this.setValue(value);

}else if(col>=2&&col<=4){
 this.setText(fmt.formatForStatementNumbers(value.toString()));

}else{
 this.setText(value.toString());
}

       
       
//        }
        if (row%2==0) {
        setBackground(jButton49.getBackground());
        setForeground(jButton51.getBackground());
//        if(isSelected){
//            
//            setBackground(Color.CYAN);
//        
//        }
        } else {
        setBackground(jButton50.getBackground());
        setForeground(jButton51.getBackground());
      
        
        }  
  if(isSelected){
            
      setBackground (Color.blue);
   setForeground (Color.white);
        
        
        }

        return this;
        }   
        });

    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      Object[] optionsx = {"Yes",  "No"};
    int nx = JOptionPane.showOptionDialog(this,  "ARE YOU SURE YOU WANT TO CANCEL WAIVE OF INTEREST??",
    "CANCEL WAIVE OF INTEREST", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,optionsx, optionsx[0]);
    if(nx==JOptionPane.YES_OPTION){
        JOptionPane.showMessageDialog(this, "Waive of interest was sucessfully cancelled!!");
     
        this.dispose();
    }
    else if (nx==JOptionPane.NO_OPTION){ this.setVisible(true);}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void WaiveLoanPenaltyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WaiveLoanPenaltyActionPerformed
          if(WaiveLoanPenalty.isSelected()){
          LoanPenaltyWaive=1;
            WaiveLoanPenalty.setSelected(true);
//    jCheckBox1.setSelected(false);
//    jPanel3.setVisible(false);
//     SelectAdjustTableWaive=0;
     
     }else if(!WaiveLoanPenalty.isSelected()){
          LoanPenaltyWaive=0;
            WaiveLoanPenalty.setSelected(false);
 
     }
    }//GEN-LAST:event_WaiveLoanPenaltyActionPerformed

    private void WaiveAccumulatedInterestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WaiveAccumulatedInterestActionPerformed
             if(WaiveAccumulatedInterest.isSelected()){
           AccumulatedInterestWaive=1;
            WaiveAccumulatedInterest.setSelected(true);
//            jPanel3.setVisible(false);
//      jCheckBox1.setSelected(false);
//     SelectAdjustTableWaive=0;
     }else if(!WaiveAccumulatedInterest.isSelected()){
           AccumulatedInterestWaive=0;
            WaiveAccumulatedInterest.setSelected(false);
    
     }
    }//GEN-LAST:event_WaiveAccumulatedInterestActionPerformed

    private void SelectAdjustTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAdjustTableActionPerformed
                if(SelectAdjustTable.isSelected()){
              SelectAdjustTableWaive=1;
            SelectAdjustTable.setSelected(true);
//              LoanPenaltyWaive=0;
//            jCheckBox4.setSelected(false);
//            AccumulatedInterestWaive=0;
//            jCheckBox2.setSelected(false);
//             InterestWaive=0;
//        jCheckBox3.setSelected(false);
//        jPanel3.setVisible(true);
     }else if(!SelectAdjustTable.isSelected()){
              SelectAdjustTableWaive=0;

            SelectAdjustTable.setSelected(false);
//     jPanel3.setVisible(false);
     }
    }//GEN-LAST:event_SelectAdjustTableActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
jTable1.repaint();
        
        
        boolean test=false;
        
         if(InterestWaive==1&&AccumulatedInterestWaive==0&&LoanPenaltyWaive==0&&SelectAdjustTableWaive==0){
         
         loan.waiveInterest(fios.stringFileReader(fios.createFileName("PMMS_Statements", "reports", "portfolioOwnerAccount.txt")),this);
         
         JOptionPane.showMessageDialog(this, "Interest was successfully waived!!!");
         
         }else if(InterestWaive==0&&AccumulatedInterestWaive==1&&LoanPenaltyWaive==0&&SelectAdjustTableWaive==0){
             loan.waiveAccumulatedInterest(fios.stringFileReader(fios.createFileName("PMMS_Statements", "reports", "portfolioOwnerAccount.txt")),this);
  JOptionPane.showMessageDialog(this, "Accumulated Interest was successfully waived!!!");
    
    }  else if(InterestWaive==0&&AccumulatedInterestWaive==0&&LoanPenaltyWaive==1&&SelectAdjustTableWaive==0){
    loan.waiveLoanPenalty(fios.stringFileReader(fios.createFileName("PMMS_Statements", "reports", "portfolioOwnerAccount.txt")),this);
  JOptionPane.showMessageDialog(this, "Loan Penalty was successfully waived!!!");
    
    
    }else if(InterestWaive==1&&AccumulatedInterestWaive==0&&LoanPenaltyWaive==0&&SelectAdjustTableWaive==1){
        List<List> waveDetailsc1=new ArrayList();
       
 ListDataModel_1 original = (ListDataModel_1)jTable1.getModel();
  


for (int targetRow = 0; targetRow < original.getRowCount(); targetRow++) {
    
int t=0; List waveDetails1=new ArrayList();

 if((boolean)(original.getValueAt(targetRow, 6))){
      
    test=true;
     while(t<original.getRow(targetRow).size()){
     
         
         if(t==1){
           waveDetails1.add(parseInt(original.getRow(targetRow).get(1).toString().trim()));//Instalment No
         
         }
   if(t==2){
           waveDetails1.add(parseDouble(original.getRow(targetRow).get(2).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Interest
         
         }
     if(t==3){
           waveDetails1.add(parseDouble(original.getRow(targetRow).get(3).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Penalty
         
         }
      if(t==4){
           waveDetails1.add(parseDouble(original.getRow(targetRow).get(4).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Accumulated Interest
         
         }
    t++;
     } }

waveDetailsc1.add(waveDetails1);
}

if(waveDetailsc1.size()>0){
loan.waiveInterestAccumPenalAsTable(waveDetailsc1,"interestOnly",this);

if(test){
  JOptionPane.showMessageDialog(this, "Selected Table Interest was successfully waived!!!");
}else{

 JOptionPane.showMessageDialog(this, "Waive of Interest Failed, No item in the table was selected!!!");

}
}else{
 JOptionPane.showMessageDialog(this, "Waive of Interest Failed, No item in the table was selected!!!");
}
    
    
    
    
    }else if(InterestWaive==0&&AccumulatedInterestWaive==1&&LoanPenaltyWaive==0&&SelectAdjustTableWaive==1){
    
    List<List> waveDetailsc1x=new ArrayList();
       
 ListDataModel_1 original = (ListDataModel_1)jTable1.getModel();
  


for (int targetRow = 0; targetRow < original.getRowCount(); targetRow++) {
    
int t=0; List waveDetails1x=new ArrayList();

 if((boolean)(original.getValueAt(targetRow, 6))){
      
    test=true;
     while(t<original.getRow(targetRow).size()){
     
         
         if(t==1){
           waveDetails1x.add(parseInt(original.getRow(targetRow).get(1).toString().trim()));//Instalment No
         
         }
   if(t==2){
           waveDetails1x.add(parseDouble(original.getRow(targetRow).get(2).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Interest
         
         }
     if(t==3){
           waveDetails1x.add(parseDouble(original.getRow(targetRow).get(3).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Penalty
         
         }
      if(t==4){
           waveDetails1x.add(parseDouble(original.getRow(targetRow).get(4).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Accumulated Interest
         
         }
    t++;
     } }

waveDetailsc1x.add(waveDetails1x);
}

if(waveDetailsc1x.size()>0){
loan.waiveInterestAccumPenalAsTable(waveDetailsc1x,"acuuminterestOnly",this);

if(test){
  JOptionPane.showMessageDialog(this, "Selected Table Accumulated Interest was successfully waived!!!");
}else{

 JOptionPane.showMessageDialog(this, "Waive of Accumulated Interest Failed, No item in the table was selected!!!");

}
}else{
 JOptionPane.showMessageDialog(this, "Waive of Accumulated Interest Failed, No item in the table was selected!!!");
}
   
    
    }else if(InterestWaive==0&&AccumulatedInterestWaive==0&&LoanPenaltyWaive==1&&SelectAdjustTableWaive==1){
        
    List<List> waveDetailsc1xz=new ArrayList();
       
 ListDataModel_1 original = (ListDataModel_1)jTable1.getModel();
  


for (int targetRowz = 0; targetRowz < original.getRowCount(); targetRowz++) {
    
int t=0; List waveDetails1xz=new ArrayList();

 if((boolean)(original.getValueAt(targetRowz, 6))){
      
    test=true;
     while(t<original.getRow(targetRowz).size()){
     
         
         if(t==1){
           waveDetails1xz.add(parseInt(original.getRow(targetRowz).get(1).toString().trim()));//Instalment No
         
         }
   if(t==2){
           waveDetails1xz.add(parseDouble(original.getRow(targetRowz).get(2).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Interest
         
         }
     if(t==3){
           waveDetails1xz.add(parseDouble(original.getRow(targetRowz).get(3).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Penalty
         
         }
      if(t==4){
           waveDetails1xz.add(parseDouble(original.getRow(targetRowz).get(4).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Accumulated Interest
         
         }
    t++;
     } }

waveDetailsc1xz.add(waveDetails1xz);
}

if(waveDetailsc1xz.size()>0){
loan.waiveInterestAccumPenalAsTable(waveDetailsc1xz,"loanPenaltyOnly",this);

if(test){
  JOptionPane.showMessageDialog(this, "Selected Table Accumulated Interest was successfully waived!!!");
}else{

 JOptionPane.showMessageDialog(this, "Waive of Accumulated Interest Failed, No item in the table was selected!!!");

}
}else{
 JOptionPane.showMessageDialog(this, "Waive of Accumulated Interest Failed, No item in the table was selected!!!");
}
    
    
    
    }else if(InterestWaive==1&&AccumulatedInterestWaive==1&&LoanPenaltyWaive==0&&SelectAdjustTableWaive==1){
    
    List<List> waveDetailsc1xza=new ArrayList();
       
 ListDataModel_1 originala = (ListDataModel_1)jTable1.getModel();
  


for (int targetRowza = 0; targetRowza < originala.getRowCount(); targetRowza++) {
    
int t=0; List waveDetails1xza=new ArrayList();

 if((boolean)(originala.getValueAt(targetRowza, 6))){
      
    test=true;
     while(t<originala.getRow(targetRowza).size()){
     
         
         if(t==1){
           waveDetails1xza.add(parseInt(originala.getRow(targetRowza).get(1).toString().trim()));//Instalment No
         
         }
   if(t==2){
           waveDetails1xza.add(parseDouble(originala.getRow(targetRowza).get(2).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Interest
         
         }
     if(t==3){
           waveDetails1xza.add(parseDouble(originala.getRow(targetRowza).get(3).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Penalty
         
         }
      if(t==4){
           waveDetails1xza.add(parseDouble(originala.getRow(targetRowza).get(4).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Accumulated Interest
         
         }
    t++;
     } }

waveDetailsc1xza.add(waveDetails1xza);
}

if(waveDetailsc1xza.size()>0){
loan.waiveInterestAccumPenalAsTable(waveDetailsc1xza,"interestAndAccumulatedOnly",this);

if(test){
  JOptionPane.showMessageDialog(this, "Selected Table Accumulated Interest and Interest was successfully waived!!!");
}else{

 JOptionPane.showMessageDialog(this, "Waive of Accumulated Interest and Interest Failed, No item in the table was selected!!!");

}
}else{
 JOptionPane.showMessageDialog(this, "Waive of Accumulated Interest and Interest Failed, No item in the table was selected!!!");
}
    
    }else if(InterestWaive==0&&AccumulatedInterestWaive==1&&LoanPenaltyWaive==1&&SelectAdjustTableWaive==1){
        
    List<List> waveDetailsc1xzal=new ArrayList();
       
 ListDataModel_1 originalal = (ListDataModel_1)jTable1.getModel();
  


for (int targetRowzal = 0; targetRowzal < originalal.getRowCount(); targetRowzal++) {
    
int t=0; List waveDetails1xzal=new ArrayList();

 if((boolean)(originalal.getValueAt(targetRowzal, 6))){
      
    test=true;
     while(t<originalal.getRow(targetRowzal).size()){
     
         
         if(t==1){
           waveDetails1xzal.add(parseInt(originalal.getRow(targetRowzal).get(1).toString().trim()));//Instalment No
         
         }
   if(t==2){
           waveDetails1xzal.add(parseDouble(originalal.getRow(targetRowzal).get(2).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Interest
         
         }
     if(t==3){
           waveDetails1xzal.add(parseDouble(originalal.getRow(targetRowzal).get(3).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Penalty
         
         }
      if(t==4){
           waveDetails1xzal.add(parseDouble(originalal.getRow(targetRowzal).get(4).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Accumulated Interest
         
         }
    t++;
     } }

waveDetailsc1xzal.add(waveDetails1xzal);
}

if(waveDetailsc1xzal.size()>0){
loan.waiveInterestAccumPenalAsTable(waveDetailsc1xzal,"AccumulatedAndLoanPenaltyOnly",this);

if(test){
  JOptionPane.showMessageDialog(this, "Selected Table Accumulated Interest and Loan Penalty was successfully waived!!!");
}else{

 JOptionPane.showMessageDialog(this, "Waive of Accumulated Interest and Loan Penalty, No item in the table was selected!!!");

}
}else{
 JOptionPane.showMessageDialog(this, "Waive of Accumulated Interest and Loan Penalty Failed, No item in the table was selected!!!");
}
    
    
    }else if(InterestWaive==1&&AccumulatedInterestWaive==0&&LoanPenaltyWaive==1&&SelectAdjustTableWaive==1){
    List<List> waveDetailsc1xzalv=new ArrayList();
       
 ListDataModel_1 originalalv = (ListDataModel_1)jTable1.getModel();
  


for (int targetRowzalv = 0; targetRowzalv < originalalv.getRowCount(); targetRowzalv++) {
    
int t=0; List waveDetails1xzalv=new ArrayList();

 if((boolean)(originalalv.getValueAt(targetRowzalv, 6))){
      
    test=true;
     while(t<originalalv.getRow(targetRowzalv).size()){
     
         
         if(t==1){
           waveDetails1xzalv.add(parseInt(originalalv.getRow(targetRowzalv).get(1).toString().trim()));//Instalment No
         
         }
   if(t==2){
           waveDetails1xzalv.add(parseDouble(originalalv.getRow(targetRowzalv).get(2).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Interest
         
         }
     if(t==3){
           waveDetails1xzalv.add(parseDouble(originalalv.getRow(targetRowzalv).get(3).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Penalty
         
         }
      if(t==4){
           waveDetails1xzalv.add(parseDouble(originalalv.getRow(targetRowzalv).get(4).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Accumulated Interest
         
         }
    t++;
     } }

waveDetailsc1xzalv.add(waveDetails1xzalv);
}

if(waveDetailsc1xzalv.size()>0){
loan.waiveInterestAccumPenalAsTable(waveDetailsc1xzalv,"interestAndPenaltyOnly",this);

if(test){
  JOptionPane.showMessageDialog(this, "Selected Table Interest and Loan Penalty was successfully waived!!!");
}else{

 JOptionPane.showMessageDialog(this, "Waive ofInterest and Loan Penalty, No item in the table was selected!!!");

}
}else{
 JOptionPane.showMessageDialog(this, "Waive of  Interest and Loan Penalty Failed, No item in the table was selected!!!");
}
    
    
    }else if(InterestWaive==1&&AccumulatedInterestWaive==1&&LoanPenaltyWaive==1&&SelectAdjustTableWaive==1){
    
     List<List> waveDetailsc=new ArrayList();
       
 ListDataModel_1 original = (ListDataModel_1)jTable1.getModel();
  


for (int targetRow = 0; targetRow < original.getRowCount(); targetRow++) {
    
int t=0; List waveDetails=new ArrayList();

 if((boolean)(original.getValueAt(targetRow, 6))){
      
    test=true;
     while(t<original.getRow(targetRow).size()){
     
         
         if(t==1){
           waveDetails.add(parseInt(original.getRow(targetRow).get(1).toString().trim()));//Instalment No
         
         }
   if(t==2){
           waveDetails.add(parseDouble(original.getRow(targetRow).get(2).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Interest
         
         }
     if(t==3){
           waveDetails.add(parseDouble(original.getRow(targetRow).get(3).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Penalty
         
         }
      if(t==4){
           waveDetails.add(parseDouble(original.getRow(targetRow).get(4).toString().trim().replace(",", " ").replaceAll("\\s+","")));//Accumulated Interest
         
         }
    t++;
     } }

waveDetailsc.add(waveDetails);
}

if(waveDetailsc.size()>0){
loan.waiveInterestAccumPenalAsTable(waveDetailsc,"all",this);

if(test){
  JOptionPane.showMessageDialog(this, "Selected Table details was successfully waived!!!");
}else{

 JOptionPane.showMessageDialog(this, "Waive of Interest Failed, No item in the table was selected!!!");

}
}else{
 JOptionPane.showMessageDialog(this, "Waive of Interest Failed, No item in the table was selected!!!");
}
    
    }else{
     JOptionPane.showMessageDialog(this, "Please Select the option for Income Waive Off!!!");
    }
    
      this.dispose();   
    
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void WaiveInterestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WaiveInterestActionPerformed
        if(WaiveInterest.isSelected()){
            InterestWaive=1;
            WaiveInterest.setSelected(true);
//            jPanel3.setVisible(false);
// jCheckBox1.setSelected(false);
//     SelectAdjustTableWaive=0;
        }else if(!WaiveInterest.isSelected()){
            InterestWaive=0;
  WaiveInterest.setSelected(false);
 
        }
    }//GEN-LAST:event_WaiveInterestActionPerformed

    private void jTable1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseExited
     jTable1.repaint();
    }//GEN-LAST:event_jTable1MouseExited

    private void jTable1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseMoved
        jTable1.repaint();
    }//GEN-LAST:event_jTable1MouseMoved

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
////        public static String u=AddBatch.this.userId;
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AddBatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AddBatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AddBatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AddBatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AddBatch().setVisible(true);
//            }
//        });
//    }
   private void sortTable(JTable table,JTextField textField){

   
    
TableRowSorter<TableModel> rowSorter  = new TableRowSorter<>(table.getModel());
                     
                      table.setRowSorter(rowSorter);
                     textField.getDocument().addDocumentListener(new DocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = textField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = textField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
    

}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox SelectAdjustTable;
    private javax.swing.JCheckBox WaiveAccumulatedInterest;
    private javax.swing.JCheckBox WaiveInterest;
    private javax.swing.JCheckBox WaiveLoanPenalty;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JButton jButton44;
    private javax.swing.JButton jButton45;
    private javax.swing.JButton jButton46;
    private javax.swing.JButton jButton47;
    private javax.swing.JButton jButton48;
    private javax.swing.JButton jButton49;
    private javax.swing.JButton jButton50;
    private javax.swing.JButton jButton51;
    private javax.swing.JButton jButton52;
    private javax.swing.JButton jButton53;
    private javax.swing.JButton jButton54;
    private javax.swing.JButton jButton55;
    private javax.swing.JButton jButton56;
    private javax.swing.JButton jButton57;
    private javax.swing.JButton jButton58;
    private javax.swing.JButton jButton59;
    private javax.swing.JButton jButton60;
    private javax.swing.JButton jButton61;
    private javax.swing.JButton jButton62;
    private javax.swing.JButton jButton63;
    private javax.swing.JButton jButton64;
    private javax.swing.JButton jButton65;
    private javax.swing.JButton jButton66;
    private javax.swing.JButton jButton67;
    private javax.swing.JButton jButton68;
    private javax.swing.JButton jButton69;
    private javax.swing.JButton jButton70;
    private javax.swing.JButton jButton71;
    private javax.swing.JButton jButton72;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
      
    }

    @Override
    public void mousePressed(MouseEvent e) {
      
    }

    @Override
    public void mouseReleased(MouseEvent e) {
      
    }

    @Override
    public void mouseEntered(MouseEvent e) {
      
    }

    @Override
    public void mouseExited(MouseEvent e) {
        
    }

    @Override
    public void updateText(String text) {
      
    }

    @Override
    public void actionPerformed(ActionEvent e) {
       
    }
}
