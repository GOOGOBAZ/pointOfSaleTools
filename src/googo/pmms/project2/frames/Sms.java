/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package googo.pmms.project2.frames;

import googo.pmms.project2.accountsHelper.FormattingUrlData;
import googo.pmms.project2.accountsHelper.fileInputOutPutStreams;
import googo.pmms.project2.accountsHelper.SendSms;
import googo.pmms.project2.databases.DatabaseQuaries;
import googo.pmms.project2.email.SmsUtility;
import googo.pmms.project2.email.TestConnectivity;
import googo.pmms.project2.excel.CreateExcelWorkBook;
import googo.pmms.project2.frameHelper.HeaderRenderer;
import googo.pmms.project2.frameHelper.PureListModel;
import java.math.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.print.PrinterException;
import java.io.File;
import java.io.IOException;
import static java.lang.Integer.parseInt;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.SwingWorker;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeSelectionModel;


/**
 *
 * @author Stanchart
 */
public class Sms extends javax.swing.JFrame implements MouseListener{
fileInputOutPutStreams fios= new fileInputOutPutStreams();
SendSms send= new SendSms();
DatabaseQuaries dbq =new DatabaseQuaries();
   String userId;
   SmsUtility sms= new SmsUtility();
  TestConnectivity conn=new TestConnectivity(); 
    SimpleDateFormat sdk =new SimpleDateFormat("dd.MM.yyyy");
       CreateExcelWorkBook writeExcel= new CreateExcelWorkBook();
       FormattingUrlData data1=new FormattingUrlData();
      Component c;List amortDetails;
    /**
     * Creates new form email
     * @param userid
     */
    public Sms(String userid) {
        this.userId=userid;
 
        initComponents();
        c=this;
        jTreeNewLoanApplication.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
       jTreeNewLoanApplication.addMouseListener( this);
            java.awt.Image img = new ImageIcon(System.getProperty("user.dir")+"/"+"ICON_LOGO.jpg").getImage();
      this.setIconImage(img);
      this.setTitle("MAIN SMS MODULE-"+dbq.title(userId)); 
      
        
      jTable1.setAlignmentX(LEFT_ALIGNMENT);
jTable1.setAlignmentY(CENTER_ALIGNMENT);
jTable1.setAutoscrolls(true);
jTable1.setRowHeight(30);
jTable1.setGridColor(Color.gray);

jTable1.addMouseListener(this);
    }
public void setUserID(String userid){
this.userId=userid;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTreeNewLoanApplication = new javax.swing.JTree();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jCheckBox19 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(2147483647, 2147483647));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jTreeNewLoanApplication.setBackground(java.awt.SystemColor.activeCaption);
        jTreeNewLoanApplication.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.SystemColor.activeCaption, null));
        jTreeNewLoanApplication.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTreeNewLoanApplication.setForeground(new java.awt.Color(255, 255, 255));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Navigation Guide");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Log Out");
        treeNode1.add(treeNode2);
        jTreeNewLoanApplication.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane1.setViewportView(jTreeNewLoanApplication);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 180, 750);

        jPanel2.setBackground(java.awt.SystemColor.activeCaption);
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(null);

        jPanel3.setBackground(java.awt.SystemColor.activeCaption);
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jPanel3.add(jScrollPane2);
        jScrollPane2.setBounds(10, 10, 1030, 580);

        jButton29.setText("Print");
        jButton29.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton29);
        jButton29.setBounds(10, 590, 110, 40);

        jButton30.setText("Export Excel");
        jButton30.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton30);
        jButton30.setBounds(130, 590, 110, 40);

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
        });
        jPanel3.add(jTextField3);
        jTextField3.setBounds(250, 590, 320, 40);

        jPanel2.add(jPanel3);
        jPanel3.setBounds(0, 90, 1120, 660);

        jPanel4.setBackground(java.awt.SystemColor.activeCaption);
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(null);

        jLabel3.setBackground(java.awt.SystemColor.activeCaption);
        jLabel3.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel3.setForeground(java.awt.SystemColor.controlLtHighlight);
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.add(jLabel3);
        jLabel3.setBounds(0, 50, 1040, 40);

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 51));
        jLabel4.setText("Set Up System SMS Parameters");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
        });
        jPanel4.add(jLabel4);
        jLabel4.setBounds(220, 5, 210, 40);

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 153, 51));
        jLabel9.setText("Send General SMS");
        jLabel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel9MousePressed(evt);
            }
        });
        jPanel4.add(jLabel9);
        jLabel9.setBounds(10, 5, 200, 40);

        jButton1.setFont(jButton1.getFont().deriveFont((jButton1.getFont().getStyle() & ~java.awt.Font.ITALIC) & ~java.awt.Font.BOLD, 14));
        jButton1.setText("REFRESH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1);
        jButton1.setBounds(440, 5, 180, 40);

        jPanel2.add(jPanel4);
        jPanel4.setBounds(0, 0, 1050, 90);

        jPanel5.setBackground(java.awt.SystemColor.activeCaption);
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setDoubleBuffered(false);
        jPanel5.setLayout(null);

        jCheckBox1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox1.setText("Send SMS On Loan Repayments");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox1);
        jCheckBox1.setBounds(10, 140, 360, 40);

        jCheckBox2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox2.setText("Send SMS When The Loan Is Disbursed");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox2);
        jCheckBox2.setBounds(10, 260, 360, 40);

        jCheckBox3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox3.setText("Send SMS On All Customer Account Transactions");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox3);
        jCheckBox3.setBounds(10, 60, 360, 40);

        jCheckBox4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox4.setText("Send SMS On  Savings Transactions");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox4);
        jCheckBox4.setBounds(10, 100, 360, 40);

        jCheckBox5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox5.setText("Send SMS On Withdraws");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox5);
        jCheckBox5.setBounds(10, 300, 360, 40);

        jCheckBox6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox6.setText("Send SMS On Shares Contribution");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox6);
        jCheckBox6.setBounds(10, 180, 360, 40);

        jCheckBox7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox7.setText("Send SMS A Day Before  Instalment Is Due");
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox7);
        jCheckBox7.setBounds(380, 220, 310, 40);

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Accounts  Transactions Options For SMS");
        jLabel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.add(jLabel11);
        jLabel11.setBounds(10, 10, 280, 40);

        jCheckBox8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox8.setText("Send SMS On Devidends Payment");
        jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox8ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox8);
        jCheckBox8.setBounds(10, 220, 360, 40);

        jCheckBox9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox9.setText("Send SMS On Loan Approval");
        jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox9ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox9);
        jCheckBox9.setBounds(380, 140, 310, 40);

        jCheckBox10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox10.setText("Send SMS When Instalment Falls Due");
        jCheckBox10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox10ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox10);
        jCheckBox10.setBounds(380, 260, 310, 40);

        jCheckBox11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox11.setText("Send SMS When Instalment Is In Arrears");
        jCheckBox11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox11ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox11);
        jCheckBox11.setBounds(380, 300, 310, 40);

        jCheckBox12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox12.setText("Send SMS On All Loan Transactions");
        jCheckBox12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox12ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox12);
        jCheckBox12.setBounds(380, 60, 310, 40);

        jCheckBox13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox13.setText("Send SMS When Birth Day Of Customer Is Due");
        jCheckBox13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox13ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox13);
        jCheckBox13.setBounds(700, 140, 330, 40);
        jCheckBox13.setVisible(false);

        jCheckBox14.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox14.setText("Send SMS When The Loan Is Rejected");
        jCheckBox14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox14ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox14);
        jCheckBox14.setBounds(380, 180, 310, 40);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setText("Loans Transactions Options For SMS");
        jLabel12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.add(jLabel12);
        jLabel12.setBounds(380, 10, 280, 40);

        jCheckBox15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox15.setText("Send SMS When The Loan Is Applied");
        jCheckBox15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox15ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox15);
        jCheckBox15.setBounds(380, 100, 310, 40);

        jCheckBox17.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox17.setText("Send SMS When Ledger Is Created");
        jCheckBox17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox17ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox17);
        jCheckBox17.setBounds(700, 60, 330, 40);

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setText("Loans Transactions Options For SMS");
        jLabel13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.add(jLabel13);
        jLabel13.setBounds(700, 10, 280, 40);

        jCheckBox19.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox19.setText("Send To All Numbers For Customer");
        jCheckBox19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox19ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox19);
        jCheckBox19.setBounds(700, 100, 330, 40);

        jCheckBox16.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCheckBox16.setText("Send SMS For Receipt Emphasis");
        jCheckBox16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox16ActionPerformed(evt);
            }
        });
        jPanel5.add(jCheckBox16);
        jCheckBox16.setBounds(380, 340, 310, 40);

        jPanel2.add(jPanel5);
        jPanel5.setBounds(0, 90, 1120, 460);
        jPanel5.setVisible(false);

        jPanel1.setBackground(java.awt.SystemColor.activeCaption);
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        jLabel2.setText("SENDER ID");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(70, 200, 70, 30);
        jPanel1.add(jTextField2);
        jTextField2.setBounds(160, 200, 750, 30);

        jLabel5.setText("TO:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(80, 100, 30, 30);

        jTextArea2.setColumns(1);
        jTextArea2.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(160, 100, 750, 50);

        jTextArea4.setColumns(20);
        jTextArea4.setFont(new java.awt.Font("Arial", 2, 13)); // NOI18N
        jTextArea4.setLineWrap(true);
        jTextArea4.setRows(50);
        jTextArea4.setWrapStyleWord(true);
        jScrollPane5.setViewportView(jTextArea4);

        jPanel1.add(jScrollPane5);
        jScrollPane5.setBounds(160, 270, 750, 290);

        jLabel7.setText("TO:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(80, 100, 30, 30);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("SEND TO:");
        jLabel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jLabel8);
        jLabel8.setBounds(910, 100, 80, 30);

        jComboBox2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "All Customers/Members", "BoardMembers/Staff", "All BorrowingCustomers" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox2);
        jComboBox2.setBounds(990, 100, 130, 30);

        jButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton2.setText("Send");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(450, 610, 140, 40);

        jPanel2.add(jPanel1);
        jPanel1.setBounds(0, 90, 1120, 660);
        jPanel1.setVisible(false);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(180, 0, 1120, 750);

        jButton34.setBackground(new java.awt.Color(204, 165, 165));
        jButton34.setText("Blue");
        getContentPane().add(jButton34);
        jButton34.setBounds(1560, 540, 53, 23);

        jButton26.setBackground(new java.awt.Color(204, 255, 204));
        jButton26.setText("Blue");
        getContentPane().add(jButton26);
        jButton26.setBounds(1640, 540, 53, 23);

        jButton28.setBackground(new java.awt.Color(152, 198, 94));
        jButton28.setText("Blue");
        getContentPane().add(jButton28);
        jButton28.setBounds(1610, 580, 53, 23);

        jButton19.setBackground(new java.awt.Color(255, 204, 204));
        jButton19.setText("Blue");
        getContentPane().add(jButton19);
        jButton19.setBounds(1510, 570, 53, 23);

        jButton22.setBackground(new java.awt.Color(255, 255, 204));
        jButton22.setText("Blue");
        getContentPane().add(jButton22);
        jButton22.setBounds(1480, 560, 53, 23);

        jButton31.setBackground(java.awt.SystemColor.controlLtHighlight);
        jButton31.setText("jButton6");
        getContentPane().add(jButton31);
        jButton31.setBounds(1420, 600, 73, 23);

        jButton32.setBackground(java.awt.SystemColor.controlLtHighlight);
        jButton32.setText("jButton5");
        getContentPane().add(jButton32);
        jButton32.setBounds(1500, 600, 73, 23);

        jButton33.setBackground(new java.awt.Color(201, 222, 223));
        jButton33.setText("Blue");
        getContentPane().add(jButton33);
        jButton33.setBounds(1520, 640, 53, 23);

        jButton35.setBackground(new java.awt.Color(51, 0, 51));
        jButton35.setText("jButton7");
        getContentPane().add(jButton35);
        jButton35.setBounds(1450, 650, 73, 23);

        jButton36.setText("jButton8");
        getContentPane().add(jButton36);
        jButton36.setBounds(1580, 620, 73, 23);

        jButton18.setBackground(new java.awt.Color(204, 204, 204));
        jButton18.setText("Blue");
        getContentPane().add(jButton18);
        jButton18.setBounds(1580, 670, 53, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        
          String respo=""; int numberOfMessages=0;
        
         if(jTextArea2.getText().equalsIgnoreCase("")){
          JOptionPane.showMessageDialog(this, "Please first input the recepient's phone number!!!");
         return;
         }else{
          
           if(jTextField2.getText().equalsIgnoreCase("")){
          JOptionPane.showMessageDialog(this, "Please first input the Sender Id!!!");
         return;
         }else{
             
        
        
   if(jTextArea4.getText().length()>158){
           
               numberOfMessages=Math.round(jTextArea4.getText().length()/158)+1;
          Object[] optionsSF = {"Continue",  "Cancel"};
        int nSF = JOptionPane.showOptionDialog(this,  numberOfMessages+" Messages are going to be sent and reduced from the balance on each message\n"+"Do you want to  continue ?",
        "SEND SMS", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,optionsSF, optionsSF[0]);
        if(nSF==JOptionPane.YES_OPTION){

      
          
   
//      send
               
    if(!send.smsBalanceEnough()){
          JOptionPane.showMessageDialog(this, "Your Sms unit balance is insufficient, Please contact the provider to recharge!!!");
         return;
         }else{
          
//      SwingWorker<Void,Void> processAtPerforming = new SwingWorker(){
//        @Override
//        protected Object doInBackground() throws Exception {    
             
//               JOptionPane.showMessageDialog(this, jTextArea4.getText().length());
               
      String[] message=jTextArea4.getText().split("\\s+");
      
      String[] accountNumber=jTextArea2.getText().split("[;]");
      
     int t=0,tx=0;
     
     String actualMessage="",other="",concats="";
     
     
     while(tx<accountNumber.length){
//         JOptionPane.showMessageDialog(this, tx);
//     JOptionPane.showMessageDialog(this, accountNumber[tx].length());
         if(accountNumber[tx].length()==10){
         
     while(t<message.length){
//         JOptionPane.showMessageDialog(this, message.length);   
    char[] ms=message[t].toCharArray();
    
        int t1=0;
        
     while(t1<ms.length){
         
//      JOptionPane.showMessageDialog(this, ms.length); 
      
//      JOptionPane.showMessageDialog(this, Character.toString(ms[t1]));  
      
other=data1.urlDataFormating(Character.toString(ms[t1]));
         
//  JOptionPane.showMessageDialog(this, other);
        actualMessage = actualMessage.concat(other);

t1++;

     }
     actualMessage = actualMessage.concat("%20");  
         t++;
     }

     
  String mynumbersAC="256"+accountNumber[tx].substring(1, 10); 
     
//     sendTheMessage(String message,String SenderId,String Numbers)
     
   send.sendTheMessage(actualMessage, jTextField2.getText(),mynumbersAC);
 
send.reduceBalanceBulkBalance(numberOfMessages);
 
           }else{
         
       JOptionPane.showMessageDialog(c, "Invalid phone number"+"  "+accountNumber[tx]);
    
         }
     
      tx++;
     }
     
//      return null;
//        }
//        };
//        processAtPerforming.execute();
        
        }
      
        }
        else if (nSF==JOptionPane.NO_OPTION){ return;}
        
        
         }else{
        
          
   
//      send
               
    if(!send.smsBalanceEnough()){
          JOptionPane.showMessageDialog(this, "Your Sms unit balance is insufficient, Please contact the provider to recharge!!!");
         return;
         }else{
          
//      SwingWorker<Void,Void> processAtPerforming = new SwingWorker(){
//        @Override
//        protected Object doInBackground() throws Exception {    
             
//               JOptionPane.showMessageDialog(this, jTextArea4.getText().length());
               
      String[] message=jTextArea4.getText().split("\\s+");
      
      String[] accountNumber=jTextArea2.getText().split("[;]");
      
     int t=0,tx=0;
     
     String actualMessage="",other="",concats="";
     
     
     while(tx<accountNumber.length){
//         JOptionPane.showMessageDialog(this, tx);
//     JOptionPane.showMessageDialog(this, accountNumber[tx].length());
         if(accountNumber[tx].length()==10){
         
     while(t<message.length){
//         JOptionPane.showMessageDialog(this, message.length);   
    char[] ms=message[t].toCharArray();
    
        int t1=0;
        
     while(t1<ms.length){
         
//      JOptionPane.showMessageDialog(this, ms.length); 
      
//      JOptionPane.showMessageDialog(this, Character.toString(ms[t1]));  
      
other=data1.urlDataFormating(Character.toString(ms[t1]));
         
//  JOptionPane.showMessageDialog(this, other);
        actualMessage = actualMessage.concat(other);

t1++;

     }
     actualMessage = actualMessage.concat("%20");  
         t++;
     }

     
  String mynumbersAC="256"+accountNumber[tx].substring(1, 10); 
     
//     sendTheMessage(String message,String SenderId,String Numbers)
     
   send.sendTheMessage(actualMessage, jTextField2.getText(),mynumbersAC);
 
send.reduceBalance();
 
           }else{
         
       JOptionPane.showMessageDialog(c, "Invalid phone number"+"  "+accountNumber[tx]);
    
         }
     
      tx++;
     }
     
//      return null;
//        }
//        };
//        processAtPerforming.execute();
        
        }
      
      
      }
              }
    
   
   
   
   } 
      
       respo="Message sending was Partly successful or Failed!!!";
         
         
         
   JOptionPane.showMessageDialog(this, respo+"");    
         
      
      Sms fxs1 = new Sms (userId);
        fxs1.setVisible(true);
        Dimension screenxs1 = Toolkit.getDefaultToolkit().getScreenSize();
        fxs1.setSize(screenxs1.getSize());
        fxs1.pack();
        this.dispose();  
        
        
    
  
  
  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        int i=1;
     while(i<=5){
     
     JOptionPane.showMessageDialog(this, "SYSTEM LOG OUT ERROR!!!!!!!!!");
     }
    }//GEN-LAST:event_formWindowClosing

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
     
              if(jCheckBox3.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "AllCustomerAccountTransact.txt"), "7");

                jCheckBox8.setEnabled(false);
                jCheckBox4.setEnabled(false);
                jCheckBox1.setEnabled(false);
                jCheckBox6.setEnabled(false);
                jCheckBox2.setEnabled(false);
                jCheckBox5.setEnabled(false);
                        
                        jCheckBox8.setSelected(false);
                jCheckBox4.setSelected(false);
                jCheckBox1.setSelected(false);
                jCheckBox6.setSelected(false);
                jCheckBox2.setSelected(false);
                jCheckBox5.setSelected(false);
fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "DevidendsPayment.txt"), "3");
fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "SavingsPayment.txt"), "3");
fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanPayment.txt"), "3");
fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "SharesContributionPayment.txt"), "3");
fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanDisbursementPayment.txt"), "3");
  fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "WithDrawPayment.txt"), "3");
    fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "ReceiptEmphasis.txt"), "3");
     

              }else if(!jCheckBox3.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "AllCustomerAccountTransact.txt"), "3");
              
                jCheckBox8.setEnabled(true);
                jCheckBox4.setEnabled(true);
                jCheckBox1.setEnabled(true);
                jCheckBox6.setEnabled(true);
                jCheckBox2.setEnabled(true);
                jCheckBox5.setEnabled(true);
              }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox8ActionPerformed
          if(jCheckBox8.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "DevidendsPayment.txt"), "7");
              
              }else if(!jCheckBox8.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "DevidendsPayment.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox8ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
          if(jCheckBox4.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "SavingsPayment.txt"), "7");
              
              }else if(!jCheckBox4.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "SavingsPayment.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
         if(jCheckBox1.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanPayment.txt"), "7");
              
              }else if(!jCheckBox1.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanPayment.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
         if(jCheckBox6.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "SharesContributionPayment.txt"), "7");
              
              }else if(!jCheckBox6.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "SharesContributionPayment.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
         if(jCheckBox2.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanDisbursementPayment.txt"), "7");
              
              }else if(!jCheckBox2.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanDisbursementPayment.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
      if(jCheckBox5.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "WithDrawPayment.txt"), "7");
              
              }else if(!jCheckBox5.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "WithDrawPayment.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jCheckBox15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox15ActionPerformed
          if(jCheckBox15.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanApplied.txt"), "7");
              
              }else if(!jCheckBox15.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanApplied.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox15ActionPerformed

    private void jCheckBox14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox14ActionPerformed
          if(jCheckBox14.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanDeclined.txt"), "7");
              
              }else if(!jCheckBox14.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanDeclined.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox14ActionPerformed

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
  if(jCheckBox9.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanApproved.txt"), "7");
              
              }else if(!jCheckBox9.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanApproved.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox9ActionPerformed

    private void jCheckBox10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox10ActionPerformed
        if(jCheckBox10.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "InstalmentDue.txt"), "7");
              
              }else if(!jCheckBox10.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "InstalmentDue.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox10ActionPerformed

    private void jCheckBox11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox11ActionPerformed
           if(jCheckBox11.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "InstalmentInArrears.txt"), "7");
              
              }else if(!jCheckBox11.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "InstalmentInArrears.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox11ActionPerformed

    private void jCheckBox12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox12ActionPerformed
            if(jCheckBox12.isSelected()){

            jCheckBox15.setEnabled(false);
            jCheckBox14.setEnabled(false);
            jCheckBox9.setEnabled(false);
            jCheckBox10.setEnabled(false);
            jCheckBox11.setEnabled(false);
            jCheckBox7.setEnabled(false);
            jCheckBox15.setSelected(false);
            jCheckBox14.setSelected(false);
            jCheckBox9.setSelected(false);
            jCheckBox10.setSelected(false);
            jCheckBox11.setSelected(false);
            jCheckBox7.setSelected(false);
            fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanApplied.txt"), "3");                      
            fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanDeclined.txt"), "3");   
            fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LoanApproved.txt"), "3");
            fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "InstalmentDue.txt"), "3");
            fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "InstalmentInArrears.txt"), "3");
            fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "TopUpLoan.txt"), "3");
               fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "ReceiptEmphasis.txt"), "3");

            fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "AllLoanTransactions.txt"), "7");

            }else if(!jCheckBox12.isSelected()){

            jCheckBox15.setEnabled(true);
            jCheckBox14.setEnabled(true);
            jCheckBox9.setEnabled(true);
            jCheckBox10.setEnabled(true);
            jCheckBox11.setEnabled(true);
            jCheckBox7.setEnabled(true);
            fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "AllLoanTransactions.txt"), "3");

            }
    }//GEN-LAST:event_jCheckBox12ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
      if(jCheckBox7.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "TopUpLoan.txt"), "7");
              
              }else if(!jCheckBox7.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "TopUpLoan.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jCheckBox17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox17ActionPerformed
     
        
        
        
        
        if(jCheckBox17.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LedgerCreated.txt"), "7");
              
              }else if(!jCheckBox17.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "LedgerCreated.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox17ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
  int units=fios.intFileReader(fios.createFileName("persistence", "loanArrears", "loanAmountNotPaidS.txt"));
       
       if(units<1000){
       
       jLabel3.setText("Your Unit Balance Is Running Low Please Recharge:"+units);
       jLabel3.setForeground(Color.red);
       }else if(units>1000){
       jLabel3.setText("Your Unit Balance Is :"+units);
       
       }
        switch(Math.round(Math.random()*20)+""){

                case "1":
                 jButton32.setBackground(jButton34.getBackground());
                    break;
                case "2":
                    jButton32.setBackground(jButton26.getBackground()); 
                    
                    break;
                case "3":
                     jButton32.setBackground(jButton19.getBackground());
                    break;
                case "4":
                    jButton32.setBackground(jButton18.getBackground()); 
                    break;
                case "5":
                    jButton32.setBackground(jButton33.getBackground()); 
                    break;
                case "6":
                  jButton32.setBackground(jButton28.getBackground());   
                    break;
                case "7":
                   jButton32.setBackground(jButton34.getBackground());  
                    break;
                case "8":
                  jButton32.setBackground(jButton34.getBackground());   
                    break;
                case "9":
                   jButton32.setBackground(jButton26.getBackground());  
                    break;  
                case "10":
                    jButton32.setBackground(jButton34.getBackground()); 
                    break;
                case "11":
                     jButton32.setBackground(jButton28.getBackground());
                    break;
                case "12":
                    jButton32.setBackground(jButton34.getBackground()); 
                    break; 
                case "13":
                     jButton32.setBackground(jButton26.getBackground());
                    break;  
                case "14":
                   jButton32.setBackground(jButton34.getBackground());  
                    break; 
                case "15":
                     jButton32.setBackground(jButton28.getBackground());
                    break;
                case "16":
                  jButton32.setBackground(jButton26.getBackground());   
                    break;  
                case "17":
                     jButton32.setBackground(jButton34.getBackground());
                    break;
                case "18":
                     jButton32.setBackground(jButton33.getBackground());
                    break; 
                case "19":
                     jButton32.setBackground(jButton34.getBackground());
                    break;
                case "20":
                  jButton32.setBackground(jButton33.getBackground());   
                    break;  
             
                        
                    

}

        
        dbq.fillMeWithAllSmsDetails(jTable1);
   HeaderRenderer header = new HeaderRenderer(jTable1.getTableHeader().getDefaultRenderer());    
sortTable(jTable1,jTextField3);   

        int n=0;

jTable1.setShowHorizontalLines(true);
jTable1.setShowGrid(true);
        jTable1.getColumnModel().getColumns().nextElement().setResizable(false);
        while(n<jTable1.getColumnModel().getColumnCount()){
        jTable1.getColumnModel().getColumn(n).setHeaderRenderer(header);

        if(n==0){
        jTable1.getColumnModel().getColumn(n).setMinWidth(0);
        jTable1.getColumnModel().getColumn(n).setMaxWidth(200);
        jTable1.getColumnModel().getColumn(n).setPreferredWidth(60);

        }
        if(n==1){
        jTable1.getColumnModel().getColumn(n).setMinWidth(0);
        jTable1.getColumnModel().getColumn(n).setMaxWidth(600);
        jTable1.getColumnModel().getColumn(n).setPreferredWidth(110);
        }
        if(n==2){
        jTable1.getColumnModel().getColumn(n).setMinWidth(0);
        jTable1.getColumnModel().getColumn(n).setMaxWidth(600);
        jTable1.getColumnModel().getColumn(n).setPreferredWidth(110);
         if(n==3){
        jTable1.getColumnModel().getColumn(n).setMinWidth(0);
        jTable1.getColumnModel().getColumn(n).setMaxWidth(600);
        jTable1.getColumnModel().getColumn(n).setPreferredWidth(300);
        }
          if(n==4){
        jTable1.getColumnModel().getColumn(n).setMinWidth(0);
        jTable1.getColumnModel().getColumn(n).setMaxWidth(600);
        jTable1.getColumnModel().getColumn(n).setPreferredWidth(110);
        }
           if(n==5){
        jTable1.getColumnModel().getColumn(n).setMinWidth(0);
        jTable1.getColumnModel().getColumn(n).setMaxWidth(600);
        jTable1.getColumnModel().getColumn(n).setPreferredWidth(110);
        }
             if(n==6){
        jTable1.getColumnModel().getColumn(n).setMinWidth(0);
        jTable1.getColumnModel().getColumn(n).setMaxWidth(600);
        jTable1.getColumnModel().getColumn(n).setPreferredWidth(110);
        }
               if(n==7){
        jTable1.getColumnModel().getColumn(n).setMinWidth(0);
        jTable1.getColumnModel().getColumn(n).setMaxWidth(600);
        jTable1.getColumnModel().getColumn(n).setPreferredWidth(110);
        }
                     if(n==8){
        jTable1.getColumnModel().getColumn(n).setMinWidth(0);
        jTable1.getColumnModel().getColumn(n).setMaxWidth(100);
        jTable1.getColumnModel().getColumn(n).setPreferredWidth(50);
        }
        }
        n++;

        }
        jTable1.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {

        this.setHorizontalAlignment(JLabel.LEFT);

        this.setFont(new Font("Arial",Font.PLAIN,18));
        
this.setText(value.toString());
        if (row%2==0) {
        setBackground(jButton32.getBackground());
        setForeground(jButton35.getBackground());
        if(isSelected){setBackground(Color.CYAN);}
        } else {
        setBackground(jButton31.getBackground());
        setForeground(jButton35.getBackground());
        if(isSelected){setBackground(Color.CYAN);}
        }  


        return this;
        }   
        });

        
      
        
        
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "AllCustomerAccountTransact.txt"))==7){
        jCheckBox3.setSelected(true);


        jCheckBox8.setEnabled(false);
        jCheckBox4.setEnabled(false);
        jCheckBox1.setEnabled(false);
        jCheckBox6.setEnabled(false);
        jCheckBox2.setEnabled(false);
        jCheckBox5.setEnabled(false);

        jCheckBox8.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox1.setSelected(false);
        jCheckBox6.setSelected(false);
        jCheckBox2.setSelected(false);
        jCheckBox5.setSelected(false);



        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "AllCustomerAccountTransact.txt"))==3){
        jCheckBox3.setSelected(false);}
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "DevidendsPayment.txt"))==7){
        jCheckBox8.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "DevidendsPayment.txt"))==3){
        jCheckBox8.setSelected(false);}
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "SavingsPayment.txt"))==7){
        jCheckBox4.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "SavingsPayment.txt"))==3){
        jCheckBox4.setSelected(false);}
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "LoanPayment.txt"))==7){
        jCheckBox1.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "LoanPayment.txt"))==3){
        jCheckBox1.setSelected(false);}
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "SharesContributionPayment.txt"))==7){
        jCheckBox6.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "SharesContributionPayment.txt"))==3){
        jCheckBox6.setSelected(false);}
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "LoanDisbursementPayment.txt"))==7){
        jCheckBox2.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "LoanDisbursementPayment.txt"))==3){
        jCheckBox2.setSelected(false);}
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "WithDrawPayment.txt"))==7){
        jCheckBox5.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "WithDrawPayment.txt"))==3){
        jCheckBox5.setSelected(false);}
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "LoanApplied.txt"))==7){
        jCheckBox15.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "LoanApplied.txt"))==3){
        jCheckBox15.setSelected(false);}
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "LoanDeclined.txt"))==7){
        jCheckBox14.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "LoanDeclined.txt"))==3){
        jCheckBox14.setSelected(false);}
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "LoanApproved.txt"))==7){
        jCheckBox9.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "LoanApproved.txt"))==3){
        jCheckBox9.setSelected(false);}
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "InstalmentDue.txt"))==7){
        jCheckBox10.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "InstalmentDue.txt"))==3){
        jCheckBox10.setSelected(false);}
        
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "InstalmentInArrears.txt"))==7){
        jCheckBox11.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "InstalmentInArrears.txt"))==3){
        jCheckBox11.setSelected(false);}
        
         if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "ReceiptEmphasis.txt"))==7){
        jCheckBox16.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "ReceiptEmphasis.txt"))==3){
        jCheckBox16.setSelected(false);}
        
        
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "AllLoanTransactions.txt"))==7){

        jCheckBox15.setEnabled(false);
        jCheckBox14.setEnabled(false);
        jCheckBox9.setEnabled(false);
        jCheckBox10.setEnabled(false);
        jCheckBox11.setEnabled(false);
        jCheckBox7.setEnabled(false);
        jCheckBox15.setSelected(false);
        jCheckBox14.setSelected(false);
        jCheckBox9.setSelected(false);
        jCheckBox10.setSelected(false);
        jCheckBox11.setSelected(false);
        jCheckBox16.setSelected(false);
        jCheckBox7.setSelected(false);                        
        jCheckBox12.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "AllLoanTransactions.txt"))==3){
        jCheckBox12.setSelected(false);}
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "TopUpLoan.txt"))==7){
        jCheckBox7.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "TopUpLoan.txt"))==3){
        jCheckBox7.setSelected(false);}
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "LedgerCreated.txt"))==7){
        jCheckBox17.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "LedgerCreated.txt"))==3){
        jCheckBox17.setSelected(false);}
        if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "BirthDayDue.txt"))==7){
        jCheckBox13.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "BirthDayDue.txt"))==3){
        jCheckBox13.setSelected(false);}
 if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "AllNumbers.txt"))==7){
        jCheckBox19.setSelected(true);
        }else if(fios.intFileReader(fios.createFileName("emailDetails", "boxNumber", "AllNumbers.txt"))==3){
        jCheckBox19.setSelected(false);}
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

         SwingWorker<Void,Void> processSms = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
if(conn.testInet()){
         sms.processTheSMS();//When the acculation of the interest is completed in the store, proceed to further processing
}
            return null;   
            } };


            processSms.execute();
        Object[] optionsSF = {"Continue",  "Cancel"};
        int nSF = JOptionPane.showOptionDialog(this,  "Work may not be saved!!!\n"+"Do you want to  continue ?",
        "SAVE PLEASE", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,optionsSF, optionsSF[0]);
        if(nSF==JOptionPane.YES_OPTION){

        Sms f = new Sms(userId);
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
        this.dispose();
        }
        else if (nSF==JOptionPane.NO_OPTION){ this.setVisible(true);}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox13ActionPerformed
    if(jCheckBox13.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "BirthDayDue.txt"), "7");
              
              }else if(!jCheckBox13.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "BirthDayDue.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox13ActionPerformed

    private void jCheckBox19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox19ActionPerformed
        if(jCheckBox19.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "AllNumbers.txt"), "7");
              
              }else if(!jCheckBox19.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "AllNumbers.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox19ActionPerformed

    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed
      jPanel3.setVisible(false);
      jPanel5.setVisible(true);
      jPanel1.setVisible(false);
      
    }//GEN-LAST:event_jLabel4MousePressed

    private void jLabel9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MousePressed
       jPanel3.setVisible(false);
      jPanel5.setVisible(false);
      jPanel1.setVisible(true);
    }//GEN-LAST:event_jLabel9MousePressed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
      try {
             jTable1.print();
         } catch (PrinterException ex) {
             Logger.getLogger(ReportView.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
     String theCounter=getCounter();
        PureListModel original = (PureListModel)jTable1.getModel();
        List<List>  d=new ArrayList();  List c=new ArrayList();
       
      
        
for (int col = 0; col < original.getColumnCount(); col++) {  c.add(original.getColumnName(col));}

d.add(c);

for (int targetRow = 0; targetRow < original.getRowCount(); targetRow++) {
     if((boolean)(original.getValueAt(targetRow, 8))){
    if(!original.getRow(targetRow).isEmpty()){
    d.add(original.getRow(targetRow));
    }}
}


writeExcel.creatExcelFromTable(d,"Recon"+sdk.format(new Date(System.currentTimeMillis()))+theCounter,"table"+sdk.format(new Date(System.currentTimeMillis()))+theCounter);
  
generateFile("table"+sdk.format(new Date(System.currentTimeMillis()))+theCounter);
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3KeyPressed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
  
     
jTextArea2.setText("");
        
        if(jComboBox2.getSelectedItem().toString().equalsIgnoreCase("All Customers/Members")){
jPanel4.setVisible(false);
   List phoneNumbers=     dbq.feelTextAreaWithCustomerPhones(Sms.this);
   
   
    for(Object finalE:phoneNumbers){
    if(!finalE.toString().equalsIgnoreCase("")){
    jTextArea2.append(finalE.toString());
    jTextArea2.append(";");
    }
    
    }
        
        } else if(jComboBox2.getSelectedItem().toString().equalsIgnoreCase("BoardMembers/Staff")){
          jPanel4.setVisible(false);
   List phones=     dbq.feelTextAreaWithBoardStaffDPhone(Sms.this);
   
   
    for(Object finalE:phones){
    if(!finalE.toString().equalsIgnoreCase("")){
    jTextArea2.append(finalE.toString());
    jTextArea2.append(";");
    }}
        
        } else  if(jComboBox2.getSelectedItem().toString().equalsIgnoreCase("All BorrowingCustomers")){
jPanel4.setVisible(false);
   List phoneNumbers=     dbq.feelTextAreaWithCustomerPhonesBorrowing(Sms.this);
   
   
    for(Object finalE:phoneNumbers){
    if(!finalE.toString().equalsIgnoreCase("")){
    jTextArea2.append(finalE.toString());
    jTextArea2.append(";");
    }
    
    }
        
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jCheckBox16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox16ActionPerformed
       if(jCheckBox16.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "ReceiptEmphasis.txt"), "7");
              
              }else if(!jCheckBox16.isSelected()){
              
              fios.intFileWriterReplace(fios.createFileName("emailDetails", "boxNumber", "ReceiptEmphasis.txt"), "3");
              
              }
    }//GEN-LAST:event_jCheckBox16ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(sms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(sms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(sms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(sms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new sms().setVisible(true);
//            }
//        });
//    }
private void sortTable(JTable table,JTextField textField){

   
    
TableRowSorter<TableModel> rowSorter  = new TableRowSorter<>(table.getModel());
                     
                      table.setRowSorter(rowSorter);
                     textField.getDocument().addDocumentListener(new DocumentListener(){

            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = textField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = textField.getText();

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

        });
    

}

 private void generateFile(String fileName){
  JOptionPane.showMessageDialog(this, fileName);  
   
     if (Desktop.isDesktopSupported()) {
      try {
          // no application registered for PDFs
          
          File myFile = new File(fios.createFileName1("Excel", "Files", fileName+".xlsx"));
        
          Desktop.getDesktop().open(myFile);
      } catch (IOException ex) {
          Logger.getLogger(Reportx.class.getName()).log(Level.SEVERE, null, ex);
      }
     }
    
  }
 public String getCounter(){
String thecounter="";
fios.forceFileExistanceHundred(fios.createFileName("loanApplication", "amortValues", "otherCounters.txt"));

thecounter =""+(parseInt(fios.stringFileReader(fios.createFileName("loanApplication", "amortValues", "otherCounters.txt")))+1);

fios.stringFileWriter(fios.createFileName("loanApplication", "amortValues", "otherCounters.txt"), thecounter);

return thecounter;
} 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox19;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTree jTreeNewLoanApplication;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent me) {
     if (me.getClickCount()==2){

  

  
    if(me.getSource()==jTreeNewLoanApplication){
    DefaultMutableTreeNode node = (DefaultMutableTreeNode)jTreeNewLoanApplication.getLastSelectedPathComponent();
    String window =node.toString();
    switch (window){
    
    case "Log Out":
       
    Object[] optionsSGS = {"Continue",  "Cancel"};
    int nSGS = JOptionPane.showOptionDialog(this,  "Work may not be saved!!!\n"+"Do you want to  continue ?",
    "SAVE PLEASE", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,optionsSGS, optionsSGS[0]);
    if(nSGS==JOptionPane.YES_OPTION){
         switch(dbq.title(userId)){
            case "Loans Officer":
         LoanManagmentWindow ffx = new LoanManagmentWindow (userId);
        ffx.setVisible(true);
        Dimension screensx = Toolkit.getDefaultToolkit().getScreenSize();
        ffx.setSize(screensx.getSize());
        ffx.pack();
        this.dispose();
                break;
            case "Accountant":
          PostingEntryWindow fh = new  PostingEntryWindow(userId,amortDetails);
        fh.setVisible(true);
        Dimension screenh = Toolkit.getDefaultToolkit().getScreenSize();
        fh.setSize(screenh.getSize());
        fh.pack();
        this.dispose();
                
                
                break;
            case "Supervisor":
        PostingEntryWindow f = new  PostingEntryWindow(userId,amortDetails);
        f.setVisible(true);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        f.setSize(screen.getSize());
        f.pack();
        this.dispose();
                break;
        
        
           case "Manager":
            LoanApprovals fx = new LoanApprovals (userId);
        fx.setVisible(true);
        Dimension screenx = Toolkit.getDefaultToolkit().getScreenSize();
        fx.setSize(screenx.getSize());
        fx.pack();
        this.dispose();
                break;
         case "Cashier":
       PostingEntryWindow fg = new  PostingEntryWindow(userId,amortDetails);
        fg.setVisible(true);
        Dimension screeng = Toolkit.getDefaultToolkit().getScreenSize();
        fg.setSize(screeng.getSize());
        fg.pack();
        this.dispose();
                break;
               case "System Admin":
            CreateNewStaff fxs1 = new CreateNewStaff (userId);
        fxs1.setVisible(true);
        Dimension screenxs1 = Toolkit.getDefaultToolkit().getScreenSize();
        fxs1.setSize(screenxs1.getSize());
        fxs1.pack();
        this.dispose();
                break;
        }
    
    }
    else if (nSGS==JOptionPane.NO_OPTION){ this.setVisible(true);}
    break;
    }}}
    }
    

    @Override
    public void mousePressed(MouseEvent e) {
  
    }

    @Override
    public void mouseReleased(MouseEvent e) {
       
    }

    @Override
    public void mouseEntered(MouseEvent e) {
     
    }

    @Override
    public void mouseExited(MouseEvent e) {
       
    }
}
